/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.claims.ficr_mt600201ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.MO;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.MOImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.datatype.lang.Money;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.claims.coct_mt280001ca.A_BillableActChoiceBean;
import ca.infoway.messagebuilder.model.claims.coct_mt680000ca.AdjudicatedInvoiceElementGroupBean;
import ca.infoway.messagebuilder.model.merged.BusinessArrangementBean;
import ca.infoway.messagebuilder.model.merged.PolicyIdentifierBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Invoice Grouping Information</p>
 * 
 * <p>The statement and justification of the Total Billed 
 * Amount. For an invoice it is the statement and justification 
 * of the Total Billed amount requesting the determination of 
 * the amount owed by the payor for the service(s) that either 
 * have occurred or are on-going. For an authorization it 
 * represents the statement and justification of an invoice for 
 * a future service requesting the determination of the amount 
 * owed that is guaranteed by the payor. For a 
 * pre-determination, it represents the statement and possible 
 * justification for an invoice for a future service to 
 * determine the possible amount owed by the payor.</p>
 * 
 * <p>There are some situations where all items for a patient 
 * need to be included in 1 Invoice Grouping, as the final 
 * determination (adjudication results) will not be made until 
 * all invoice elements are considered for that patient.</p>
 */
@Hl7PartTypeMapping({"FICR_MT600201CA.InvoiceElementGroup"})
public class InvoiceGroupingInformationBean extends MessagePartBean implements InvoiceElementChoiceBean {

    private static final long serialVersionUID = 20100614L;
    private List<A_BillableActChoiceBean> reasonOfBillableActChoice = new ArrayList<A_BillableActChoiceBean>();
    private II invoiceGroupingIdentifierS = new IIImpl();
    private CV invoiceType = new CVImpl();
    private IVL<TS, Interval<Date>> timePeriodForInvoice = new IVLImpl<TS, Interval<Date>>();
    private MO invoiceSubTotal = new MOImpl();
    private BusinessArrangementBean inFulfillmentOfFinancialContract;
    private List<CrossReferenceIdentifierBean> predecessorInvoiceElementCrossReference = new ArrayList<CrossReferenceIdentifierBean>();
    private List<AdjudicatedInvoiceElementGroupBean> referenceAdjudicatedInvoiceElementGroup = new ArrayList<AdjudicatedInvoiceElementGroupBean>();
    private List<PolicyIdentifierBean> coveragePolicyOrAccount = new ArrayList<PolicyIdentifierBean>();
    private List<AttachmentsBean> pertinentInformation = new ArrayList<AttachmentsBean>();
    private List<InvoiceComponentBean> component = new ArrayList<InvoiceComponentBean>();
    private List<InvoiceOverrideDetailsBean> triggerForInvoiceElementOverride = new ArrayList<InvoiceOverrideDetailsBean>();

    @Hl7XmlMapping({"reasonOf/billableActChoice"})
    public List<A_BillableActChoiceBean> getReasonOfBillableActChoice() {
        return this.reasonOfBillableActChoice;
    }

    @Hl7XmlMapping({"id"})
    public Identifier getInvoiceGroupingIdentifierS() {
        return this.invoiceGroupingIdentifierS.getValue();
    }
    public void setInvoiceGroupingIdentifierS(Identifier invoiceGroupingIdentifierS) {
        this.invoiceGroupingIdentifierS.setValue(invoiceGroupingIdentifierS);
    }

    @Hl7XmlMapping({"code"})
    public Code getInvoiceType() {
        return (Code) this.invoiceType.getValue();
    }
    public void setInvoiceType(Code invoiceType) {
        this.invoiceType.setValue(invoiceType);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getTimePeriodForInvoice() {
        return this.timePeriodForInvoice.getValue();
    }
    public void setTimePeriodForInvoice(Interval<Date> timePeriodForInvoice) {
        this.timePeriodForInvoice.setValue(timePeriodForInvoice);
    }

    @Hl7XmlMapping({"netAmt"})
    public Money getInvoiceSubTotal() {
        return this.invoiceSubTotal.getValue();
    }
    public void setInvoiceSubTotal(Money invoiceSubTotal) {
        this.invoiceSubTotal.setValue(invoiceSubTotal);
    }

    @Hl7XmlMapping({"inFulfillmentOf/financialContract"})
    public BusinessArrangementBean getInFulfillmentOfFinancialContract() {
        return this.inFulfillmentOfFinancialContract;
    }
    public void setInFulfillmentOfFinancialContract(BusinessArrangementBean inFulfillmentOfFinancialContract) {
        this.inFulfillmentOfFinancialContract = inFulfillmentOfFinancialContract;
    }

    @Hl7XmlMapping({"predecessor/invoiceElementCrossReference"})
    public List<CrossReferenceIdentifierBean> getPredecessorInvoiceElementCrossReference() {
        return this.predecessorInvoiceElementCrossReference;
    }

    @Hl7XmlMapping({"reference/adjudicatedInvoiceElementGroup"})
    public List<AdjudicatedInvoiceElementGroupBean> getReferenceAdjudicatedInvoiceElementGroup() {
        return this.referenceAdjudicatedInvoiceElementGroup;
    }

    @Hl7XmlMapping({"coverage/policyOrAccount"})
    public List<PolicyIdentifierBean> getCoveragePolicyOrAccount() {
        return this.coveragePolicyOrAccount;
    }

    @Hl7XmlMapping({"pertinentInformation"})
    public List<AttachmentsBean> getPertinentInformation() {
        return this.pertinentInformation;
    }

    @Hl7XmlMapping({"component"})
    public List<InvoiceComponentBean> getComponent() {
        return this.component;
    }

    @Hl7XmlMapping({"triggerFor/invoiceElementOverride"})
    public List<InvoiceOverrideDetailsBean> getTriggerForInvoiceElementOverride() {
        return this.triggerForInvoiceElementOverride;
    }

}
