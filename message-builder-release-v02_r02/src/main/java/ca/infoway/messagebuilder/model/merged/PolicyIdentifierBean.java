/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActCode;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.claims.ficr_mt600201ca.CoveredPartyAsPatientChoiceBean;
import ca.infoway.messagebuilder.model.claims.ficr_mt600201ca.Subject_1Bean;
import java.util.ArrayList;
import java.util.List;



@Hl7PartTypeMapping({"FICR_MT600201CA.PolicyOrAccount","FICR_MT610201CA.PolicyOrAccount"})
public class PolicyIdentifierBean extends MessagePartBean {

    private static final long serialVersionUID = 20100614L;
    private II policyIdentifierS = new IIImpl();
    private CD policyType = new CDImpl();
    private CarrierRoleBean authorCarrierRole;
    private II coveredPartyIdentifier = new IIImpl();
    private CV relationshipToPolicyHolder = new CVImpl();
    private CoveredPartyAsPatientChoiceBean beneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice;
    private List<Subject_1Bean> beneficiaryCoveredPartyAsPatientSubjectOf = new ArrayList<Subject_1Bean>();
    private PatientToCoveredPartyPersonalRelationshipBean beneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship;

    @Hl7XmlMapping({"id"})
    public Identifier getPolicyIdentifierS() {
        return this.policyIdentifierS.getValue();
    }
    public void setPolicyIdentifierS(Identifier policyIdentifierS) {
        this.policyIdentifierS.setValue(policyIdentifierS);
    }

    @Hl7XmlMapping({"code"})
    public ActCode getPolicyType() {
        return (ActCode) this.policyType.getValue();
    }
    public void setPolicyType(ActCode policyType) {
        this.policyType.setValue(policyType);
    }

    @Hl7XmlMapping({"author/carrierRole"})
    public CarrierRoleBean getAuthorCarrierRole() {
        return this.authorCarrierRole;
    }
    public void setAuthorCarrierRole(CarrierRoleBean authorCarrierRole) {
        this.authorCarrierRole = authorCarrierRole;
    }

    @Hl7XmlMapping({"beneficiary/coveredPartyAsPatient/id"})
    public Identifier getCoveredPartyIdentifier() {
        return this.coveredPartyIdentifier.getValue();
    }
    public void setCoveredPartyIdentifier(Identifier coveredPartyIdentifier) {
        this.coveredPartyIdentifier.setValue(coveredPartyIdentifier);
    }

    @Hl7XmlMapping({"beneficiary/coveredPartyAsPatient/code"})
    public Code getRelationshipToPolicyHolder() {
        return (Code) this.relationshipToPolicyHolder.getValue();
    }
    public void setRelationshipToPolicyHolder(Code relationshipToPolicyHolder) {
        this.relationshipToPolicyHolder.setValue(relationshipToPolicyHolder);
    }

    @Hl7XmlMapping({"beneficiary/coveredPartyAsPatient/coveredPartyAsPatientChoice"})
    public CoveredPartyAsPatientChoiceBean getBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice() {
        return this.beneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice;
    }
    public void setBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice(CoveredPartyAsPatientChoiceBean beneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice) {
        this.beneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice = beneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice;
    }

    @Hl7XmlMapping({"beneficiary/coveredPartyAsPatient/subjectOf"})
    public List<Subject_1Bean> getBeneficiaryCoveredPartyAsPatientSubjectOf() {
        return this.beneficiaryCoveredPartyAsPatientSubjectOf;
    }

    @Hl7XmlMapping({"beneficiary/coveredPartyAsPatient/indirectAuthority/personalRelationship"})
    public PatientToCoveredPartyPersonalRelationshipBean getBeneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship() {
        return this.beneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship;
    }
    public void setBeneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship(PatientToCoveredPartyPersonalRelationshipBean beneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship) {
        this.beneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship = beneficiaryCoveredPartyAsPatientIndirectAuthorityPersonalRelationship;
    }

}
