/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pharmacy.porx_mt060040ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.x_NormalRestrictedTabooConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt090108ca.HealthcareWorkerBean;
import ca.infoway.messagebuilder.model.common.coct_mt120600ca.NotesBean;
import ca.infoway.messagebuilder.model.common.coct_mt141007ca.DeviceProductBean;
import ca.infoway.messagebuilder.model.common.coct_mt260030ca.IssuesBean;
import ca.infoway.messagebuilder.model.merged.AnnotationIndicatorBean;
import ca.infoway.messagebuilder.model.merged.Author4Bean;
import ca.infoway.messagebuilder.model.merged.Component6_1Bean;
import ca.infoway.messagebuilder.model.merged.DetectedIssueIndicatorBean;
import ca.infoway.messagebuilder.model.merged.IsPartOfBean;
import ca.infoway.messagebuilder.model.merged.ParentPrescriptionBean;
import ca.infoway.messagebuilder.model.merged.PrescribedBecauseOfBean;
import ca.infoway.messagebuilder.model.merged.ProcedureRequestBean;
import ca.infoway.messagebuilder.model.merged.RefusalToFillsBean;
import ca.infoway.messagebuilder.model.merged.SourceDispenseBean;
import ca.infoway.messagebuilder.model.merged.StatusChangesBean;
import ca.infoway.messagebuilder.model.merged.SupplyEventFirstSummary_2Bean;
import ca.infoway.messagebuilder.model.merged.SupplyEventFutureSummary_2Bean;
import ca.infoway.messagebuilder.model.merged.SupplyEventLastSummary_2Bean;
import ca.infoway.messagebuilder.model.merged.SupplyEventPastSummary_2Bean;
import ca.infoway.messagebuilder.model.merged.TargetedToPharmacyBean;
import ca.infoway.messagebuilder.model.merged.VerificationEventCriterionBean;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;



/**
 * <p>Prescription</p>
 * 
 * <p>Information pertaining to a Prescriber's authorization 
 * for a device to be dispensed to a patient, as well as the 
 * instruction on when and how the device is to be used by the 
 * patient.</p>
 * 
 * <p>This is a 'core' class of the medication model and is 
 * important for understanding what devices the patient is 
 * intended to be receiving.</p>
 * 
 * <p>Reported Issue is only permitted if Issue Indicator is 
 * not present and vice versa.</p>
 * 
 * <p>Annotation is only permitted if Annotation Indicator is 
 * not present and vice versa</p>
 */
@Hl7PartTypeMapping({"PORX_MT060040CA.DeviceRequest"})
@Hl7RootType
public class PrescriptionBean extends MessagePartBean implements ca.infoway.messagebuilder.model.pharmacy.porx_mt060350ca.PrescriptionBean {

    private static final long serialVersionUID = 20100614L;
    private II prescriptionOrderNumber = new IIImpl();
    private CS prescriptionStatus = new CSImpl();
    private SET<CV, Code> prescriptionMaskingIndicators = new SETImpl<CV, Code>(CVImpl.class);
    private DeviceProductBean directTargetManufacturedProduct;
    private HealthcareWorkerBean responsiblePartyAssignedEntity;
    private Author4Bean author;
    private TargetedToPharmacyBean location;
    private ParentPrescriptionBean predecessorPriorSupplyRequest;
    private List<PrescribedBecauseOfBean> reason = new ArrayList<PrescribedBecauseOfBean>();
    private VerificationEventCriterionBean preconditionVerificationEventCriterion;
    private SourceDispenseBean derivedFromSourceDispense;
    private List<CoverageExtensionsBean> coverageCoverage = new ArrayList<CoverageExtensionsBean>();
    private ProcedureRequestBean component1ProcedureRequest;
    private Component6_1Bean component2;
    private SupplyEventLastSummary_2Bean fulfillment1SupplyEventLastSummary;
    private SupplyEventFirstSummary_2Bean fulfillment2SupplyEventFirstSummary;
    private SupplyEventFutureSummary_2Bean fulfillment3SupplyEventFutureSummary;
    private SupplyEventPastSummary_2Bean fulfillment4SupplyEventPastSummary;
    private List<PrescriptionDispensesBean> fulfillment5DeviceDispense = new ArrayList<PrescriptionDispensesBean>();
    private List<IssuesBean> subjectOf1DetectedIssueEvent = new ArrayList<IssuesBean>();
    private List<StatusChangesBean> subjectOf2ControlActEvent = new ArrayList<StatusChangesBean>();
    private List<NotesBean> subjectOf3Annotation = new ArrayList<NotesBean>();
    private List<RefusalToFillsBean> subjectOf4RefusalToFill = new ArrayList<RefusalToFillsBean>();
    private DetectedIssueIndicatorBean subjectOf5DetectedIssueIndicator;
    private AnnotationIndicatorBean subjectOf6AnnotationIndicator;
    private List<IsPartOfBean> componentOf = new ArrayList<IsPartOfBean>();

    @Hl7XmlMapping({"id"})
    public Identifier getPrescriptionOrderNumber() {
        return this.prescriptionOrderNumber.getValue();
    }
    public void setPrescriptionOrderNumber(Identifier prescriptionOrderNumber) {
        this.prescriptionOrderNumber.setValue(prescriptionOrderNumber);
    }

    @Hl7XmlMapping({"statusCode"})
    public ActStatus getPrescriptionStatus() {
        return (ActStatus) this.prescriptionStatus.getValue();
    }
    public void setPrescriptionStatus(ActStatus prescriptionStatus) {
        this.prescriptionStatus.setValue(prescriptionStatus);
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public Set<x_NormalRestrictedTabooConfidentialityKind> getPrescriptionMaskingIndicators() {
        return this.prescriptionMaskingIndicators.rawSet(x_NormalRestrictedTabooConfidentialityKind.class);
    }

    @Hl7XmlMapping({"directTarget/manufacturedProduct"})
    public DeviceProductBean getDirectTargetManufacturedProduct() {
        return this.directTargetManufacturedProduct;
    }
    public void setDirectTargetManufacturedProduct(DeviceProductBean directTargetManufacturedProduct) {
        this.directTargetManufacturedProduct = directTargetManufacturedProduct;
    }

    @Hl7XmlMapping({"responsibleParty/assignedEntity"})
    public HealthcareWorkerBean getResponsiblePartyAssignedEntity() {
        return this.responsiblePartyAssignedEntity;
    }
    public void setResponsiblePartyAssignedEntity(HealthcareWorkerBean responsiblePartyAssignedEntity) {
        this.responsiblePartyAssignedEntity = responsiblePartyAssignedEntity;
    }

    @Hl7XmlMapping({"author"})
    public Author4Bean getAuthor() {
        return this.author;
    }
    public void setAuthor(Author4Bean author) {
        this.author = author;
    }

    @Hl7XmlMapping({"location"})
    public TargetedToPharmacyBean getLocation() {
        return this.location;
    }
    public void setLocation(TargetedToPharmacyBean location) {
        this.location = location;
    }

    @Hl7XmlMapping({"predecessor/priorSupplyRequest"})
    public ParentPrescriptionBean getPredecessorPriorSupplyRequest() {
        return this.predecessorPriorSupplyRequest;
    }
    public void setPredecessorPriorSupplyRequest(ParentPrescriptionBean predecessorPriorSupplyRequest) {
        this.predecessorPriorSupplyRequest = predecessorPriorSupplyRequest;
    }

    @Hl7XmlMapping({"reason"})
    public List<PrescribedBecauseOfBean> getReason() {
        return this.reason;
    }

    @Hl7XmlMapping({"precondition/verificationEventCriterion"})
    public VerificationEventCriterionBean getPreconditionVerificationEventCriterion() {
        return this.preconditionVerificationEventCriterion;
    }
    public void setPreconditionVerificationEventCriterion(VerificationEventCriterionBean preconditionVerificationEventCriterion) {
        this.preconditionVerificationEventCriterion = preconditionVerificationEventCriterion;
    }

    @Hl7XmlMapping({"derivedFrom/sourceDispense"})
    public SourceDispenseBean getDerivedFromSourceDispense() {
        return this.derivedFromSourceDispense;
    }
    public void setDerivedFromSourceDispense(SourceDispenseBean derivedFromSourceDispense) {
        this.derivedFromSourceDispense = derivedFromSourceDispense;
    }

    @Hl7XmlMapping({"coverage/coverage"})
    public List<CoverageExtensionsBean> getCoverageCoverage() {
        return this.coverageCoverage;
    }

    @Hl7XmlMapping({"component1/procedureRequest"})
    public ProcedureRequestBean getComponent1ProcedureRequest() {
        return this.component1ProcedureRequest;
    }
    public void setComponent1ProcedureRequest(ProcedureRequestBean component1ProcedureRequest) {
        this.component1ProcedureRequest = component1ProcedureRequest;
    }

    @Hl7XmlMapping({"component2"})
    public Component6_1Bean getComponent2() {
        return this.component2;
    }
    public void setComponent2(Component6_1Bean component2) {
        this.component2 = component2;
    }

    @Hl7XmlMapping({"fulfillment1/supplyEventLastSummary"})
    public SupplyEventLastSummary_2Bean getFulfillment1SupplyEventLastSummary() {
        return this.fulfillment1SupplyEventLastSummary;
    }
    public void setFulfillment1SupplyEventLastSummary(SupplyEventLastSummary_2Bean fulfillment1SupplyEventLastSummary) {
        this.fulfillment1SupplyEventLastSummary = fulfillment1SupplyEventLastSummary;
    }

    @Hl7XmlMapping({"fulfillment2/supplyEventFirstSummary"})
    public SupplyEventFirstSummary_2Bean getFulfillment2SupplyEventFirstSummary() {
        return this.fulfillment2SupplyEventFirstSummary;
    }
    public void setFulfillment2SupplyEventFirstSummary(SupplyEventFirstSummary_2Bean fulfillment2SupplyEventFirstSummary) {
        this.fulfillment2SupplyEventFirstSummary = fulfillment2SupplyEventFirstSummary;
    }

    @Hl7XmlMapping({"fulfillment3/supplyEventFutureSummary"})
    public SupplyEventFutureSummary_2Bean getFulfillment3SupplyEventFutureSummary() {
        return this.fulfillment3SupplyEventFutureSummary;
    }
    public void setFulfillment3SupplyEventFutureSummary(SupplyEventFutureSummary_2Bean fulfillment3SupplyEventFutureSummary) {
        this.fulfillment3SupplyEventFutureSummary = fulfillment3SupplyEventFutureSummary;
    }

    @Hl7XmlMapping({"fulfillment4/supplyEventPastSummary"})
    public SupplyEventPastSummary_2Bean getFulfillment4SupplyEventPastSummary() {
        return this.fulfillment4SupplyEventPastSummary;
    }
    public void setFulfillment4SupplyEventPastSummary(SupplyEventPastSummary_2Bean fulfillment4SupplyEventPastSummary) {
        this.fulfillment4SupplyEventPastSummary = fulfillment4SupplyEventPastSummary;
    }

    @Hl7XmlMapping({"fulfillment5/deviceDispense"})
    public List<PrescriptionDispensesBean> getFulfillment5DeviceDispense() {
        return this.fulfillment5DeviceDispense;
    }

    @Hl7XmlMapping({"subjectOf1/detectedIssueEvent"})
    public List<IssuesBean> getSubjectOf1DetectedIssueEvent() {
        return this.subjectOf1DetectedIssueEvent;
    }

    @Hl7XmlMapping({"subjectOf2/controlActEvent"})
    public List<StatusChangesBean> getSubjectOf2ControlActEvent() {
        return this.subjectOf2ControlActEvent;
    }

    @Hl7XmlMapping({"subjectOf3/annotation"})
    public List<NotesBean> getSubjectOf3Annotation() {
        return this.subjectOf3Annotation;
    }

    @Hl7XmlMapping({"subjectOf4/refusalToFill"})
    public List<RefusalToFillsBean> getSubjectOf4RefusalToFill() {
        return this.subjectOf4RefusalToFill;
    }

    @Hl7XmlMapping({"subjectOf5/detectedIssueIndicator"})
    public DetectedIssueIndicatorBean getSubjectOf5DetectedIssueIndicator() {
        return this.subjectOf5DetectedIssueIndicator;
    }
    public void setSubjectOf5DetectedIssueIndicator(DetectedIssueIndicatorBean subjectOf5DetectedIssueIndicator) {
        this.subjectOf5DetectedIssueIndicator = subjectOf5DetectedIssueIndicator;
    }

    @Hl7XmlMapping({"subjectOf6/annotationIndicator"})
    public AnnotationIndicatorBean getSubjectOf6AnnotationIndicator() {
        return this.subjectOf6AnnotationIndicator;
    }
    public void setSubjectOf6AnnotationIndicator(AnnotationIndicatorBean subjectOf6AnnotationIndicator) {
        this.subjectOf6AnnotationIndicator = subjectOf6AnnotationIndicator;
    }

    @Hl7XmlMapping({"componentOf"})
    public List<IsPartOfBean> getComponentOf() {
        return this.componentOf;
    }

}
