/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.URG;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.URGImpl;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.datatype.lang.UncertainRange;
import ca.infoway.messagebuilder.domainvalue.ObservationDosageDefinitionPreconditionType;
import ca.infoway.messagebuilder.model.MessagePartBean;



@Hl7PartTypeMapping({"COCT_MT260010CA.ObservationEventCriterion","COCT_MT260020CA.ObservationEventCriterion","COCT_MT260030CA.ObservationEventCriterion"})
public class DosagePreconditionsBean extends MessagePartBean {

    private static final long serialVersionUID = 20100615L;
    private CV dosagePreconditionType = new CVImpl();
    private URG<PQ, PhysicalQuantity> dosagePreconditionValue = new URGImpl<PQ, PhysicalQuantity>();

    @Hl7XmlMapping({"code"})
    public ObservationDosageDefinitionPreconditionType getDosagePreconditionType() {
        return (ObservationDosageDefinitionPreconditionType) this.dosagePreconditionType.getValue();
    }
    public void setDosagePreconditionType(ObservationDosageDefinitionPreconditionType dosagePreconditionType) {
        this.dosagePreconditionType.setValue(dosagePreconditionType);
    }

    @Hl7XmlMapping({"value"})
    public UncertainRange<PhysicalQuantity> getDosagePreconditionValue() {
        return this.dosagePreconditionValue.getValue();
    }
    public void setDosagePreconditionValue(UncertainRange<PhysicalQuantity> dosagePreconditionValue) {
        this.dosagePreconditionValue.setValue(dosagePreconditionValue);
    }

}
