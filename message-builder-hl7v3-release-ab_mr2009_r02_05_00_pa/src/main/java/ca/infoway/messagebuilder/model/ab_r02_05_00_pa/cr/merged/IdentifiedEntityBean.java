/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_r02_05_00_pa.cr.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.AD;
import ca.infoway.messagebuilder.datatype.ANY;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.INT;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.PN;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.ADImpl;
import ca.infoway.messagebuilder.datatype.impl.ANYImpl;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.INTImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.PNImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.datatype.lang.PersonName;
import ca.infoway.messagebuilder.datatype.lang.PostalAddress;
import ca.infoway.messagebuilder.domainvalue.AdministrativeGender;
import ca.infoway.messagebuilder.domainvalue.RoleStatus;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ab_r02_05_00_pa.merged.ConfidenceValueBean;
import ca.infoway.messagebuilder.model.ab_r02_05_00_pa.merged.LanguageCommunicationBean;
import ca.infoway.messagebuilder.model.ab_r02_05_00_pa.merged.PersonalRelationshipBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;



@Hl7PartTypeMapping({"PRPA_MT101102AB.IdentifiedEntity","PRPA_MT101104AB.IdentifiedEntity"})
@Hl7RootType
public class IdentifiedEntityBean extends MessagePartBean {

    private static final long serialVersionUID = 20140501L;
    private SET<II, Identifier> id = new SETImpl<II, Identifier>(IIImpl.class);
    private CS statusCode = new CSImpl();
    private IVL<TS, Interval<Date>> effectiveTime = new IVLImpl<TS, Interval<Date>>();
    private CV confidentialityCode = new CVImpl();
    private LIST<PN, PersonName> identifiedPersonName = new LISTImpl<PN, PersonName>(PNImpl.class);
    private LIST<ANY<Object>, Object> identifiedPersonTelecom = new LISTImpl<ANY<Object>, Object>(ANYImpl.class);
    private CV identifiedPersonAdministrativeGenderCode = new CVImpl();
    private TS identifiedPersonBirthTime = new TSImpl();
    private BL identifiedPersonDeceasedInd = new BLImpl();
    private TS identifiedPersonDeceasedTime = new TSImpl();
    private BL identifiedPersonMultipleBirthInd = new BLImpl();
    private INT identifiedPersonMultipleBirthOrderNumber = new INTImpl();
    private LIST<AD, PostalAddress> identifiedPersonAddr = new LISTImpl<AD, PostalAddress>(ADImpl.class);
    private List<OtherIDsNonHealthcareIdentifiersBean> identifiedPersonAsOtherIDs = new ArrayList<OtherIDsNonHealthcareIdentifiersBean>();
    private List<PersonalRelationshipBean> identifiedPersonPersonalRelationship = new ArrayList<PersonalRelationshipBean>();
    private List<LanguageCommunicationBean> identifiedPersonLanguageCommunication = new ArrayList<LanguageCommunicationBean>();
    private ConfidenceValueBean subjectOfObservationEvent;


    /**
     * <p>Business Name: ClientHealthcareIdentificationNumber</p>
     * 
     * <p>Un-merged Business Name: 
     * ClientHealthcareIdentificationNumber</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.IdentifiedEntity.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-40)</p>
     * 
     * <p>Un-merged Business Name: 
     * ClientHealthcareIdentificationNumber</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.IdentifiedEntity.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-40)</p>
     */
    @Hl7XmlMapping({"id"})
    public Set<Identifier> getId() {
        return this.id.rawSet();
    }


    /**
     * <p>Business Name: ClientStatusCode</p>
     * 
     * <p>Un-merged Business Name: ClientStatusCode</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.IdentifiedEntity.statusCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientStatusCode</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.IdentifiedEntity.statusCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"statusCode"})
    public RoleStatus getStatusCode() {
        return (RoleStatus) this.statusCode.getValue();
    }

    /**
     * <p>Business Name: ClientStatusCode</p>
     * 
     * <p>Un-merged Business Name: ClientStatusCode</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.IdentifiedEntity.statusCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientStatusCode</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.IdentifiedEntity.statusCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setStatusCode(RoleStatus statusCode) {
        this.statusCode.setValue(statusCode);
    }


    /**
     * <p>Business Name: ClientEffectiveTime</p>
     * 
     * <p>Un-merged Business Name: ClientEffectiveTime</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.IdentifiedEntity.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientEffectiveTime</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.IdentifiedEntity.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getEffectiveTime() {
        return this.effectiveTime.getValue();
    }

    /**
     * <p>Business Name: ClientEffectiveTime</p>
     * 
     * <p>Un-merged Business Name: ClientEffectiveTime</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.IdentifiedEntity.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientEffectiveTime</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.IdentifiedEntity.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    public void setEffectiveTime(Interval<Date> effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }


    /**
     * <p>Business Name: ClientMaskedInformation</p>
     * 
     * <p>Un-merged Business Name: ClientMaskedInformation</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.IdentifiedEntity.confidentialityCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientMaskedInformation</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.IdentifiedEntity.confidentialityCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getConfidentialityCode() {
        return (x_VeryBasicConfidentialityKind) this.confidentialityCode.getValue();
    }

    /**
     * <p>Business Name: ClientMaskedInformation</p>
     * 
     * <p>Un-merged Business Name: ClientMaskedInformation</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.IdentifiedEntity.confidentialityCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientMaskedInformation</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.IdentifiedEntity.confidentialityCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setConfidentialityCode(x_VeryBasicConfidentialityKind confidentialityCode) {
        this.confidentialityCode.setValue(confidentialityCode);
    }


    /**
     * <p>Business Name: ClientName</p>
     * 
     * <p>Un-merged Business Name: ClientName</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.name</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-20)</p>
     * 
     * <p>Un-merged Business Name: ClientName</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.name</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-20)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/name"})
    public List<PersonName> getIdentifiedPersonName() {
        return this.identifiedPersonName.rawList();
    }


    /**
     * <p>Business Name: ClientTelecom</p>
     * 
     * <p>Un-merged Business Name: ClientTelecom</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.telecom</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-20)</p>
     * 
     * <p>Un-merged Business Name: ClientTelecom</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.telecom</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-10)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/telecom"})
    public List<Object> getIdentifiedPersonTelecom() {
        return this.identifiedPersonTelecom.rawList();
    }


    /**
     * <p>Business Name: ClientGender</p>
     * 
     * <p>Un-merged Business Name: ClientGender</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.Person.administrativeGenderCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientGender</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.Person.administrativeGenderCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/administrativeGenderCode"})
    public AdministrativeGender getIdentifiedPersonAdministrativeGenderCode() {
        return (AdministrativeGender) this.identifiedPersonAdministrativeGenderCode.getValue();
    }

    /**
     * <p>Business Name: ClientGender</p>
     * 
     * <p>Un-merged Business Name: ClientGender</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.Person.administrativeGenderCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientGender</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.Person.administrativeGenderCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setIdentifiedPersonAdministrativeGenderCode(AdministrativeGender identifiedPersonAdministrativeGenderCode) {
        this.identifiedPersonAdministrativeGenderCode.setValue(identifiedPersonAdministrativeGenderCode);
    }


    /**
     * <p>Business Name: ClientDateOfBirth</p>
     * 
     * <p>Un-merged Business Name: ClientDateOfBirth</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.birthTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientDateOfBirth</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.birthTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/birthTime"})
    public Date getIdentifiedPersonBirthTime() {
        return this.identifiedPersonBirthTime.getValue();
    }

    /**
     * <p>Business Name: ClientDateOfBirth</p>
     * 
     * <p>Un-merged Business Name: ClientDateOfBirth</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.birthTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: ClientDateOfBirth</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.birthTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setIdentifiedPersonBirthTime(Date identifiedPersonBirthTime) {
        this.identifiedPersonBirthTime.setValue(identifiedPersonBirthTime);
    }


    /**
     * <p>Business Name: ClientDeceasedIndicator</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.deceasedInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.deceasedInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/deceasedInd"})
    public Boolean getIdentifiedPersonDeceasedInd() {
        return this.identifiedPersonDeceasedInd.getValue();
    }

    /**
     * <p>Business Name: ClientDeceasedIndicator</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.deceasedInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.deceasedInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    public void setIdentifiedPersonDeceasedInd(Boolean identifiedPersonDeceasedInd) {
        this.identifiedPersonDeceasedInd.setValue(identifiedPersonDeceasedInd);
    }


    /**
     * <p>Business Name: ClientDeceasedDate</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedDate</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.deceasedTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedDate</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.deceasedTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/deceasedTime"})
    public Date getIdentifiedPersonDeceasedTime() {
        return this.identifiedPersonDeceasedTime.getValue();
    }

    /**
     * <p>Business Name: ClientDeceasedDate</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedDate</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.deceasedTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientDeceasedDate</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.deceasedTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    public void setIdentifiedPersonDeceasedTime(Date identifiedPersonDeceasedTime) {
        this.identifiedPersonDeceasedTime.setValue(identifiedPersonDeceasedTime);
    }


    /**
     * <p>Business Name: ClientMultipleBirthIndicator</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.multipleBirthInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.multipleBirthInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/multipleBirthInd"})
    public Boolean getIdentifiedPersonMultipleBirthInd() {
        return this.identifiedPersonMultipleBirthInd.getValue();
    }

    /**
     * <p>Business Name: ClientMultipleBirthIndicator</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.multipleBirthInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthIndicator</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.multipleBirthInd</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    public void setIdentifiedPersonMultipleBirthInd(Boolean identifiedPersonMultipleBirthInd) {
        this.identifiedPersonMultipleBirthInd.setValue(identifiedPersonMultipleBirthInd);
    }


    /**
     * <p>Business Name: ClientMultipleBirthOrderNumber</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthOrderNumber</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.Person.multipleBirthOrderNumber</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthOrderNumber</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.Person.multipleBirthOrderNumber</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/multipleBirthOrderNumber"})
    public Integer getIdentifiedPersonMultipleBirthOrderNumber() {
        return this.identifiedPersonMultipleBirthOrderNumber.getValue();
    }

    /**
     * <p>Business Name: ClientMultipleBirthOrderNumber</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthOrderNumber</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.Person.multipleBirthOrderNumber</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: ClientMultipleBirthOrderNumber</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.Person.multipleBirthOrderNumber</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     */
    public void setIdentifiedPersonMultipleBirthOrderNumber(Integer identifiedPersonMultipleBirthOrderNumber) {
        this.identifiedPersonMultipleBirthOrderNumber.setValue(identifiedPersonMultipleBirthOrderNumber);
    }


    /**
     * <p>Business Name: ClientAddress</p>
     * 
     * <p>Un-merged Business Name: ClientAddress</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.addr</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-10)</p>
     * 
     * <p>Un-merged Business Name: ClientAddress</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.addr</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-10)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/addr"})
    public List<PostalAddress> getIdentifiedPersonAddr() {
        return this.identifiedPersonAddr.rawList();
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.asOtherIDs</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-100)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.asOtherIDs</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-100)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/asOtherIDs"})
    public List<OtherIDsNonHealthcareIdentifiersBean> getIdentifiedPersonAsOtherIDs() {
        return this.identifiedPersonAsOtherIDs;
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Person.personalRelationship</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-10)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Person.personalRelationship</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-10)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/personalRelationship"})
    public List<PersonalRelationshipBean> getIdentifiedPersonPersonalRelationship() {
        return this.identifiedPersonPersonalRelationship;
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101102AB.Person.languageCommunication</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-10)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * PRPA_MT101104AB.Person.languageCommunication</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1-10)</p>
     */
    @Hl7XmlMapping({"identifiedPerson/languageCommunication"})
    public List<LanguageCommunicationBean> getIdentifiedPersonLanguageCommunication() {
        return this.identifiedPersonLanguageCommunication;
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Subject.observationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Subject.observationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"subjectOf/observationEvent"})
    public ConfidenceValueBean getSubjectOfObservationEvent() {
        return this.subjectOfObservationEvent;
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101102AB.Subject.observationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: PRPA_MT101104AB.Subject.observationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setSubjectOfObservationEvent(ConfidenceValueBean subjectOfObservationEvent) {
        this.subjectOfObservationEvent = subjectOfObservationEvent;
    }

}
