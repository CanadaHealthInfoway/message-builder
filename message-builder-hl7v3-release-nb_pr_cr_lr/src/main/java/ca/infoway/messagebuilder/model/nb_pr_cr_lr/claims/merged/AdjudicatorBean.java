/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.nb_pr_cr_lr.claims.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.domainvalue.ContextControl;
import ca.infoway.messagebuilder.domainvalue.ParticipationMode;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.Date;



/**
 * <p>Business Name: Adjudicator</p>
 * 
 * <p>QUCR_MT830201CA.AdjudicatedInvoiceAuthor: Adjudicator</p>
 * 
 * <p>Mandatory for Root AdjudicatedInvoiceElementGroup, 
 * otherwise not specified.</p>
 * 
 * <p>This is used to indicate that the submitted Invoice 
 * Grouping was adjudicated (&amp; submitted) electronic or 
 * written (manual). This is important for Payment Advices, 
 * where it can be used to indicate manually adjudicated 
 * Invoice Groupings.</p>
 * 
 * <p>FICR_MT610201CA.AdjudicatedInvoiceAuthor: Adjudicator</p>
 * 
 * <p>Mandatory for Root AdjudicatedInvoiceElementGroup, 
 * otherwise not specified.</p>
 * 
 * <p>Mandatory for Root AdjudicatedInvoiceElementGroup, 
 * otherwise not specified.</p>
 * 
 * <p>Adjudicator Information</p>
 */
@Hl7PartTypeMapping({"FICR_MT610201CA.AdjudicatedInvoiceAuthor","QUCR_MT830201CA.AdjudicatedInvoiceAuthor"})
public class AdjudicatorBean extends MessagePartBean {

    private static final long serialVersionUID = 20151013L;
    private CS contextControlCode = new CSImpl();
    private TS time = new TSImpl();
    private CV modeCode = new CVImpl();
    private AdjudicatorRoleBean adjudicatorRole;


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.contextControlCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"contextControlCode"})
    public ContextControl getContextControlCode() {
        return (ContextControl) this.contextControlCode.getValue();
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.contextControlCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setContextControlCode(ContextControl contextControlCode) {
        this.contextControlCode.setValue(contextControlCode);
    }


    /**
     * <p>Business Name: AdjudicationDateTime</p>
     * 
     * <p>Un-merged Business Name: AdjudicationDateTime</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.time</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Used in Pharmacy for daily totals. For Invoice COB: Will 
     * only be value for electronic EOBs</p>
     * 
     * <p>Date and time of Adjudication</p>
     * 
     * <p>Un-merged Business Name: AdjudicationDateTime</p>
     * 
     * <p>Relationship: 
     * FICR_MT610201CA.AdjudicatedInvoiceAuthor.time</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Used in Pharmacy for daily totals.</p><p>For Invoice 
     * (COB): Will only be valued for electronic EOBs.</p>
     * 
     * <p>Used in RX for daily totals.</p>
     * 
     * <p>Adjudication date/time</p>
     */
    @Hl7XmlMapping({"time"})
    public Date getTime() {
        return this.time.getValue();
    }

    /**
     * <p>Business Name: AdjudicationDateTime</p>
     * 
     * <p>Un-merged Business Name: AdjudicationDateTime</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.time</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Used in Pharmacy for daily totals. For Invoice COB: Will 
     * only be value for electronic EOBs</p>
     * 
     * <p>Date and time of Adjudication</p>
     * 
     * <p>Un-merged Business Name: AdjudicationDateTime</p>
     * 
     * <p>Relationship: 
     * FICR_MT610201CA.AdjudicatedInvoiceAuthor.time</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Used in Pharmacy for daily totals.</p><p>For Invoice 
     * (COB): Will only be valued for electronic EOBs.</p>
     * 
     * <p>Used in RX for daily totals.</p>
     * 
     * <p>Adjudication date/time</p>
     */
    public void setTime(Date time) {
        this.time.setValue(time);
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.modeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>For Invoice (COB): If Invoice submitted WRITTEN, then EOB 
     * must be adjudicated WRITTEN.</p><p>If Invoice submitted 
     * ELECTRONIC, then EOB can be ELECTRONIC (preferred) or 
     * WRITTEN.</p><p>For Adjudication Results: Must be ELECTRONIC 
     * only</p>
     * 
     * <p>EOB Communication Method</p>
     */
    @Hl7XmlMapping({"modeCode"})
    public ParticipationMode getModeCode() {
        return (ParticipationMode) this.modeCode.getValue();
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.modeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>For Invoice (COB): If Invoice submitted WRITTEN, then EOB 
     * must be adjudicated WRITTEN.</p><p>If Invoice submitted 
     * ELECTRONIC, then EOB can be ELECTRONIC (preferred) or 
     * WRITTEN.</p><p>For Adjudication Results: Must be ELECTRONIC 
     * only</p>
     * 
     * <p>EOB Communication Method</p>
     */
    public void setModeCode(ParticipationMode modeCode) {
        this.modeCode.setValue(modeCode);
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.adjudicatorRole</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * FICR_MT610201CA.AdjudicatedInvoiceAuthor.adjudicatorRole</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"adjudicatorRole"})
    public AdjudicatorRoleBean getAdjudicatorRole() {
        return this.adjudicatorRole;
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * QUCR_MT830201CA.AdjudicatedInvoiceAuthor.adjudicatorRole</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * FICR_MT610201CA.AdjudicatedInvoiceAuthor.adjudicatorRole</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setAdjudicatorRole(AdjudicatorRoleBean adjudicatorRole) {
        this.adjudicatorRole = adjudicatorRole;
    }

}
