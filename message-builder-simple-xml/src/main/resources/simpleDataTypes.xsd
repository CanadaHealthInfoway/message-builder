<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:chi="urn:ca.infoway.messagebuilder.simplexml.v1" targetNamespace="urn:ca.infoway.messagebuilder.simplexml.v1" elementFormDefault="qualified">

<!-- BEGIN Physical Quantity -->

	<xs:complexType name="PhysicalQuantity">
		<xs:attribute name="value" type="xs:decimal" use="required" />
		<xs:attribute name="unit" type="chi:Unit" use="required" />
	</xs:complexType>


<!-- BEGIN Encapsulated Data -->

	<xs:complexType name="EncapsulatedDocumentOrReference">
		<xs:attribute name="mediaType" type="xs:string" use="optional"/>
		<xs:attribute name="uri" type="xs:anyURI" use="optional" />
		<xs:attribute name="compression" type="chi:CompressionCode" use="optional" />
		<xs:attribute name="language" type="chi:HumanLanguage" use="optional" />
	</xs:complexType>

	<xs:complexType name="EncapsulatedDocumentType">
	    <xs:complexContent>
		    <xs:extension base="chi:EncapsulatedDocumentOrReference" >
				<xs:sequence>
					<xs:element name="document" type="xs:base64Binary" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="EncapsulatedReferenceType">
	    <xs:complexContent>
		    <xs:restriction base="chi:EncapsulatedDocumentOrReference" >
				<xs:attribute name="uri" type="xs:anyURI" use="required" />
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="EncapsulatedSignatureType">
	    <xs:simpleContent>
		    <xs:extension base="xs:string" />
		</xs:simpleContent>
	</xs:complexType>


<!-- BEGIN Dates -->

<!-- The regexp patterns used for the various date types will catch most invalid dates. However, edge cases such as "Feb 30" will
	still need to be caught in code. -->

	<xs:complexType name="PartialDate">
		<xs:attribute name="value" use="required">
		  <xs:simpleType>
		   <xs:restriction base="xs:string">
			<xs:pattern value="((19|20)\d\d((0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])?)?)"/>
		   </xs:restriction>
		  </xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="PartialDateTime">
		<xs:attribute name="value" use="required">
		  <xs:simpleType>
		   <xs:restriction base="xs:string">
			<xs:pattern value="(((19|20)\d\d)((0[1-9]|1[012])((0[1-9]|[12][0-9]|3[01])([0-9]{2}([0-9]{2}([0-9]{2}([\.][0-9]{4})?)?)?)?)?)?([\+\-][0-9]{4})?)"/>
		   </xs:restriction>
		  </xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="FullDateWithTime">
	</xs:complexType>

	<xs:complexType name="FullDate">
	    <xs:complexContent>
		    <xs:extension base="chi:FullDateWithTime" >
				<xs:attribute name="value" use="required">
				  <xs:simpleType>
				   <xs:restriction base="xs:string">
					<xs:pattern value="(19|20)\d\d(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])"/>
				   </xs:restriction>
				  </xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="FullDateTime">
	    <xs:complexContent>
		    <xs:extension base="chi:FullDateWithTime" >
				<xs:attribute name="value" use="required">
				  <xs:simpleType>
				   <xs:restriction base="xs:string">
					<xs:pattern value="(((19|20)\d\d)((0[1-9]|1[012])((0[1-9]|[12][0-9]|3[01])([0-9]{2}([0-9]{2}([0-9]{2}([\.][0-9]{4})?)))))([\+\-][0-9]{4}))"/>
				   </xs:restriction>
				  </xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


<!-- BEGIN Intervals -->

<!-- The various -Date- intervals enforce different date formats. To keep this xml api simple, it is assumed
	 that any date format validation will be done in code, such as:
	 	from:     has to adhere to one (and only one) of the 4 date types
	 	to:       has to adhere to one (and only one) of the 4 date types
	 	duration: must be a PQ with only time units

	 Use some basic date types for "single-bound" intervals (marshaller will know to translate to proper HL7 type):
	 	
	 	IVL.LOW, IVL.HIGH - use equivalent TS.x type
	 	IVL.WIDTH - use PQ.TIME
-->
	 
	<xs:complexType name="Interval">
	</xs:complexType>

	<xs:complexType name="DateInterval">
	    <xs:complexContent>
		    <xs:extension base="chi:Interval" >
		    	<xs:choice>
					<xs:sequence>
						<xs:group ref="chi:DateIntervalFrom"/>
				    	<xs:choice>
							<xs:group ref="chi:DateIntervalTo"/>
							<xs:group ref="chi:DateIntervalDuration"/>
				    	</xs:choice>
					</xs:sequence>
					<xs:sequence>
						<xs:group ref="chi:DateIntervalTo"/>
						<xs:group ref="chi:DateIntervalDuration"/>
					</xs:sequence>
		    	</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:group name="DateIntervalFrom">
		<xs:choice>
			<xs:element name="from" type="chi:PartialDateTime" />
			<xs:element name="fromNullFlavor" type="chi:RestrictedNullType" />
		</xs:choice>
	</xs:group>

	<xs:group name="DateIntervalTo">
		<xs:choice>
			<xs:element name="to" type="chi:PartialDateTime" />
			<xs:element name="toNullFlavor" type="chi:RestrictedNullType" />
		</xs:choice>
	</xs:group>

	<xs:group name="DateIntervalCenter">
		<xs:choice>
			<xs:element name="center" type="chi:PartialDateTime" />
			<xs:element name="centerNullFlavor" type="chi:RestrictedNullType" />
		</xs:choice>
	</xs:group>

	<xs:group name="DateIntervalDuration">
		<xs:choice>
			<xs:element name="duration" type="chi:PhysicalQuantity" />
			<xs:element name="durationNullFlavor" type="chi:RestrictedNullType" />
		</xs:choice>
	</xs:group>

	<!-- "from" or "to" can have any NF, but not both -->
	<xs:complexType name="PhysicalQuantityInterval">
	    <xs:complexContent>
		    <xs:extension base="chi:Interval">
				<xs:choice>
					<xs:sequence>
						<xs:element name="from" type="chi:PhysicalQuantity" />
						<xs:choice>
							<xs:element name="to" type="chi:PhysicalQuantity" />
							<xs:element name="toNullFlavor" type="chi:NullType" />
						</xs:choice>
					</xs:sequence>
					<xs:sequence>
						<xs:element name="fromNullFlavor" type="chi:NullType" />
						<xs:element name="to" type="chi:PhysicalQuantity" />
					</xs:sequence>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


<!-- BEGIN Periodic Intervals -->

	<xs:complexType name="PeriodicIntervalOfTime">
		<xs:sequence>
			<xs:element name="every" type="chi:PhysicalQuantity" />
		</xs:sequence>
		<xs:attribute name="numberOfOccurrences" use="required">
		  <xs:simpleType>
		   <xs:restriction base="xs:integer">
				<xs:minInclusive value="0"/>
		   </xs:restriction>
		  </xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="BoundedPeriodicIntervalOfTime">
		<xs:sequence>
			<xs:element name="overallTimePeriod" type="chi:DateInterval" />
			<xs:element name="frequency" type="chi:PeriodicIntervalOfTime" />
		</xs:sequence>
	</xs:complexType>


<!-- BEGIN Uncertain Ranges -->

	<xs:complexType name="UncertainRange">
	    <xs:complexContent>
		    <xs:extension base="chi:Interval" >
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="DateUncertainRange">
	    <xs:complexContent>
		    <xs:extension base="chi:UncertainRange" >
		    	<xs:choice>
					<xs:sequence>
						<xs:group ref="chi:DateIntervalFrom"/>
				    	<xs:choice>
							<xs:group ref="chi:DateIntervalTo"/>
							<xs:group ref="chi:DateIntervalCenter"/>
							<xs:group ref="chi:DateIntervalDuration"/>
				    	</xs:choice>
					</xs:sequence>
					<xs:sequence>
						<xs:group ref="chi:DateIntervalTo"/>
				    	<xs:choice>
							<xs:group ref="chi:DateIntervalCenter"/>
							<xs:group ref="chi:DateIntervalDuration"/>
						</xs:choice>
					</xs:sequence>
					<xs:sequence>
						<xs:group ref="chi:DateIntervalCenter"/>
						<xs:group ref="chi:DateIntervalDuration"/>
					</xs:sequence>
		    	</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="PhysicalQuantityUncertainRange">
		<xs:choice>
			<xs:sequence>
				<xs:element name="from" type="chi:PhysicalQuantity" />
				<xs:element name="to" type="chi:PhysicalQuantity" minOccurs="0" />
			</xs:sequence>
			<xs:element name="to" type="chi:PhysicalQuantity" />
		</xs:choice>
	</xs:complexType>


<!-- BEGIN Ratios -->

	<xs:complexType name="RatioDrugQuantityPerTime">
		<xs:sequence>
			<xs:element name="drugQuantity" type="chi:PhysicalQuantity" minOccurs="1" maxOccurs="1" />
			<xs:element name="time" type="chi:PhysicalQuantity" minOccurs="1" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="RatioMoneyPerUnit">
		<xs:sequence>
			<xs:element name="money" type="chi:Money" minOccurs="1" maxOccurs="1" />
			<xs:element name="unit" type="chi:PhysicalQuantity" minOccurs="1" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>


<!-- BEGIN Identifiers -->

	<xs:complexType name="InstanceIdentifier">
		<xs:attribute name="root" type="xs:string" use="required" />
		<xs:attribute name="extension" type="xs:string" use="optional" />
	</xs:complexType>


<!-- BEGIN Telecommunication -->

	<xs:complexType name="BaseTelecommunicationAddress" />
	
	<xs:complexType name="PhonemailTelecommunicationAddress">
		<xs:complexContent>
		    <xs:extension base="chi:BaseTelecommunicationAddress" />
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="Uri">
	    <xs:complexContent>
		    <xs:extension base="chi:BaseTelecommunicationAddress">
				<xs:attribute name="value" type="xs:anyURI" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="PhoneNumber">
		<xs:complexContent>
			<xs:extension base="chi:PhonemailTelecommunicationAddress">
				<xs:sequence>
					<xs:element name="use" type="chi:PhoneUse" minOccurs="0" maxOccurs="3" />
					<xs:element name="areaCode">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="3" />
								<xs:maxLength value="3" />
								<xs:pattern value="([0-9][0-9][0-9])"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="phoneNumber">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="8" />
								<xs:pattern value="([0-9][0-9][0-9][\-][0-9][0-9][0-9][0-9])"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
					<xs:element name="extension" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:maxLength value="6" />
								<xs:pattern value="([0-9]*)"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="type" type="chi:PhoneType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="EmailAddress">
		<xs:complexContent>
			<xs:extension base="chi:PhonemailTelecommunicationAddress">
				<xs:sequence>
					<xs:element name="use" type="chi:EmailUse" minOccurs="0" maxOccurs="3" />
					<xs:element name="mailto" >
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1" />
								<xs:maxLength value="43" />
								<xs:pattern value="[^@]+@[^\.]+\..+" />
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	

<!-- BEGIN Coded Types -->

	<!--  property validation will be left up to code (?); all are made optional for now -->

	<xs:complexType name="CodedType">
		<xs:sequence>
			<xs:element name="originalText" type="xs:string" minOccurs="0" />
			<xs:element name="translation" type="chi:CodedTypeTranslation" minOccurs="0" maxOccurs="10" />
		</xs:sequence>
		<xs:attribute name="code" type="xs:string" use="optional" />
		<xs:attribute name="codeSystem" type="xs:string" use="optional" />
	</xs:complexType>

	<xs:complexType name="CodedTypeTranslation">
		<xs:complexContent>
			<xs:restriction base="chi:CodedType">
				<xs:sequence>
					<!-- can not have original text or translation -->
<!--					<xs:element name="originalText" type="xs:string" minOccurs="0" maxOccurs="0" />-->
<!--					<xs:element name="translation" type="chi:CodedType" minOccurs="0" maxOccurs="0" />-->
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<!-- Technically, CD.LAB should have translations of type CD.LAB. But since the CD translations
		 share all the same properties as the CD.LAB translations the CD translations property is left as is -->
	<xs:complexType name="CodedTypeLab">
		<xs:complexContent>
			<xs:extension base="chi:CodedType">
				<xs:attribute name="displayName" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="CodedValue">
		<xs:complexContent>
			<xs:restriction base="chi:CodedType">
				<xs:sequence>
					<!-- should not use translation -->
					<xs:element name="originalText" type="xs:string" minOccurs="0" maxOccurs="1"/>
					<xs:element name="translation" type="chi:CodedType" minOccurs="0" maxOccurs="0" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="SimpleCodedType">
		<xs:complexContent>
			<xs:restriction base="chi:CodedValue">
				<!-- should not use translation, codeSystem, or originaltext -->
				<xs:attribute name="codeSystem" type="xs:string" use="prohibited" />
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	

<!-- BEGIN Person Name -->

	<xs:complexType name="SimpleName">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="use" type="chi:NameUsageType" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="PersonName">
		<xs:choice>
			<xs:element name="namePart" minOccurs="1" maxOccurs="7">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<!-- TODO - TM - want to also restrict string to 50 characters -->
							<xs:attribute name="partType" use="required" type="chi:NamePartType"/>
							<xs:attribute name="qualifier" use="optional" type="chi:NamePartQualifierType"/>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<!-- TODO - TM - should this simplified variant allow for qualifier on the name parts? -->
			<xs:sequence>
				<xs:element name="title" type="xs:string" minOccurs="0"/>
				<xs:element name="firstName" type="xs:string" minOccurs="0"/>
				<xs:element name="middleName" type="xs:string" minOccurs="0" maxOccurs="3"/>
				<xs:element name="lastName" type="xs:string" minOccurs="0"/>
				<xs:element name="suffix" type="xs:string" minOccurs="0"/>
			</xs:sequence>
		</xs:choice>
		<xs:attribute name="use" type="chi:NameUsageType" use="optional"/>
	</xs:complexType>


<!-- BEGIN Address -->
	
	<xs:complexType name="PostalAddress">
		<xs:choice>
			<xs:element name="addressPart" minOccurs="1" maxOccurs="unbounded">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="type" use="optional" />
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
			<xs:sequence>
				<xs:element name="addressLine" type="xs:string" minOccurs="1" maxOccurs="4"/>
				<xs:element name="city" type="xs:string" />
				<xs:choice>
					<xs:sequence>
						<xs:element name="province" type="chi:Province" />
						<xs:element name="postalCode" type="chi:postalCode"/>
					</xs:sequence>
					<xs:sequence>
						<xs:element name="state" type="chi:State" />
						<xs:element name="zipCode" type="chi:zipCode"/>
					</xs:sequence>
				</xs:choice>
				<xs:element name="country" type="xs:string" minOccurs="0" />
			</xs:sequence>
		</xs:choice>
		<xs:attribute name="use" type="chi:PostalAddressUsageType" use="optional"/>
	</xs:complexType>
	
	<xs:simpleType name="postalCode">
		<xs:restriction base="xs:token">
			<xs:maxLength value="6"/>
			<xs:pattern value="([a-zA-Z][0-9][a-zA-Z][0-9][a-zA-Z][0-9])"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="zipCode">
		<xs:restriction base="xs:token">
			<xs:maxLength value="10"/>
			<xs:pattern value="([0-9-])*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="Province">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="code" type="chi:ProvinceCode" use="optional" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="State">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="code" type="chi:StateCode" use="optional" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>


<!-- BEGIN st.lang -->

	<xs:complexType name="LocalizedString">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="language" type="chi:HumanLanguage" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:simpleType name="HumanLanguage">
		<xs:restriction base="xs:token">
			<xs:enumeration value="en-CA"/>
			<xs:enumeration value="fr-CA"/>
		</xs:restriction>
	</xs:simpleType>


<!-- BEGIN Currency -->

	<xs:complexType name="Money">
		<xs:attribute name="value" type="xs:decimal" use="required" />
		<xs:attribute name="currency" type="chi:Currency" default="CAD" use="optional"/>
	</xs:complexType>

	<xs:simpleType name="Currency">
		<xs:restriction base="xs:token"/>
	</xs:simpleType>


<!--  BEGIN Basic code types -->
	
	<xs:simpleType name="UriString">
		<xs:restriction base="xs:string">
			<xs:minLength value="1" />
			<xs:maxLength value="255" />
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="NullType">
		<xs:attribute name="value" type="chi:NullFlavor" use="required" />
	</xs:complexType>

	<xs:complexType name="RestrictedNullType">
		<xs:attribute name="value" type="chi:RestrictedNullFlavor" use="required" />
	</xs:complexType>


<!-- BEGIN Enumerations -->

	<xs:simpleType name="NameUsageType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="L"/>
			<xs:enumeration value="P"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NamePartType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="FAM"/>
			<xs:enumeration value="GIV"/>
			<xs:enumeration value="PFX"/>
			<xs:enumeration value="SFX"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="NamePartQualifierType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="IN"/>
			<xs:enumeration value="BR"/>
			<xs:enumeration value="CL"/>
			<xs:enumeration value="SP"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="PhoneType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="FAX"/>
			<xs:enumeration value="TEL"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="UriType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="HTTP"/>
			<xs:enumeration value="HTTPS"/>
			<xs:enumeration value="FTP"/>
			<xs:enumeration value="MAILTO"/>
			<xs:enumeration value="FILE"/>
			<xs:enumeration value="NFS"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="CompressionCode">
		<xs:restriction base="xs:token">
			<xs:enumeration value="DF"/>
			<xs:enumeration value="GZ"/>
			<xs:enumeration value="ZL"/>
			<xs:enumeration value="Z"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ProvinceCode">
		<xs:restriction base="xs:token">
			<xs:enumeration value="CA-AB"/>
			<xs:enumeration value="CA-BC"/>
			<xs:enumeration value="CA-MB"/>
			<xs:enumeration value="CA-NB"/>
			<xs:enumeration value="CA-NL"/>
			<xs:enumeration value="CA-NS"/>
			<xs:enumeration value="CA-NT"/>
			<xs:enumeration value="CA-NU"/>
			<xs:enumeration value="CA-ON"/>
			<xs:enumeration value="CA-PE"/>
			<xs:enumeration value="CA-QC"/>
			<xs:enumeration value="CA-SK"/>
			<xs:enumeration value="CA-YT"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="StateCode">
		<xs:restriction base="xs:token">
			<xs:enumeration value="US-AK"/>
			<xs:enumeration value="US-AL"/>
			<xs:enumeration value="US-AR"/>
			<xs:enumeration value="US-AZ"/>
			<xs:enumeration value="US-CA"/>
			<xs:enumeration value="US-CO"/>
			<xs:enumeration value="US-CT"/>
			<xs:enumeration value="US-CZ"/>
			<xs:enumeration value="US-DC"/>
			<xs:enumeration value="US-DE"/>
			<xs:enumeration value="US-FL"/>
			<xs:enumeration value="US-GA"/>
			<xs:enumeration value="US-GU"/>
			<xs:enumeration value="US-HI"/>
			<xs:enumeration value="US-IA"/>
			<xs:enumeration value="US-ID"/>
			<xs:enumeration value="US-IL"/>
			<xs:enumeration value="US-IN"/>
			<xs:enumeration value="US-KS"/>
			<xs:enumeration value="US-KY"/>
			<xs:enumeration value="US-LA"/>
			<xs:enumeration value="US-MA"/>
			<xs:enumeration value="US-MD"/>
			<xs:enumeration value="US-ME"/>
			<xs:enumeration value="US-MI"/>
			<xs:enumeration value="US-MN"/>
			<xs:enumeration value="US-MO"/>
			<xs:enumeration value="US-MS"/>
			<xs:enumeration value="US-MT"/>
			<xs:enumeration value="US-NC"/>
			<xs:enumeration value="US-ND"/>
			<xs:enumeration value="US-NE"/>
			<xs:enumeration value="US-NH"/>
			<xs:enumeration value="US-NJ"/>
			<xs:enumeration value="US-NM"/>
			<xs:enumeration value="US-NV"/>
			<xs:enumeration value="US-NY"/>
			<xs:enumeration value="US-OH"/>
			<xs:enumeration value="US-OK"/>
			<xs:enumeration value="US-OR"/>
			<xs:enumeration value="US-PA"/>
			<xs:enumeration value="US-PR"/>
			<xs:enumeration value="US-RI"/>
			<xs:enumeration value="US-SC"/>
			<xs:enumeration value="US-SD"/>
			<xs:enumeration value="US-TN"/>
			<xs:enumeration value="US-TX"/>
			<xs:enumeration value="US-UT"/>
			<xs:enumeration value="US-VA"/>
			<xs:enumeration value="US-VI"/>
			<xs:enumeration value="US-VT"/>
			<xs:enumeration value="US-WA"/>
			<xs:enumeration value="US-WI"/>
			<xs:enumeration value="US-WV"/>
			<xs:enumeration value="US-WY"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="PostalAddressUsageType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="H"/>
			<xs:enumeration value="PHYS"/>
			<xs:enumeration value="PST"/>
			<xs:enumeration value="TMP"/>
			<xs:enumeration value="WP"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="Unit">
		<xs:restriction base="xs:token"/>
	</xs:simpleType>

	<xs:simpleType name="RestrictedNullFlavor">
	  <xs:restriction base="xs:token">
			<xs:enumeration value="NI"/>
			<xs:enumeration value="MSK"/>
			<xs:enumeration value="NA"/>
			<xs:enumeration value="OTH"/>
			<xs:enumeration value="UNK"/>
			<xs:enumeration value="QS"/>
			<xs:enumeration value="NASK"/>
			<xs:enumeration value="TRC"/>
	  </xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="NullFlavor">
	  <xs:union memberTypes="chi:RestrictedNullFlavor">
	    <xs:simpleType>
	      <xs:restriction base="xs:token">
			<xs:enumeration value="NINF"/>
			<xs:enumeration value="PINF"/>
	      </xs:restriction>
	    </xs:simpleType>
	  </xs:union>
	</xs:simpleType>

	<xs:simpleType name="EmailUse">
		<xs:restriction base="xs:token">
			<xs:enumeration value="EC"/>
			<xs:enumeration value="H"/>
			<xs:enumeration value="MC"/>
			<xs:enumeration value="TMP"/>
			<xs:enumeration value="WP"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="PhoneUse">
		<xs:restriction base="xs:token">
			<xs:enumeration value="DIR"/>
			<xs:enumeration value="PG"/>
			<xs:enumeration value="CONF"/>
			<xs:enumeration value="EC"/>
			<xs:enumeration value="H"/>
			<xs:enumeration value="MC"/>
			<xs:enumeration value="TMP"/>
			<xs:enumeration value="WP"/>
		</xs:restriction>
	</xs:simpleType>
	
</xs:schema>