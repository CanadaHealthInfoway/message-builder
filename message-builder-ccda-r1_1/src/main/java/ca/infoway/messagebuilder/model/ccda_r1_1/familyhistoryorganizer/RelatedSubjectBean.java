/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ccda_r1_1.familyhistoryorganizer;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.AD;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CE_R2;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.PN;
import ca.infoway.messagebuilder.datatype.TEL;
import ca.infoway.messagebuilder.datatype.TS_R2;
import ca.infoway.messagebuilder.datatype.impl.ADImpl;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CE_R2Impl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.PNImpl;
import ca.infoway.messagebuilder.datatype.impl.TELImpl;
import ca.infoway.messagebuilder.datatype.impl.TS_R2Impl;
import ca.infoway.messagebuilder.datatype.lang.CodedTypeR2;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.MbDate;
import ca.infoway.messagebuilder.datatype.lang.PersonName;
import ca.infoway.messagebuilder.datatype.lang.PostalAddress;
import ca.infoway.messagebuilder.datatype.lang.TelecommunicationAddress;
import ca.infoway.messagebuilder.domainvalue.AdministrativeGender;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ccda_r1_1.domainvalue.FamilyMember;
import java.util.List;



@Hl7PartTypeMapping({"FamilyHistoryOrganizer.RelatedSubject"})
public class RelatedSubjectBean extends MessagePartBean {

    private static final long serialVersionUID = 20160107L;
    private II typeId = new IIImpl();
    private LIST<II, Identifier> templateId = new LISTImpl<II, Identifier>(IIImpl.class);
    private CE_R2<FamilyMember> code = new CE_R2Impl<FamilyMember>();
    private LIST<AD, PostalAddress> addr = new LISTImpl<AD, PostalAddress>(ADImpl.class);
    private LIST<TEL, TelecommunicationAddress> telecom = new LISTImpl<TEL, TelecommunicationAddress>(TELImpl.class);
    private II subjectTypeId = new IIImpl();
    private LIST<II, Identifier> subjectTemplateId = new LISTImpl<II, Identifier>(IIImpl.class);
    private LIST<II, Identifier> subjectId = new LISTImpl<II, Identifier>(IIImpl.class);
    private LIST<PN, PersonName> subjectName = new LISTImpl<PN, PersonName>(PNImpl.class);
    private CE_R2<AdministrativeGender> subjectAdministrativeGenderCode = new CE_R2Impl<AdministrativeGender>();
    private TS_R2 subjectBirthTime = new TS_R2Impl();
    private BL subjectDeceasedInd = new BLImpl();
    private TS_R2 subjectDeceasedTime = new TS_R2Impl();


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.RelatedSubject.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"typeId"})
    public Identifier getTypeId() {
        return this.typeId.getValue();
    }

    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.RelatedSubject.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setTypeId(Identifier typeId) {
        this.typeId.setValue(typeId);
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.RelatedSubject.templateId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"templateId"})
    public List<Identifier> getTemplateId() {
        return this.templateId.rawList();
    }


    /**
     * <p>Relationship: FamilyHistoryOrganizer.RelatedSubject.code</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    @Hl7XmlMapping({"code"})
    public CodedTypeR2<FamilyMember> getCode() {
        return (CodedTypeR2<FamilyMember>) this.code.getValue();
    }

    /**
     * <p>Relationship: FamilyHistoryOrganizer.RelatedSubject.code</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    public void setCode(CodedTypeR2<FamilyMember> code) {
        this.code.setValue(code);
    }


    /**
     * <p>Relationship: FamilyHistoryOrganizer.RelatedSubject.addr</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"addr"})
    public List<PostalAddress> getAddr() {
        return this.addr.rawList();
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.RelatedSubject.telecom</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"telecom"})
    public List<TelecommunicationAddress> getTelecom() {
        return this.telecom.rawList();
    }


    /**
     * <p>Relationship: FamilyHistoryOrganizer.SubjectPerson.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"subject/typeId"})
    public Identifier getSubjectTypeId() {
        return this.subjectTypeId.getValue();
    }

    /**
     * <p>Relationship: FamilyHistoryOrganizer.SubjectPerson.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setSubjectTypeId(Identifier subjectTypeId) {
        this.subjectTypeId.setValue(subjectTypeId);
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.templateId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"subject/templateId"})
    public List<Identifier> getSubjectTemplateId() {
        return this.subjectTemplateId.rawList();
    }


    /**
     * <p>Relationship: FamilyHistoryOrganizer.SubjectPerson.id</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"subject/id"})
    public List<Identifier> getSubjectId() {
        return this.subjectId.rawList();
    }


    /**
     * <p>Relationship: FamilyHistoryOrganizer.SubjectPerson.name</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"subject/name"})
    public List<PersonName> getSubjectName() {
        return this.subjectName.rawList();
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.administrativeGenderCode</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    @Hl7XmlMapping({"subject/administrativeGenderCode"})
    public CodedTypeR2<AdministrativeGender> getSubjectAdministrativeGenderCode() {
        return (CodedTypeR2<AdministrativeGender>) this.subjectAdministrativeGenderCode.getValue();
    }

    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.administrativeGenderCode</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    public void setSubjectAdministrativeGenderCode(CodedTypeR2<AdministrativeGender> subjectAdministrativeGenderCode) {
        this.subjectAdministrativeGenderCode.setValue(subjectAdministrativeGenderCode);
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.birthTime</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"subject/birthTime"})
    public MbDate getSubjectBirthTime() {
        return this.subjectBirthTime.getValue();
    }

    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.birthTime</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setSubjectBirthTime(MbDate subjectBirthTime) {
        this.subjectBirthTime.setValue(subjectBirthTime);
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.deceasedInd</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"subject/deceasedInd"})
    public Boolean getSubjectDeceasedInd() {
        return this.subjectDeceasedInd.getValue();
    }

    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.deceasedInd</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setSubjectDeceasedInd(Boolean subjectDeceasedInd) {
        this.subjectDeceasedInd.setValue(subjectDeceasedInd);
    }


    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.deceasedTime</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"subject/deceasedTime"})
    public MbDate getSubjectDeceasedTime() {
        return this.subjectDeceasedTime.getValue();
    }

    /**
     * <p>Relationship: 
     * FamilyHistoryOrganizer.SubjectPerson.deceasedTime</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setSubjectDeceasedTime(MbDate subjectDeceasedTime) {
        this.subjectDeceasedTime.setValue(subjectDeceasedTime);
    }

}
