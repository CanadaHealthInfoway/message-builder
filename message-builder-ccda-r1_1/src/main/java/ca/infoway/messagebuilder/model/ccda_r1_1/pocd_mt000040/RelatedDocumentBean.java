/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ccda_r1_1.pocd_mt000040;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS_R2;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.impl.CS_R2Impl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.lang.CodedTypeR2;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ccda_r1_1.domainvalue.x_ActRelationshipDocument;
import java.util.List;



@Hl7PartTypeMapping({"POCD_MT000040.RelatedDocument"})
public class RelatedDocumentBean extends MessagePartBean implements ca.infoway.messagebuilder.model.ccda_r1_1.diagnosticimagingreport.RelatedDocumentChoice {

    private static final long serialVersionUID = 20150206L;
    private CS_R2 typeCode = new CS_R2Impl();
    private LIST<CS_R2, CodedTypeR2<? extends Code>> realmCode = new LISTImpl<CS_R2, CodedTypeR2<? extends Code>>(CS_R2Impl.class);
    private II typeId = new IIImpl();
    private LIST<II, Identifier> templateId = new LISTImpl<II, Identifier>(IIImpl.class);
    private ParentDocumentBean parentDocument;


    /**
     * <p>Relationship: POCD_MT000040.RelatedDocument.typeCode</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"typeCode"})
    public CodedTypeR2<x_ActRelationshipDocument> getTypeCode() {
        return (CodedTypeR2<x_ActRelationshipDocument>) this.typeCode.getValue();
    }

    /**
     * <p>Relationship: POCD_MT000040.RelatedDocument.typeCode</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setTypeCode(CodedTypeR2<x_ActRelationshipDocument> typeCode) {
        this.typeCode.setValue(typeCode);
    }


    /**
     * <p>Relationship: POCD_MT000040.RelatedDocument.realmCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"realmCode"})
    public List<CodedTypeR2<Code>> getRealmCode() {
        return this.realmCode.rawList(CodedTypeR2.class);
    }


    /**
     * <p>Relationship: POCD_MT000040.RelatedDocument.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"typeId"})
    public Identifier getTypeId() {
        return this.typeId.getValue();
    }

    /**
     * <p>Relationship: POCD_MT000040.RelatedDocument.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setTypeId(Identifier typeId) {
        this.typeId.setValue(typeId);
    }


    /**
     * <p>Relationship: POCD_MT000040.RelatedDocument.templateId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"templateId"})
    public List<Identifier> getTemplateId() {
        return this.templateId.rawList();
    }


    /**
     * <p>Relationship: 
     * POCD_MT000040.RelatedDocument.parentDocument</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    @Hl7XmlMapping({"parentDocument"})
    public ParentDocumentBean getParentDocument() {
        return this.parentDocument;
    }

    /**
     * <p>Relationship: 
     * POCD_MT000040.RelatedDocument.parentDocument</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    public void setParentDocument(ParentDocumentBean parentDocument) {
        this.parentDocument = parentDocument;
    }

}
