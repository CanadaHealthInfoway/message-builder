/**
 * Copyright 2011 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_cerx_v01_r04_3.iehr.merged;

import ca.infoway.messagebuilder.annotation.Hl7MapByPartType;
import ca.infoway.messagebuilder.annotation.Hl7MapByPartTypes;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActCode;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.DiagnosisValue;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.pcs_cerx_v01_r04_3.common.merged.PatientBean;
import ca.infoway.messagebuilder.model.pcs_cerx_v01_r04_3.merged.CommentBean;
import java.util.Date;



@Hl7PartTypeMapping({"REPC_MT000003CA.MedicalCondition","REPC_MT000014CA.MedicalCondition"})
@Hl7RootType
public class MedicalConditionBean extends MessagePartBean {

    private static final long serialVersionUID = 20110831L;
    private CD conditionType = new CDImpl();
    private CS conditionStatus = new CSImpl();
    private IVL<TS, Interval<Date>> conditionTimePeriod = new IVLImpl<TS, Interval<Date>>();
    private CV confidentialityCode = new CVImpl();
    private CV condition = new CVImpl();
    private PatientBean subjectPatient;
    private ReportedByBean informant;
    private BL subjectOfChronicIndicator = new BLImpl(false);
    private CommentBean subjectOf2Annotation;
    private II medicalConditionRecordId = new IIImpl();


    /**
     * <p>ConditionType</p>
     * 
     * <p>Condition Type</p>
     */
    @Hl7XmlMapping({"code"})
    public ActCode getConditionType() {
        return (ActCode) this.conditionType.getValue();
    }
    public void setConditionType(ActCode conditionType) {
        this.conditionType.setValue(conditionType);
    }


    /**
     * <p>ConditionStatus</p>
     * 
     * <p>C:Condition Status</p>
     * 
     * <p>D:Condition Status</p>
     */
    @Hl7XmlMapping({"statusCode"})
    public ActStatus getConditionStatus() {
        return (ActStatus) this.conditionStatus.getValue();
    }
    public void setConditionStatus(ActStatus conditionStatus) {
        this.conditionStatus.setValue(conditionStatus);
    }


    /**
     * <p>ConditionTimePeriod</p>
     * 
     * <p>E:Condition Time Period</p>
     * 
     * <p>D:Condition Time Period</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getConditionTimePeriod() {
        return this.conditionTimePeriod.getValue();
    }
    public void setConditionTimePeriod(Interval<Date> conditionTimePeriod) {
        this.conditionTimePeriod.setValue(conditionTimePeriod);
    }


    /**
     * <p>F:Medical Condition Masking Indicator</p>
     * 
     * <p>E:Condition Masking Indicator</p>
     */
    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getConfidentialityCode() {
        return (x_VeryBasicConfidentialityKind) this.confidentialityCode.getValue();
    }
    public void setConfidentialityCode(x_VeryBasicConfidentialityKind confidentialityCode) {
        this.confidentialityCode.setValue(confidentialityCode);
    }


    /**
     * <p>Condition</p>
     * 
     * <p>B:Condition</p>
     * 
     * <p>C:Condition</p>
     */
    @Hl7XmlMapping({"value"})
    public DiagnosisValue getCondition() {
        return (DiagnosisValue) this.condition.getValue();
    }
    public void setCondition(DiagnosisValue condition) {
        this.condition.setValue(condition);
    }


    @Hl7XmlMapping({"subject/patient"})
    public PatientBean getSubjectPatient() {
        return this.subjectPatient;
    }
    public void setSubjectPatient(PatientBean subjectPatient) {
        this.subjectPatient = subjectPatient;
    }


    @Hl7XmlMapping({"informant"})
    public ReportedByBean getInformant() {
        return this.informant;
    }
    public void setInformant(ReportedByBean informant) {
        this.informant = informant;
    }


    @Hl7XmlMapping({"subjectOf/chronicIndicator","subjectOf1/chronicIndicator"})
    @Hl7MapByPartTypes({
        @Hl7MapByPartType(name="subjectOf", type="REPC_MT000014CA.Subject"),
        @Hl7MapByPartType(name="subjectOf/chronicIndicator", type="REPC_MT000014CA.ChronicIndicator"),
        @Hl7MapByPartType(name="subjectOf1", type="REPC_MT000003CA.Subject"),
        @Hl7MapByPartType(name="subjectOf1/chronicIndicator", type="REPC_MT000003CA.ChronicIndicator")})
    public Boolean getSubjectOfChronicIndicator() {
        return this.subjectOfChronicIndicator.getValue();
    }
    public void setSubjectOfChronicIndicator(Boolean subjectOfChronicIndicator) {
        this.subjectOfChronicIndicator.setValue(subjectOfChronicIndicator);
    }


    @Hl7XmlMapping({"subjectOf2/annotation"})
    public CommentBean getSubjectOf2Annotation() {
        return this.subjectOf2Annotation;
    }
    public void setSubjectOf2Annotation(CommentBean subjectOf2Annotation) {
        this.subjectOf2Annotation = subjectOf2Annotation;
    }


    /**
     * <p>MedicalConditionRecordId</p>
     * 
     * <p>A:Medical Condition Record Id</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getMedicalConditionRecordId() {
        return this.medicalConditionRecordId.getValue();
    }
    public void setMedicalConditionRecordId(Identifier medicalConditionRecordId) {
        this.medicalConditionRecordId.setValue(medicalConditionRecordId);
    }

}
