/**
 * Copyright 2011 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.immunization.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CE;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CEImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ParticipationMode;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.merged.ConsentGivenToBean;
import ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.merged.Consenter;
import java.util.Date;



@Hl7PartTypeMapping({"POIZ_MT030050CA.Consent","POIZ_MT030060CA.Consent","POIZ_MT060150CA.Consent"})
public class ConsentBean extends MessagePartBean {

    private static final long serialVersionUID = 20111117L;
    private II id = new IIImpl();
    private BL negationInd = new BLImpl();
    private IVL<TS, Interval<Date>> effectiveTime = new IVLImpl<TS, Interval<Date>>();
    private ConsentGivenToBean receiver;
    private CE responsiblePartyModeCode = new CEImpl();
    private Consenter responsiblePartyConsenter;


    /**
     * <p>ConsentID</p>
     * 
     * <p>Consent ID</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>ConsentWitheldIndicator</p>
     * 
     * <p>Consent witheld indicator</p>
     */
    @Hl7XmlMapping({"negationInd"})
    public Boolean getNegationInd() {
        return this.negationInd.getValue();
    }
    public void setNegationInd(Boolean negationInd) {
        this.negationInd.setValue(negationInd);
    }


    /**
     * <p>ConsentEffectiveAndEndTime</p>
     * 
     * <p>Consent Effective and End Time</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getEffectiveTime() {
        return this.effectiveTime.getValue();
    }
    public void setEffectiveTime(Interval<Date> effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }


    @Hl7XmlMapping({"receiver"})
    public ConsentGivenToBean getReceiver() {
        return this.receiver;
    }
    public void setReceiver(ConsentGivenToBean receiver) {
        this.receiver = receiver;
    }


    /**
     * <p>ConsentMethod</p>
     * 
     * <p>Consent Method</p>
     * 
     * <p><p>Describes the method in which consent was given.</p></p>
     * 
     * <p><p>Allows for explicit communication of how consent was 
     * given (e.g. verbal, written, etc.)</p></p>
     * 
     * <p>Consent Method</p>
     */
    @Hl7XmlMapping({"responsibleParty/modeCode"})
    public ParticipationMode getResponsiblePartyModeCode() {
        return (ParticipationMode) this.responsiblePartyModeCode.getValue();
    }
    public void setResponsiblePartyModeCode(ParticipationMode responsiblePartyModeCode) {
        this.responsiblePartyModeCode.setValue(responsiblePartyModeCode);
    }


    @Hl7XmlMapping({"responsibleParty/consenter"})
    public Consenter getResponsiblePartyConsenter() {
        return this.responsiblePartyConsenter;
    }
    public void setResponsiblePartyConsenter(Consenter responsiblePartyConsenter) {
        this.responsiblePartyConsenter = responsiblePartyConsenter;
    }

}
