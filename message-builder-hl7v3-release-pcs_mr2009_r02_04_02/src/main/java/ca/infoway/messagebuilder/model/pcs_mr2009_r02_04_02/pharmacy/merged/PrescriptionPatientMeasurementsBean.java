/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.pharmacy.merged;

import java.util.Date;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.domainvalue.x_ActObservationHeightOrWeight;
import ca.infoway.messagebuilder.model.MessagePartBean;



/**
 * <p>PrescriptionPatientMeasurements</p>
 * 
 * <p>PORX_MT060340CA.QuantityObservationEvent: Prescription 
 * Patient Measurements</p>
 * 
 * <p><p>This comprises the height and/or weight of a patient 
 * as measured/observed/known by the prescriber at the time of 
 * prescribing.</p></p>
 * 
 * <p><p>Allows patient height and weight to be conveyed to the 
 * pharmacy for dosage calculation or verification</p></p>
 * 
 * <p>PORX_MT010120CA.QuantityObservationEvent: Prescription 
 * Patient Measurements</p>
 * 
 * <p><p>This comprises the height and/or weight of a patient 
 * as measured/observed/known by the prescriber at the time of 
 * prescribing.</p></p>
 * 
 * <p><p>Allows patient height and weight to be conveyed to the 
 * pharmacy for dosage calculation or verification;</p></p>
 * 
 * <p>PORX_MT060160CA.QuantityObservationEvent: Prescription 
 * Patient Measurements</p>
 * 
 * <p><p>This comprises the height and/or weight of a patient 
 * as measured/observed/known by the prescriber at the time of 
 * prescribing.</p></p>
 * 
 * <p><p>Allows patient height and weight to be conveyed to the 
 * pharmacy for dosage calculation or verification</p></p>
 */
@Hl7PartTypeMapping({"PORX_MT010120CA.QuantityObservationEvent","PORX_MT060160CA.QuantityObservationEvent","PORX_MT060340CA.QuantityObservationEvent"})
public class PrescriptionPatientMeasurementsBean extends MessagePartBean {

    private static final long serialVersionUID = 20110831L;
    private CV prescriptionPatientMeasurementType = new CVImpl();
    private TS effectiveTime = new TSImpl();
    private PQ prescriptionPatientMeasuredValue = new PQImpl();


    /**
     * <p>PrescriptionPatientMeasurementType</p>
     * 
     * <p>Prescription Patient Measurement Type</p>
     * 
     * <p><p>Identification of the type of observation that was 
     * made about the patient. The only two allowable types are 
     * height and weight.</p></p>
     * 
     * <p><p>Distinguishes height from weight.</p><p>Code is 
     * mandatory to ensure that measurements/observations are 
     * distinguishable.</p></p>
     * 
     * <p><p>Distinguishes height from weight.</p><p>Code is 
     * mandatory to ensure that measurements/observations are 
     * distinguishable.</p></p>
     * 
     * <p>Prescription Patient Measurement Type</p>
     * 
     * <p><p>Identification of the type of measurement/observation 
     * that was made about the patient. The only two allowable 
     * types are height and weight.</p></p>
     * 
     * <p><p>Distinguishes what kind of information is being 
     * specified. Code is mandatory to ensure that 
     * measurements/observations are distinguishable.</p></p>
     */
    @Hl7XmlMapping({"code"})
    public x_ActObservationHeightOrWeight getPrescriptionPatientMeasurementType() {
        return (x_ActObservationHeightOrWeight) this.prescriptionPatientMeasurementType.getValue();
    }
    public void setPrescriptionPatientMeasurementType(x_ActObservationHeightOrWeight prescriptionPatientMeasurementType) {
        this.prescriptionPatientMeasurementType.setValue(prescriptionPatientMeasurementType);
    }


    /**
     * <p>Prescription Patient Measurement Time</p>
     * 
     * <p><p>The date on which the measurement was made.</p></p>
     * 
     * <p><p>Allows provider to evaluate currency of the 
     * information.</p><p>The attribute is populated because the 
     * measurement time must be known or a null flavor must be 
     * specified.</p></p>
     * 
     * <p><p>Allows provider to evaluate currency of the 
     * information.</p><p>The attribute is populated because the 
     * measurement time must be known or a null flavor must be 
     * specified.</p></p>
     * 
     * <p>Prescription Patient Measurement Timestamp</p>
     * 
     * <p><p>The date on which the measurement was made</p></p>
     * 
     * <p><p>Allows providers to evaluate currency of the 
     * information.</p><p>Because the date of measurement 
     * determines the relevance of the information, this attribute 
     * is defined as 'populated'.</p></p>
     * 
     * <p><p>Allows providers to evaluate currency of the 
     * information.</p><p>Because the date of measurement 
     * determines the relevance of the information, this attribute 
     * is defined as 'populated'.</p></p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Date getEffectiveTime() {
        return this.effectiveTime.getValue();
    }
    public void setEffectiveTime(Date effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }


    /**
     * <p>PrescriptionPatientMeasuredValue</p>
     * 
     * <p>Prescription Patient Measured Value</p>
     * 
     * <p><p>The amount (quantity and unit) that has been recorded 
     * for the specific type of observation. E.g. height in meters, 
     * weight in kilograms.</p></p>
     * 
     * <p><p>Provides comparable representation of the measurement. 
     * May be used in calculations.</p><p>Attribute is defined as 
     * 'mandatory' to ensure that a value is supplied, if there is 
     * a measurement.</p></p>
     * 
     * <p><p>Provides comparable representation of the measurement. 
     * May be used in calculations.</p><p>Attribute is defined as 
     * 'mandatory' to ensure that a value is supplied, if there is 
     * a measurement.</p></p>
     * 
     * <p>Prescription Patient Measured Value</p>
     * 
     * <p><p>The amount (quantity and unit) that has been recorded 
     * for the patient's height and/or weight. E.g. height in 
     * meters, weight in kilograms, etc.</p></p>
     * 
     * <p><p>OBS.010-02 (quantity)</p><p>OBS.010-03 
     * (unit)</p><p>Clinical.595-H4 (value)</p><p>Clinical.495-H3 
     * (unit)</p></p>
     * 
     * <p><p>OBS.010-02 (quantity)</p><p>OBS.010-03 
     * (unit)</p><p>Clinical.595-H4 (value)</p><p>Clinical.495-H3 
     * (unit)</p></p>
     * 
     * <p><p>OBS.010-02 (quantity)</p><p>OBS.010-03 
     * (unit)</p><p>Clinical.595-H4 (value)</p><p>Clinical.495-H3 
     * (unit)</p></p>
     * 
     * <p><p>OBS.010-02 (quantity)</p><p>OBS.010-03 
     * (unit)</p><p>Clinical.595-H4 (value)</p><p>Clinical.495-H3 
     * (unit)</p></p>
     * 
     * <p><p>Provides comparable representation of the measurement. 
     * May be used in calculations.</p><p>The attribute is 
     * mandatory because the measurement value must be known.</p></p>
     * 
     * <p><p>Provides comparable representation of the measurement. 
     * May be used in calculations.</p><p>The attribute is 
     * mandatory because the measurement value must be known.</p></p>
     */
    @Hl7XmlMapping({"value"})
    public PhysicalQuantity getPrescriptionPatientMeasuredValue() {
        return this.prescriptionPatientMeasuredValue.getValue();
    }
    public void setPrescriptionPatientMeasuredValue(PhysicalQuantity prescriptionPatientMeasuredValue) {
        this.prescriptionPatientMeasuredValue.setValue(prescriptionPatientMeasuredValue);
    }

}
