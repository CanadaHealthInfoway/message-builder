/**
 * Copyright 2011 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.pr.prpm_mt309000ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CE;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CEImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.domainvalue.HumanLanguage;
import ca.infoway.messagebuilder.domainvalue.LanguageAbilityMode;
import ca.infoway.messagebuilder.domainvalue.LanguageAbilityProficiency;
import ca.infoway.messagebuilder.model.MessagePartBean;



/**
 * <p>Language of Communication</p>
 * 
 * <p><p>Information about what language(s) should be used to 
 * communicate with the focal person can be sent in the 
 * LanguageCommunication class.</p></p>
 * 
 * <p><p>Supports the business requirement to identify 
 * languages used by client for the purposes of 
 * communication</p></p>
 */
@Hl7PartTypeMapping({"PRPM_MT309000CA.LanguageCommunication"})
public class LanguageOfCommunicationBean extends MessagePartBean {

    private static final long serialVersionUID = 20110729L;
    private CE languageOfCommunicationCode = new CEImpl();
    private CV languageOfCommunicationSkillsCode = new CVImpl();
    private CV languageOfCommunicationProficiencyLevelCode = new CVImpl();
    private BL languageOfCommunicationPreferenceIndicator = new BLImpl();


    /**
     * <p>Language of Communication Code</p>
     * 
     * <p><p>A code indicating the language of communication</p></p>
     * 
     * <p><p>Mandatory attribute conveying the expected language 
     * message elements are to be transmitted in</p></p>
     */
    @Hl7XmlMapping({"languageCode"})
    public HumanLanguage getLanguageOfCommunicationCode() {
        return (HumanLanguage) this.languageOfCommunicationCode.getValue();
    }
    public void setLanguageOfCommunicationCode(HumanLanguage languageOfCommunicationCode) {
        this.languageOfCommunicationCode.setValue(languageOfCommunicationCode);
    }


    /**
     * <p>Language of Communication Skills Code</p>
     * 
     * <p><p>Indicates the healthcare provider's ability to 
     * communicate in the indicated language i.e. written, spoken, 
     * read</p></p>
     * 
     * <p><p>Required attribute provides additional information 
     * about the healthcare provider's communication skills in a 
     * given language</p></p>
     */
    @Hl7XmlMapping({"modeCode"})
    public LanguageAbilityMode getLanguageOfCommunicationSkillsCode() {
        return (LanguageAbilityMode) this.languageOfCommunicationSkillsCode.getValue();
    }
    public void setLanguageOfCommunicationSkillsCode(LanguageAbilityMode languageOfCommunicationSkillsCode) {
        this.languageOfCommunicationSkillsCode.setValue(languageOfCommunicationSkillsCode);
    }


    /**
     * <p>Language of Communication Proficiency Level Code</p>
     * 
     * <p><p>Indicates the proficiency level at which healthcare 
     * provider is able to communicate in the indicated language of 
     * communication</p></p>
     * 
     * <p><p>Required attribute provides additional information 
     * about the healthcare provider's communication skills in a 
     * given language</p></p>
     */
    @Hl7XmlMapping({"proficiencyLevelCode"})
    public LanguageAbilityProficiency getLanguageOfCommunicationProficiencyLevelCode() {
        return (LanguageAbilityProficiency) this.languageOfCommunicationProficiencyLevelCode.getValue();
    }
    public void setLanguageOfCommunicationProficiencyLevelCode(LanguageAbilityProficiency languageOfCommunicationProficiencyLevelCode) {
        this.languageOfCommunicationProficiencyLevelCode.setValue(languageOfCommunicationProficiencyLevelCode);
    }


    /**
     * <p>Language of Communication Preference Indicator</p>
     * 
     * <p><p>Indicates the preferred language for all 
     * communications.</p></p>
     * 
     * <p><p>Required attribute that supports the business 
     * requirement to indicate the preferred language for all 
     * communications.</p></p>
     */
    @Hl7XmlMapping({"preferenceInd"})
    public Boolean getLanguageOfCommunicationPreferenceIndicator() {
        return this.languageOfCommunicationPreferenceIndicator.getValue();
    }
    public void setLanguageOfCommunicationPreferenceIndicator(Boolean languageOfCommunicationPreferenceIndicator) {
        this.languageOfCommunicationPreferenceIndicator.setValue(languageOfCommunicationPreferenceIndicator);
    }

}
