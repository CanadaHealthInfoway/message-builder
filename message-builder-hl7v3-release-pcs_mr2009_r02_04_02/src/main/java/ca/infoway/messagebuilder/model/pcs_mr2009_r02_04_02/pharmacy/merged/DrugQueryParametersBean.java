/**
 * Copyright 2011 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.pharmacy.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.RawListWrapper;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActCareEventType;
import ca.infoway.messagebuilder.domainvalue.ActMedicationDocumentCode;
import ca.infoway.messagebuilder.domainvalue.ActNonConditionIndicationCode;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.ActTherapyDurationWorkingListCode;
import ca.infoway.messagebuilder.domainvalue.ClinicalDrug;
import ca.infoway.messagebuilder.domainvalue.DiagnosisValue;
import ca.infoway.messagebuilder.domainvalue.IssueFilterCode;
import ca.infoway.messagebuilder.domainvalue.OrderableDrugForm;
import ca.infoway.messagebuilder.domainvalue.PrescriptionDispenseFilterCode;
import ca.infoway.messagebuilder.domainvalue.RouteOfAdministration;
import ca.infoway.messagebuilder.domainvalue.SymptomValue;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.pharmacy.pome_mt010090ca.HasCharacteristicBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>PORX_MT060180CA.ParameterList: Medication Profile Generic 
 * Query Parameters</p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query definition</p></p>
 * 
 * <p>PORX_MT050020CA.ParameterList: Generic Query Parameters</p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query definition</p></p>
 * 
 * <p>POME_MT010050CA.ParameterList: Generic Query Parameters</p>
 * 
 * <p><p>One and only one of Drug Code, Prescribing Indication 
 * Code, or Medication Document ID must be specified.</p></p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query parameters.</p></p>
 * 
 * <p>PORX_MT060170CA.ParameterList: Generic Query Parameters</p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query definition</p></p>
 * 
 * <p>POME_MT010030CA.ParameterList: Drug Query Parameters</p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query parameters</p></p>
 * 
 * <p>POME_MT010090CA.ParameterList: Drug Query Parameters</p>
 * 
 * <p><p>At least one of drug code or drug name must be 
 * specified</p></p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query parameters</p></p>
 */
@Hl7PartTypeMapping({"POME_MT010030CA.ParameterList","POME_MT010050CA.ParameterList","POME_MT010090CA.ParameterList","PORX_MT050020CA.ParameterList","PORX_MT060170CA.ParameterList","PORX_MT060180CA.ParameterList"})
@Hl7RootType
public class DrugQueryParametersBean extends MessagePartBean {

    private static final long serialVersionUID = 20110831L;
    private IVL<TS, Interval<Date>> administrationEffectivePeriod = new IVLImpl<TS, Interval<Date>>();
    private IVL<TS, Interval<Date>> amendedInTimeRange = new IVLImpl<TS, Interval<Date>>();
    private List<II> careCompositionIDs = new ArrayList<II>();
    private List<CV> careCompositionTypes = new ArrayList<CV>();
    private CV diagnosisCode = new CVImpl();
    private CV drugCode = new CVImpl();
    private BL includeEventHistoryIndicator = new BLImpl();
    private BL includeIssuesIndicator = new BLImpl();
    private BL includeNotesIndicator = new BLImpl();
    private BL includePendingChangesIndicator = new BLImpl();
    private CV issueFilterCode = new CVImpl();
    private BL mostRecentByDrugIndicator = new BLImpl();
    private BL mostRecentDispenseForEachRxIndicator = new BLImpl();
    private CV otherIndicationCode = new CVImpl();
    private II otherMedicationRecordId = new IIImpl();
    private II prescriberProviderID = new IIImpl();
    private II prescriptionDispenseNumber = new IIImpl();
    private II prescriptionOrderNumber = new IIImpl();
    private List<CV> prescriptionStatuses = new ArrayList<CV>();
    private List<CV> rxDispenserIndicators = new ArrayList<CV>();
    private CV symptomCode = new CVImpl();
    private List<CV> treatmentTypes = new ArrayList<CV>();
    private II medicationDocumentID = new IIImpl();
    private CV medicationDocumentType = new CVImpl();
    private CV prescribingIndicationDiagnosisCode = new CVImpl();
    private CV prescribingIndicationSymptomCode = new CVImpl();
    private List<HasCharacteristicBean> drugCharacteristics = new ArrayList<HasCharacteristicBean>();
    private CV orderableDrugForm = new CVImpl();
    private ST drugManufacturerName = new STImpl();
    private ST drugName = new STImpl();
    private CV drugRouteCode = new CVImpl();


    /**
     * <p>AdministrationEffectivePeriod</p>
     * 
     * <p>Administration Effective Period</p>
     * 
     * <p><p>For a prescription indicates the period for which the 
     * patient was deemed to be taking the drug.</p><p>Filter the 
     * result set to include only those medication records 
     * (prescription order, prescription dispense and other 
     * medication) for which the patient was deemed to be taking 
     * the drug.</p></p>
     * 
     * <p><p>For a prescription indicates the period for which the 
     * patient was deemed to be taking the drug.</p><p>Filter the 
     * result set to include only those medication records 
     * (prescription order, prescription dispense and other 
     * medication) for which the patient was deemed to be taking 
     * the drug.</p></p>
     * 
     * <p><p>Allows the requester to specify the administration 
     * period of interest for the retrieval. Useful for 
     * constraining run-away queries.</p></p>
     * 
     * <p><p>The determination for applicability for inclusion in 
     * the query response should be considered to be the 'Pick up 
     * date plus the days supply'</p></p>
     * 
     * <p>Administration Effective Period</p>
     * 
     * <p><p>Indicates the administration period for which the 
     * request/query applies.</p><p>Filter the result set to 
     * include only those medication records (prescription order, 
     * prescription dispense and other active medication) for which 
     * the patient was deemed to be taking the drug within the 
     * specified period.</p></p>
     * 
     * <p><p>Indicates the administration period for which the 
     * request/query applies.</p><p>Filter the result set to 
     * include only those medication records (prescription order, 
     * prescription dispense and other active medication) for which 
     * the patient was deemed to be taking the drug within the 
     * specified period.</p></p>
     * 
     * <p><p>Allows the requester to specify the administration 
     * period of interest for the retrieval. Useful for 
     * constraining run-away queries.</p></p>
     * 
     * <p><p>The determination for applicability for inclusion in 
     * the query response should be considered to be the 'Pick up 
     * date plus the days supply'</p></p>
     */
    @Hl7XmlMapping({"administrationEffectivePeriod/value"})
    public Interval<Date> getAdministrationEffectivePeriod() {
        return this.administrationEffectivePeriod.getValue();
    }
    public void setAdministrationEffectivePeriod(Interval<Date> administrationEffectivePeriod) {
        this.administrationEffectivePeriod.setValue(administrationEffectivePeriod);
    }


    /**
     * <p>AmendedInTimeRange</p>
     * 
     * <p>Amended in Time Range</p>
     * 
     * <p><p>Indicates that the returned records should be filtered 
     * to only include those which have been amended in some way 
     * (had status changed, been annotated, prescription was 
     * dispensed, etc.) within the indicated time-period. This will 
     * commonly be used to '''retrieve everything that has been 
     * amended since xxx'''.</p></p>
     * 
     * <p><p>Allows the requester to specify the event period of 
     * interest for the retrieval of medication 
     * records.</p><p>Useful for constraining run-away queries.</p></p>
     * 
     * <p><p>Allows the requester to specify the event period of 
     * interest for the retrieval of medication 
     * records.</p><p>Useful for constraining run-away queries.</p></p>
     * 
     * <p>Amended In Time Range</p>
     * 
     * <p><p>Indicates that the returned records should be filtered 
     * to only include those which have been amended in some way 
     * (had status changed, been annotated, prescription was 
     * dispensed, etc.) within the indicated time-period. This will 
     * commonly be used to 'retrieve everything that has been 
     * amended since xxx'.</p></p>
     * 
     * <p><p>Allows the requester to specify the event period of 
     * interest for the retrieval of medication 
     * records.</p><p>Useful for constraining run-away queries.</p></p>
     * 
     * <p><p>Allows the requester to specify the event period of 
     * interest for the retrieval of medication 
     * records.</p><p>Useful for constraining run-away queries.</p></p>
     */
    @Hl7XmlMapping({"amendedInTimeRange/value"})
    public Interval<Date> getAmendedInTimeRange() {
        return this.amendedInTimeRange.getValue();
    }
    public void setAmendedInTimeRange(Interval<Date> amendedInTimeRange) {
        this.amendedInTimeRange.setValue(amendedInTimeRange);
    }


    /**
     * <p>CareCompositionIDs</p>
     * 
     * <p>Care Composition IDs</p>
     * 
     * <p><p>Filters the records retrieved to only include those 
     * associated with the specified encounter, episode or care 
     * event. If unspecified, no filter is applied.</p><p>Note: 
     * When matching on care composition id, systems should also 
     * retrieve records with a fulfillment id to requisitions 
     * associated with the care composition. E.g. When retrieving 
     * records associated with an encounter which includes a 
     * referral, the retrieved records should also include the care 
     * summary created in fulfillment of the referral.</p></p>
     * 
     * <p><p>Filters the records retrieved to only include those 
     * associated with the specified encounter, episode or care 
     * event. If unspecified, no filter is applied.</p><p>Note: 
     * When matching on care composition id, systems should also 
     * retrieve records with a fulfillment id to requisitions 
     * associated with the care composition. E.g. When retrieving 
     * records associated with an encounter which includes a 
     * referral, the retrieved records should also include the care 
     * summary created in fulfillment of the referral.</p></p>
     * 
     * <p><p>Allows retrieving all records associated with an 
     * encounter, episode or care event.</p></p>
     */
    @Hl7XmlMapping({"careCompositionID/value"})
    public List<Identifier> getCareCompositionIDs() {
        return new RawListWrapper<II, Identifier>(careCompositionIDs, IIImpl.class);
    }


    /**
     * <p>CareCompositionTypes</p>
     * 
     * <p>Care Composition Types</p>
     * 
     * <p><p>Filters the records retrieved to only include those 
     * associated with the specified 'kind' of encounter, episode 
     * or care event. If unspecified, no filter is applied.</p></p>
     * 
     * <p><p>Allows retrieving all records associated with a 
     * particular type of encounter, episode or care event. 
     * E.g.Orthopedic Clinic Encounter, ER encounter, Walk-in 
     * encounter, etc.</p></p>
     */
    @Hl7XmlMapping({"careCompositionType/value"})
    public List<ActCareEventType> getCareCompositionTypes() {
        return new RawListWrapper<CV, ActCareEventType>(careCompositionTypes, CVImpl.class);
    }


    /**
     * <p>DiagnosisCode</p>
     * 
     * <p>Diagnosis Code</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those records pertaining to the specified 
     * diagnosis indication code.</p></p>
     * 
     * <p><p>Allows for the retrieval of patient's prescriptions 
     * and/or dispenses based on prescribing indications.</p></p>
     */
    @Hl7XmlMapping({"diagnosisCode/value"})
    public DiagnosisValue getDiagnosisCode() {
        return (DiagnosisValue) this.diagnosisCode.getValue();
    }
    public void setDiagnosisCode(DiagnosisValue diagnosisCode) {
        this.diagnosisCode.setValue(diagnosisCode);
    }


    /**
     * <p>DrugCode</p>
     * 
     * <p>B:Drug Code</p>
     * 
     * <p><p>An identifier for a type of drug. Types of drugs 
     * include: Manufactured drug, generic formulation, generic, 
     * therapeutic class, etc.</p></p>
     * 
     * <p><p>Allows the requester to retrieve drugs of certain 
     * abstraction only. These drug abstractions include: 
     * Manufactured drug, generic formulation, generic, therapeutic 
     * class, etc.</p></p>
     * 
     * <p>E:Drug Code</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those contraindications pertaining to the 
     * specified drug.</p><p>The code may refer to an 
     * administerable medication, an orderable medication or a 
     * higher level drug classification.</p><p>The contraindication 
     * records retrieve would comprise the drug-drug interactions 
     * between this specified and each of the drugs on the 
     * patient's profile, as well as drug-disease and drug-allergy 
     * contraindications that might result (based on the 
     * information on the patient's profile).</p></p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those contraindications pertaining to the 
     * specified drug.</p><p>The code may refer to an 
     * administerable medication, an orderable medication or a 
     * higher level drug classification.</p><p>The contraindication 
     * records retrieve would comprise the drug-drug interactions 
     * between this specified and each of the drugs on the 
     * patient's profile, as well as drug-disease and drug-allergy 
     * contraindications that might result (based on the 
     * information on the patient's profile).</p></p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those contraindications pertaining to the 
     * specified drug.</p><p>The code may refer to an 
     * administerable medication, an orderable medication or a 
     * higher level drug classification.</p><p>The contraindication 
     * records retrieve would comprise the drug-drug interactions 
     * between this specified and each of the drugs on the 
     * patient's profile, as well as drug-disease and drug-allergy 
     * contraindications that might result (based on the 
     * information on the patient's profile).</p></p>
     * 
     * <p><p>Allows for the retrieval of all potential 
     * contraindications based on a specific medication being 
     * introduced onto the patient's medication profile. 
     * Contraindications can't be found without specifying the 
     * medication, therefore this attribute is 
     * mandatory.</p><p>This will most commonly be used by 
     * providers to test the viability of prescribing/dispensing a 
     * medication to a patient (in view of the patient's existing 
     * medication profile).</p></p>
     * 
     * <p><p>Allows for the retrieval of all potential 
     * contraindications based on a specific medication being 
     * introduced onto the patient's medication profile. 
     * Contraindications can't be found without specifying the 
     * medication, therefore this attribute is 
     * mandatory.</p><p>This will most commonly be used by 
     * providers to test the viability of prescribing/dispensing a 
     * medication to a patient (in view of the patient's existing 
     * medication profile).</p></p>
     * 
     * <p>B:Drug Code</p>
     * 
     * <p><p>An identifier that describes a drug at any level of 
     * the clinical drug hierarchy. The code may describe (point 
     * to) a Manufactured drug, generic drug formulation, generic 
     * drug, therapeutic classification, etc.</p><p>For example, 
     * using a therapeutic class code in the DrugCode parameter 
     * would return a list of all drugs that are within that class. 
     * Sending a drug name in the DrugName parameter would return a 
     * list of all drugs that have that name e.g. sending 
     * acetaminophen would return all of the acetaminophen products 
     * in the drug data base. By including the DoseForm, DoseRoute, 
     * DrugManufacturerName or DrugCharacteristic, the list could 
     * be further constrained.</p></p>
     * 
     * <p><p>An identifier that describes a drug at any level of 
     * the clinical drug hierarchy. The code may describe (point 
     * to) a Manufactured drug, generic drug formulation, generic 
     * drug, therapeutic classification, etc.</p><p>For example, 
     * using a therapeutic class code in the DrugCode parameter 
     * would return a list of all drugs that are within that class. 
     * Sending a drug name in the DrugName parameter would return a 
     * list of all drugs that have that name e.g. sending 
     * acetaminophen would return all of the acetaminophen products 
     * in the drug data base. By including the DoseForm, DoseRoute, 
     * DrugManufacturerName or DrugCharacteristic, the list could 
     * be further constrained.</p></p>
     * 
     * <p><p>Allows the requester to retrieve drugs of certain 
     * abstraction only. These drug abstractions include: 
     * Manufactured drug, generic formulation, generic, therapeutic 
     * class, etc.</p></p>
     * 
     * <p>B:Drug Code</p>
     * 
     * <p><p>An identifier for a specific drug product. Types of 
     * drugs identified by drug code include: Manufactured drug, 
     * generic formulation, generic, therapeutic class, etc.</p></p>
     * 
     * <p><p>Allows the requester to retrieve detail information 
     * about a specific drug product.</p></p>
     * 
     * <p>Drug Code</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those records pertaining to the specified drug. 
     * The code may refer to an orderable medication or a higher 
     * level drug classification.</p></p>
     * 
     * <p><p>Allows for the retrieval of patient prescriptions 
     * and/or dispenses based on a specific medication that was 
     * ordered and/or dispensed. This will most commonly be used to 
     * filter for therapeutic classifications such as 
     * &quot;Anti-hypertensives&quot;.</p></p>
     */
    @Hl7XmlMapping({"drugCode/value"})
    public ClinicalDrug getDrugCode() {
        return (ClinicalDrug) this.drugCode.getValue();
    }
    public void setDrugCode(ClinicalDrug drugCode) {
        this.drugCode.setValue(drugCode);
    }


    /**
     * <p>IncludeEventHistoryIndicator</p>
     * 
     * <p>Include Event History Indicator</p>
     * 
     * <p><p>Indicates whether or not history events associated 
     * with a prescription order, prescription dispense and/or 
     * active medications are to be returned along with the 
     * detailed information.</p><p>&quot;Pending&quot; changes will 
     * be returned regardless of the setting of this flag.</p></p>
     * 
     * <p><p>Indicates whether or not history events associated 
     * with a prescription order, prescription dispense and/or 
     * active medications are to be returned along with the 
     * detailed information.</p><p>&quot;Pending&quot; changes will 
     * be returned regardless of the setting of this flag.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * history in the retrieval of the requested 
     * information.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * history in the retrieval of the requested 
     * information.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     * 
     * <p>Include Event History Indicator</p>
     * 
     * <p><p>Indicates whether or not history events associated 
     * with a prescription order, prescription dispense and/or 
     * other active medications are to be returned along with the 
     * detailed information.</p><p>&quot;Pending&quot; changes will 
     * be returned regardless of the setting of this flag.</p></p>
     * 
     * <p><p>Indicates whether or not history events associated 
     * with a prescription order, prescription dispense and/or 
     * other active medications are to be returned along with the 
     * detailed information.</p><p>&quot;Pending&quot; changes will 
     * be returned regardless of the setting of this flag.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * history in the retrieval of the requested 
     * information.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * history in the retrieval of the requested 
     * information.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"includeEventHistoryIndicator/value"})
    public Boolean getIncludeEventHistoryIndicator() {
        return this.includeEventHistoryIndicator.getValue();
    }
    public void setIncludeEventHistoryIndicator(Boolean includeEventHistoryIndicator) {
        this.includeEventHistoryIndicator.setValue(includeEventHistoryIndicator);
    }


    /**
     * <p>IncludeIssuesIndicator</p>
     * 
     * <p>Include Issues Indicator</p>
     * 
     * <p><p>Indicates whether or not Issues (detected and/or 
     * managed) attached to the prescriptions, dispenses and other 
     * active medication records are to be returned along with the 
     * detailed information.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * issues in the retrieval of medication detail profile 
     * data.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * issues in the retrieval of medication detail profile 
     * data.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"includeIssuesIndicator/value"})
    public Boolean getIncludeIssuesIndicator() {
        return this.includeIssuesIndicator.getValue();
    }
    public void setIncludeIssuesIndicator(Boolean includeIssuesIndicator) {
        this.includeIssuesIndicator.setValue(includeIssuesIndicator);
    }


    /**
     * <p>IncludeNotesIndicator</p>
     * 
     * <p>Include Notes Indicator</p>
     * 
     * <p><p>Indicates whether or not notes attached to the 
     * prescription, dispenses and other active medication records 
     * are to be returned along with the detailed information.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including notes 
     * in the retrieval of information for medication profile 
     * detail data.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including notes 
     * in the retrieval of information for medication profile 
     * detail data.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"includeNotesIndicator/value"})
    public Boolean getIncludeNotesIndicator() {
        return this.includeNotesIndicator.getValue();
    }
    public void setIncludeNotesIndicator(Boolean includeNotesIndicator) {
        this.includeNotesIndicator.setValue(includeNotesIndicator);
    }


    /**
     * <p>IncludePendingChangesIndicator</p>
     * 
     * <p>Include Pending Changes Indicator</p>
     * 
     * <p><p>Indicates whether to include future changes (e.g. 
     * status changes that aren't effective yet) associated with a 
     * prescription order, prescription dispense and/or active 
     * medications are to be returned along with the detailed 
     * information.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * future events in the retrieval of the requested 
     * information.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     * 
     * <p><p>Allows for the flexibility of omitting/including 
     * future events in the retrieval of the requested 
     * information.</p><p>Because the attribute is boolean, it must 
     * explicitly indicate a 'TRUE' or 'FALSE', and thus it is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"includePendingChangesIndicator/value"})
    public Boolean getIncludePendingChangesIndicator() {
        return this.includePendingChangesIndicator.getValue();
    }
    public void setIncludePendingChangesIndicator(Boolean includePendingChangesIndicator) {
        this.includePendingChangesIndicator.setValue(includePendingChangesIndicator);
    }


    /**
     * <p>IssueFilterCode</p>
     * 
     * <p>Issue Filter Code</p>
     * 
     * <p><p>Indicates whether records to be returned (e.g. 
     * prescription order, prescription dispense and/or other 
     * medication) should be filtered to those with at least one 
     * persistent un-managed issue (against the record), with at 
     * least one persistent issues or should return all records, 
     * independent of the presence of persistent issues.</p></p>
     * 
     * <p><p>By filtering returned records to include only those 
     * which have unmanaged issues or any issues at all, allows a 
     * provider to focus on those aspects of care where extra 
     * attention is needed. Because the attribute must be known, it 
     * is mandatory.</p></p>
     */
    @Hl7XmlMapping({"issueFilterCode/value"})
    public IssueFilterCode getIssueFilterCode() {
        return (IssueFilterCode) this.issueFilterCode.getValue();
    }
    public void setIssueFilterCode(IssueFilterCode issueFilterCode) {
        this.issueFilterCode.setValue(issueFilterCode);
    }


    /**
     * <p>MostRecentByDrugIndicator</p>
     * 
     * <p>Most Recent By Drug Indicator</p>
     * 
     * <p><p>Indicates whether or not the medication records are to 
     * be retrieved based on the most recent by Drug Code. If true, 
     * only the most recent prescription, dispense or other active 
     * medication for a particular drug generic classification will 
     * be returned. The default is 'FALSE' indicating that 
     * retrieval of prescription, dispense and other active 
     * medication records should not be limited to one per 
     * drug.</p></p>
     * 
     * <p><p>Helps decrease the volume of records returned, while 
     * still maintaining information on all drugs that the patient 
     * is on.</p><p>Because this is a boolean attribute whose value 
     * must be known to evaluate the query, the attribute is 
     * mandatory.</p></p>
     * 
     * <p><p>Helps decrease the volume of records returned, while 
     * still maintaining information on all drugs that the patient 
     * is on.</p><p>Because this is a boolean attribute whose value 
     * must be known to evaluate the query, the attribute is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"mostRecentByDrugIndicator/value"})
    public Boolean getMostRecentByDrugIndicator() {
        return this.mostRecentByDrugIndicator.getValue();
    }
    public void setMostRecentByDrugIndicator(Boolean mostRecentByDrugIndicator) {
        this.mostRecentByDrugIndicator.setValue(mostRecentByDrugIndicator);
    }


    /**
     * <p>MostRecentDispenseForEachRxIndicator</p>
     * 
     * <p>Most Recent Dispense for each Rx Indicator</p>
     * 
     * <p><p>Indicates whether or not a prescription dispenses 
     * returned on a query should be limited to only the most 
     * recent dispense for a prescription.</p><p>Allows the 
     * returning of at most one prescription dispense record per a 
     * prescription.</p><p>The default is 'TRUE' indicating that 
     * retrieval should be for only the most recent dispense for a 
     * prescription is to be included in a query result.</p></p>
     * 
     * <p><p>Indicates whether or not a prescription dispenses 
     * returned on a query should be limited to only the most 
     * recent dispense for a prescription.</p><p>Allows the 
     * returning of at most one prescription dispense record per a 
     * prescription.</p><p>The default is 'TRUE' indicating that 
     * retrieval should be for only the most recent dispense for a 
     * prescription is to be included in a query result.</p></p>
     * 
     * <p><p>Indicates whether or not a prescription dispenses 
     * returned on a query should be limited to only the most 
     * recent dispense for a prescription.</p><p>Allows the 
     * returning of at most one prescription dispense record per a 
     * prescription.</p><p>The default is 'TRUE' indicating that 
     * retrieval should be for only the most recent dispense for a 
     * prescription is to be included in a query result.</p></p>
     * 
     * <p><p>Helps to trim down volume of query response by 
     * eliminating multiple dispenses for the same 
     * prescription.</p><p>Because this is a boolean attribute 
     * whose value must be known to evaluate the query, the 
     * attribute is mandatory.</p></p>
     * 
     * <p><p>Helps to trim down volume of query response by 
     * eliminating multiple dispenses for the same 
     * prescription.</p><p>Because this is a boolean attribute 
     * whose value must be known to evaluate the query, the 
     * attribute is mandatory.</p></p>
     */
    @Hl7XmlMapping({"mostRecentDispenseForEachRxIndicator/value"})
    public Boolean getMostRecentDispenseForEachRxIndicator() {
        return this.mostRecentDispenseForEachRxIndicator.getValue();
    }
    public void setMostRecentDispenseForEachRxIndicator(Boolean mostRecentDispenseForEachRxIndicator) {
        this.mostRecentDispenseForEachRxIndicator.setValue(mostRecentDispenseForEachRxIndicator);
    }


    /**
     * <p>OtherIndicationCode</p>
     * 
     * <p>Other Indication Code</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those records pertaining to the specified 
     * non-condition-related indication code.</p></p>
     * 
     * <p><p>Allows for the retrieval of patient's prescriptions 
     * and/or dispenses based on prescribing indications.</p></p>
     */
    @Hl7XmlMapping({"otherIndicationCode/value"})
    public ActNonConditionIndicationCode getOtherIndicationCode() {
        return (ActNonConditionIndicationCode) this.otherIndicationCode.getValue();
    }
    public void setOtherIndicationCode(ActNonConditionIndicationCode otherIndicationCode) {
        this.otherIndicationCode.setValue(otherIndicationCode);
    }


    /**
     * <p>OtherMedicationRecordId</p>
     * 
     * <p>E:Other Medication Record Id</p>
     * 
     * <p><p>Identifier of the other active medication record for 
     * which detailed information is to be retrieved.</p></p>
     * 
     * <p><p>Allows for the retrieval of medication records based 
     * on a specific active medication record.</p></p>
     */
    @Hl7XmlMapping({"otherMedicationRecordId/value"})
    public Identifier getOtherMedicationRecordId() {
        return this.otherMedicationRecordId.getValue();
    }
    public void setOtherMedicationRecordId(Identifier otherMedicationRecordId) {
        this.otherMedicationRecordId.setValue(otherMedicationRecordId);
    }


    /**
     * <p>PrescriberProviderID</p>
     * 
     * <p>Prescriber Provider ID</p>
     * 
     * <p><p>Identifier of the prescriber who created and/or 
     * supervised the prescriptions being retrieved.</p><p>The 
     * result set will be filtered to only include records which 
     * were either directly created by this provider, or were 
     * created 'under the supervision' of this provider.</p></p>
     * 
     * <p><p>Identifier of the prescriber who created and/or 
     * supervised the prescriptions being retrieved.</p><p>The 
     * result set will be filtered to only include records which 
     * were either directly created by this provider, or were 
     * created 'under the supervision' of this provider.</p></p>
     * 
     * <p><p>Allows for the retrieval of prescriptions based on the 
     * specific prescribers.</p></p>
     */
    @Hl7XmlMapping({"prescriberProviderID/value"})
    public Identifier getPrescriberProviderID() {
        return this.prescriberProviderID.getValue();
    }
    public void setPrescriberProviderID(Identifier prescriberProviderID) {
        this.prescriberProviderID.setValue(prescriberProviderID);
    }


    /**
     * <p>PrescriptionDispenseNumber</p>
     * 
     * <p>E:Prescription Dispense Number</p>
     * 
     * <p><p>Identifies which prescription dispense record should 
     * be retrieved.</p></p>
     * 
     * <p><p>Allows for the retrieval of medication records 
     * relating to a specific dispense record.</p></p>
     */
    @Hl7XmlMapping({"prescriptionDispenseNumber/value"})
    public Identifier getPrescriptionDispenseNumber() {
        return this.prescriptionDispenseNumber.getValue();
    }
    public void setPrescriptionDispenseNumber(Identifier prescriptionDispenseNumber) {
        this.prescriptionDispenseNumber.setValue(prescriptionDispenseNumber);
    }


    /**
     * <p>PrescriptionOrderNumber</p>
     * 
     * <p>D:Prescription Order Number</p>
     * 
     * <p><p>Identifier of the prescription for which detailed 
     * information is required.</p><p>The result set will be 
     * filtered to only the specific prescription.</p></p>
     * 
     * <p><p>Identifier of the prescription for which detailed 
     * information is required.</p><p>The result set will be 
     * filtered to only the specific prescription.</p></p>
     * 
     * <p><p>Identifies the prescription that is to be 
     * retrieved.</p></p>
     */
    @Hl7XmlMapping({"prescriptionOrderNumber/value"})
    public Identifier getPrescriptionOrderNumber() {
        return this.prescriptionOrderNumber.getValue();
    }
    public void setPrescriptionOrderNumber(Identifier prescriptionOrderNumber) {
        this.prescriptionOrderNumber.setValue(prescriptionOrderNumber);
    }


    /**
     * <p>PrescriptionStatuses</p>
     * 
     * <p>Prescription Statuses</p>
     * 
     * <p><p>Indicates that prescriptions of a specific statuses 
     * are to be included in the result set. Specific prescription 
     * statuses are: 'active', completed', 'aborted', 
     * 'suspended'.</p></p>
     * 
     * <p><p>Allows for the retrieval of patient prescriptions and 
     * dispenses based on the lifecycle state of the 
     * prescription.</p></p>
     */
    @Hl7XmlMapping({"prescriptionStatus/value"})
    public List<ActStatus> getPrescriptionStatuses() {
        return new RawListWrapper<CV, ActStatus>(prescriptionStatuses, CVImpl.class);
    }


    /**
     * <p>RxDispenserIndicators</p>
     * 
     * <p>Rx Dispenser Indicators</p>
     * 
     * <p><p>A coded value indicating the dispensing (fill) status 
     * of the prescription to be included in the result set. Rx 
     * Dispense Indicators include: ND (Never Dispensed), DRR 
     * (Dispensed with Refills Remaining), etc.</p><p>The 
     * repetition of 3 allows for retrieval based on all three Rx 
     * Dispense Indicators.</p></p>
     * 
     * <p><p>A coded value indicating the dispensing (fill) status 
     * of the prescription to be included in the result set. Rx 
     * Dispense Indicators include: ND (Never Dispensed), DRR 
     * (Dispensed with Refills Remaining), etc.</p><p>The 
     * repetition of 3 allows for retrieval based on all three Rx 
     * Dispense Indicators.</p></p>
     * 
     * <p><p>Allows for finer sub-set of prescriptions to be 
     * retrieved based on the fill status of the prescription.</p></p>
     */
    @Hl7XmlMapping({"rxDispenseIndicator/value"})
    public List<PrescriptionDispenseFilterCode> getRxDispenserIndicators() {
        return new RawListWrapper<CV, PrescriptionDispenseFilterCode>(rxDispenserIndicators, CVImpl.class);
    }


    /**
     * <p>SymptomCode</p>
     * 
     * <p>Symptom Code</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those records pertaining to the specified 
     * symptom indication code.</p></p>
     * 
     * <p><p>Allows for the retrieval of patient's prescriptions 
     * and/or dispenses based on prescribing indications.</p></p>
     */
    @Hl7XmlMapping({"symptomCode/value"})
    public SymptomValue getSymptomCode() {
        return (SymptomValue) this.symptomCode.getValue();
    }
    public void setSymptomCode(SymptomValue symptomCode) {
        this.symptomCode.setValue(symptomCode);
    }


    /**
     * <p>TreatmentTypes</p>
     * 
     * <p>Treatment Types</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * only include those records pertaining to the specified 
     * treatment type (categories). The specific values are 
     * &quot;Continuous/Chronic&quot;, &quot;Short-Term/Acute&quot; 
     * and &quot;As-Needed/PRN&quot;.</p></p>
     * 
     * <p><p>Allows for the retrieval of prescriptions and 
     * dispensed based on the intended treatment type of the 
     * prescription. Repetition of 2 will allow for the result set 
     * to be filtered based on 1 or two treatment types.</p></p>
     */
    @Hl7XmlMapping({"treatmentType/value"})
    public List<ActTherapyDurationWorkingListCode> getTreatmentTypes() {
        return new RawListWrapper<CV, ActTherapyDurationWorkingListCode>(treatmentTypes, CVImpl.class);
    }


    /**
     * <p>MedicationDocumentID</p>
     * 
     * <p>E:Medication Document ID</p>
     * 
     * <p><p>Unique identifier for a particular medication 
     * document. This will reference a specific kind of 
     * documentation (e.g. DDI Monograph, Patient Education 
     * Monograph, Allergy Monograph, etc) created by a specific 
     * author organization (e.g. Health Canada, FDB, WHO, etc).</p></p>
     * 
     * <p><p>Use of an identifier allows for a quick retrieval of 
     * the information of interest.</p></p>
     */
    @Hl7XmlMapping({"medicationDocumentID/value"})
    public Identifier getMedicationDocumentID() {
        return this.medicationDocumentID.getValue();
    }
    public void setMedicationDocumentID(Identifier medicationDocumentID) {
        this.medicationDocumentID.setValue(medicationDocumentID);
    }


    /**
     * <p>MedicationDocumentType</p>
     * 
     * <p>D:Medication Document Type</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those medication documents pertaining to the 
     * specified document category.</p><p>Valid medication document 
     * categories include: Drug Monograph, Contraindication 
     * Monograph, Indication Protocol, etc.</p></p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those medication documents pertaining to the 
     * specified document category.</p><p>Valid medication document 
     * categories include: Drug Monograph, Contraindication 
     * Monograph, Indication Protocol, etc.</p></p>
     * 
     * <p><p>Allows for the retrieval of all medication documents 
     * pertaining to a specific document category.</p></p>
     */
    @Hl7XmlMapping({"medicationDocumentType/value"})
    public ActMedicationDocumentCode getMedicationDocumentType() {
        return (ActMedicationDocumentCode) this.medicationDocumentType.getValue();
    }
    public void setMedicationDocumentType(ActMedicationDocumentCode medicationDocumentType) {
        this.medicationDocumentType.setValue(medicationDocumentType);
    }


    /**
     * <p>PrescribingIndicationDiagnosisCode</p>
     * 
     * <p>C:Prescribing Indication Diagnosis Code</p>
     * 
     * <p><p>Returns documents which relate to a particular 
     * diagnosis</p></p>
     * 
     * <p><p>Useful for finding protocols and drug monographs 
     * associated with an indication</p></p>
     */
    @Hl7XmlMapping({"prescribingDiagnosisCode/value"})
    public DiagnosisValue getPrescribingIndicationDiagnosisCode() {
        return (DiagnosisValue) this.prescribingIndicationDiagnosisCode.getValue();
    }
    public void setPrescribingIndicationDiagnosisCode(DiagnosisValue prescribingIndicationDiagnosisCode) {
        this.prescribingIndicationDiagnosisCode.setValue(prescribingIndicationDiagnosisCode);
    }


    /**
     * <p>PrescribingIndicationSymptomCode</p>
     * 
     * <p>Prescribing Indication Symptom Code</p>
     * 
     * <p><p>Returns documents which relate to a particular 
     * symptom</p></p>
     * 
     * <p><p>Useful for finding protocols and drug monographs 
     * associated with an indication</p></p>
     */
    @Hl7XmlMapping({"prescribingSymptomCode/value"})
    public SymptomValue getPrescribingIndicationSymptomCode() {
        return (SymptomValue) this.prescribingIndicationSymptomCode.getValue();
    }
    public void setPrescribingIndicationSymptomCode(SymptomValue prescribingIndicationSymptomCode) {
        this.prescribingIndicationSymptomCode.setValue(prescribingIndicationSymptomCode);
    }


    @Hl7XmlMapping({"drugCharacteristics"})
    public List<HasCharacteristicBean> getDrugCharacteristics() {
        return this.drugCharacteristics;
    }


    /**
     * <p>OrderableDrugForm</p>
     * 
     * <p>D:Orderable Drug Form</p>
     * 
     * <p><p>Indicates the form in which the drug product must is 
     * manufactured.</p></p>
     * 
     * <p><p>Useful filter for searching drugs. Allows the 
     * requester to specify the drug form of interest for the 
     * retrieval.</p></p>
     */
    @Hl7XmlMapping({"drugForm/value"})
    public OrderableDrugForm getOrderableDrugForm() {
        return (OrderableDrugForm) this.orderableDrugForm.getValue();
    }
    public void setOrderableDrugForm(OrderableDrugForm orderableDrugForm) {
        this.orderableDrugForm.setValue(orderableDrugForm);
    }


    /**
     * <p>DrugManufacturerName</p>
     * 
     * <p>F:Drug Manufacturer Name</p>
     * 
     * <p><p>The name of a drug manufacturer.</p></p>
     * 
     * <p><p>Allows for the retrieval of drug products based on the 
     * manufacturer.</p></p>
     * 
     * <p><p>Manufacturer name search will be 'Starts with...' type 
     * of a search.</p></p>
     */
    @Hl7XmlMapping({"drugManufacturerName/value"})
    public String getDrugManufacturerName() {
        return this.drugManufacturerName.getValue();
    }
    public void setDrugManufacturerName(String drugManufacturerName) {
        this.drugManufacturerName.setValue(drugManufacturerName);
    }


    /**
     * <p>DrugName</p>
     * 
     * <p>C:Drug Name</p>
     * 
     * <p><p>The name assigned to a drug.</p></p>
     * 
     * <p><p>Name may be the only identification of a drug known by 
     * many prescribers.</p></p>
     */
    @Hl7XmlMapping({"drugName/value"})
    public String getDrugName() {
        return this.drugName.getValue();
    }
    public void setDrugName(String drugName) {
        this.drugName.setValue(drugName);
    }


    /**
     * <p>DrugRouteCode</p>
     * 
     * <p>E:Drug Route Code</p>
     * 
     * <p><p>A filter based on how the drug should be introduced 
     * into the patient's body (e.g. Oral, topical, etc.)</p></p>
     * 
     * <p><p>Allows limiting the returned list of drugs to a single 
     * route.</p></p>
     */
    @Hl7XmlMapping({"drugRoute/value"})
    public RouteOfAdministration getDrugRouteCode() {
        return (RouteOfAdministration) this.drugRouteCode.getValue();
    }
    public void setDrugRouteCode(RouteOfAdministration drugRouteCode) {
        this.drugRouteCode.setValue(drugRouteCode);
    }

}
