/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2009_r02_04_02.lr.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.domainvalue.ServiceDeliveryLocationPlaceType;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.List;



@Hl7PartTypeMapping({"PRPA_MT202301CA.Place","PRPA_MT202302CA.Place","PRPA_MT202303CA.Place"})
public class PlaceBean extends MessagePartBean {

    private static final long serialVersionUID = 20110407L;
    private List<HasBean> asIdentifiedLocation = new ArrayList<HasBean>();
    private CV locationPlaceType = new CVImpl();
    private BL locationMobileIndicator = new BLImpl();


    @Hl7XmlMapping({"asIdentifiedLocation"})
    public List<HasBean> getAsIdentifiedLocation() {
        return this.asIdentifiedLocation;
    }


    /**
     * <p>LocationPlaceType</p>
     * 
     * <p>E:Location Place Type</p>
     * 
     * <p><p>Distinguishes different levels of location 
     * granularity. E.g. Campus, building, floor, ward, room, 
     * bed.</p></p>
     * 
     * <p><p>Used for searching, as well as for understanding what 
     * is meant by a particular location and is therefore 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"code"})
    public ServiceDeliveryLocationPlaceType getLocationPlaceType() {
        return (ServiceDeliveryLocationPlaceType) this.locationPlaceType.getValue();
    }
    public void setLocationPlaceType(ServiceDeliveryLocationPlaceType locationPlaceType) {
        this.locationPlaceType.setValue(locationPlaceType);
    }


    /**
     * <p>LocationMobileIndicator</p>
     * 
     * <p>F:Location Mobile Indicator</p>
     * 
     * <p><p>An indication of whether a place has the capability to 
     * move from one location to another. Example: air and ground 
     * ambulances, mobile clinics.</p></p>
     * 
     * <p><p>Allows flagging that the location does not have a 
     * fixed physical location.</p><p>This element must always be 
     * known and is therefore mandatory.</p></p>
     * 
     * <p><p>Allows flagging that the location does not have a 
     * fixed physical location.</p><p>This element must always be 
     * known and is therefore mandatory.</p></p>
     */
    @Hl7XmlMapping({"mobileInd"})
    public Boolean getLocationMobileIndicator() {
        return this.locationMobileIndicator.getValue();
    }
    public void setLocationMobileIndicator(Boolean locationMobileIndicator) {
        this.locationMobileIndicator.setValue(locationMobileIndicator);
    }

}
