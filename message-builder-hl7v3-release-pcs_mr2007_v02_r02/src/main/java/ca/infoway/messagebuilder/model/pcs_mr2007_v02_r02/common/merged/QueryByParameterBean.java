/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2007_v02_r02.common.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.INT;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.INTImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.QueryRequestLimit;
import ca.infoway.messagebuilder.domainvalue.ResponseModality;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.List;



/**
 * <p>QueryByParameter</p>
 * 
 * <p>MFMI_MT700751CA.QueryByParameter: Query By Parameter</p>
 * 
 * <p><p>Class which describes the query specifics and 
 * parameter list.</p></p>
 */
@Hl7PartTypeMapping({"MFMI_MT700746CA.QueryByParameter","MFMI_MT700751CA.QueryByParameter","QUQI_MT020000CA.QueryByParameter","QUQI_MT020002CA.QueryByParameter","QUQI_MT120006CA.QueryByParameter","QUQI_MT120008CA.QueryByParameter"})
public class QueryByParameterBean<PL> extends MessagePartBean {

    private static final long serialVersionUID = 20110407L;
    private II queryIdentifier = new IIImpl();
    private CS expeditedQueryIndicator = new CSImpl();
    private INT queryLimit = new INTImpl();
    private CV queryLimitType = new CVImpl();
    private PL parameterList;
    private List<SortControlBean> sortControl = new ArrayList<SortControlBean>();


    /**
     * <p>QueryIdentifier</p>
     * 
     * <p>H:Query Identifier</p>
     * 
     * <p><p>Unique number for this particular query.</p></p>
     * 
     * <p><p>Needed to allow continuation of queries and linking of 
     * query requests and responses and therefore mandatory.</p></p>
     */
    @Hl7XmlMapping({"queryId"})
    public Identifier getQueryIdentifier() {
        return this.queryIdentifier.getValue();
    }
    public void setQueryIdentifier(Identifier queryIdentifier) {
        this.queryIdentifier.setValue(queryIdentifier);
    }


    /**
     * <p>ExpeditedQueryIndicator</p>
     * 
     * <p>K: Expedited Query Indicator</p>
     * 
     * <p><p>This allows the sender to indicate to the receiver 
     * that this query should follow an expedited processing 
     * flow.</p></p>
     * 
     * <p><p>Intended to convey the 'packaging' of query results. 
     * This attribute does not affect which rows are selected by 
     * the query, just the manner in which they are returned. For 
     * example, a batch file containing responses, a response 
     * message containing multiple payloads, or a stream of 
     * response messages (notifications) each identifying itself as 
     * a response to a query request.</p></p>
     * 
     * <p>K: Expedited Query Indicator</p>
     * 
     * <p><p>This allows the sender to indicate to the receiver 
     * that this query should follow an expedited processing 
     * flow.</p></p>
     * 
     * <p><p>Intended to convey the requested 'packaging' of query 
     * results. This attribute does not affect which rows are 
     * selected by the query, just the manner in which they are 
     * returned. For example, a batch file containing responses, a 
     * response message containing multiple payloads, or a stream 
     * of response messages (notifications) each identifying itself 
     * as a response to a query request.</p></p>
     */
    @Hl7XmlMapping({"responseModalityCode"})
    public ResponseModality getExpeditedQueryIndicator() {
        return (ResponseModality) this.expeditedQueryIndicator.getValue();
    }
    public void setExpeditedQueryIndicator(ResponseModality expeditedQueryIndicator) {
        this.expeditedQueryIndicator.setValue(expeditedQueryIndicator);
    }


    /**
     * <p>QueryLimit</p>
     * 
     * <p>I:Query Limit</p>
     * 
     * <p><p>The number of response item repetitions that should be 
     * included in the initial response.</p></p>
     * 
     * <p><p>There may be a very large number of matching rows. To 
     * manage communication bandwidth, a limited set may initially 
     * be returned with further data retrieved by using query 
     * continuations.</p></p>
     * 
     * <p>I:Query Limit</p>
     * 
     * <p><p>The number of response item repetitions that should be 
     * included in the initial response.</p></p>
     * 
     * <p><p>There may be a very large number of matching rows. To 
     * manage communication bandwidth, a limited set may initially 
     * be returned with further data retrieved by using query 
     * continuations.</p></p>
     * 
     * <p><p>If not specified, the default behavior is to return 
     * all repetitions. However the recipient of a query may always 
     * choose to limit the quantity returned to be less than the 
     * number requested. Regardless of the number specified here, 
     * the number of rows returned will never exceed the number of 
     * matching rows based on the query parameters.</p></p>
     */
    @Hl7XmlMapping({"initialQuantity"})
    public Integer getQueryLimit() {
        return this.queryLimit.getValue();
    }
    public void setQueryLimit(Integer queryLimit) {
        this.queryLimit.setValue(queryLimit);
    }


    /**
     * <p>QueryLimitType</p>
     * 
     * <p>J:Query Limit Type</p>
     * 
     * <p><p>Defines the units associated with the magnitude of the 
     * maximum size limit of a query response that can be accepted 
     * by the requesting application.</p></p>
     * 
     * <p><p>Needed to quantify the types of records requested to 
     * be returned in the query.</p></p>
     */
    @Hl7XmlMapping({"initialQuantityCode"})
    public QueryRequestLimit getQueryLimitType() {
        return (QueryRequestLimit) this.queryLimitType.getValue();
    }
    public void setQueryLimitType(QueryRequestLimit queryLimitType) {
        this.queryLimitType.setValue(queryLimitType);
    }


    @Hl7XmlMapping({"parameterList"})
    public PL getParameterList() {
        return this.parameterList;
    }
    public void setParameterList(PL parameterList) {
        this.parameterList = parameterList;
    }


    @Hl7XmlMapping({"sortControl"})
    public List<SortControlBean> getSortControl() {
        return this.sortControl;
    }

}
