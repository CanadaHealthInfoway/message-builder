/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2007_v02_r02.claims.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.MO;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.MOImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Money;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.pcs_mr2007_v02_r02.domainvalue.ActInvoiceGroupCode;



/**
 * <p>Business Name: SubmittedInvoiceGroup</p>
 * 
 * <p>FICR_MT610201CA.InvoiceElementGroup: Submitted Invoice 
 * Group</p>
 * 
 * <p>Unique number generated by the pharmacy software for the 
 * specific invoice element group</p>
 */
@Hl7PartTypeMapping({"FICR_MT610201CA.InvoiceElementGroup","QUCR_MT830201CA.InvoiceElementGroup"})
public class SubmittedInvoiceGroupBean extends MessagePartBean implements ca.infoway.messagebuilder.model.pcs_mr2007_v02_r02.claims.ficr_mt610201ca.InvoiceElementChoice {

    private static final long serialVersionUID = 20150326L;
    private II id = new IIImpl();
    private CV code = new CVImpl();
    private MO netAmt = new MOImpl();


    /**
     * <p>Un-merged Business Name: InvoiceGroupID</p>
     * 
     * <p>Relationship: QUCR_MT830201CA.InvoiceElementGroup.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>For example:</p><p>1. unique invoice group identifier, 
     * independent of adjudicator recipient.</p><p>2. sequential 
     * invoice grouping identifier by adjudicator.</p><p>Obligation 
     * on adjudicator is to return and communicate about this item 
     * with all identifiers (i.e. identifier 1. and 2.).</p>
     * 
     * <p>Set of identifiers that uniquely identify the Invoice 
     * Grouping.</p>
     * 
     * <p>Un-merged Business Name: InvoiceGroupingIdentifier</p>
     * 
     * <p>Relationship: FICR_MT610201CA.InvoiceElementGroup.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>For example:</p><p>1. unique invoice group identifier, 
     * independent of adjudicator recipient.</p><p>2. sequential 
     * invoice grouping identifier by adjudicator.</p><p>Obligation 
     * on adjudicator is to return and communicate about this item 
     * with all identifiers (i.e. identifier 1. and 2.).</p>
     * 
     * <p>OID (object identifier) + unique number generated by the 
     * pharmacy software for the specific invoice element 
     * group.</p><p>For child Invoice Element Groups, the 
     * identifier will be the same as its parent Invoice Element 
     * Group, appended with a &quot;.x&quot;, where &quot;x&quot; 
     * is a number siginifying the occurence of this item under its 
     * parent. For example, the parent id is &quot;12942&quot; and 
     * this is the 2nd item under the parent. Therefore, the id for 
     * this item would be &quot;12942.2&quot;.</p><p>Must not be 
     * the same identifier as the PaymentRequest.id or the 
     * InvoiceElementDetail.id.</p>
     * 
     * <p>Set of identifiers that uniquely identify the Invoice 
     * Grouping.</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }

    /**
     * <p>Un-merged Business Name: InvoiceGroupID</p>
     * 
     * <p>Relationship: QUCR_MT830201CA.InvoiceElementGroup.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>For example:</p><p>1. unique invoice group identifier, 
     * independent of adjudicator recipient.</p><p>2. sequential 
     * invoice grouping identifier by adjudicator.</p><p>Obligation 
     * on adjudicator is to return and communicate about this item 
     * with all identifiers (i.e. identifier 1. and 2.).</p>
     * 
     * <p>Set of identifiers that uniquely identify the Invoice 
     * Grouping.</p>
     * 
     * <p>Un-merged Business Name: InvoiceGroupingIdentifier</p>
     * 
     * <p>Relationship: FICR_MT610201CA.InvoiceElementGroup.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>For example:</p><p>1. unique invoice group identifier, 
     * independent of adjudicator recipient.</p><p>2. sequential 
     * invoice grouping identifier by adjudicator.</p><p>Obligation 
     * on adjudicator is to return and communicate about this item 
     * with all identifiers (i.e. identifier 1. and 2.).</p>
     * 
     * <p>OID (object identifier) + unique number generated by the 
     * pharmacy software for the specific invoice element 
     * group.</p><p>For child Invoice Element Groups, the 
     * identifier will be the same as its parent Invoice Element 
     * Group, appended with a &quot;.x&quot;, where &quot;x&quot; 
     * is a number siginifying the occurence of this item under its 
     * parent. For example, the parent id is &quot;12942&quot; and 
     * this is the 2nd item under the parent. Therefore, the id for 
     * this item would be &quot;12942.2&quot;.</p><p>Must not be 
     * the same identifier as the PaymentRequest.id or the 
     * InvoiceElementDetail.id.</p>
     * 
     * <p>Set of identifiers that uniquely identify the Invoice 
     * Grouping.</p>
     */
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>Business Name: InvoiceType</p>
     * 
     * <p>Un-merged Business Name: InvoiceType</p>
     * 
     * <p>Relationship: FICR_MT610201CA.InvoiceElementGroup.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>of Invoice Grouping.</p><p>Each Invoice Type is used to 
     * specify 1. vocabulary, 2. structure of the Invoice Element 
     * Choice and 3. which Billable Act(s) can be included for the 
     * specified Invoice Type.</p><p>Information on constraints for 
     * the Invoice Type will be found in the NeCST Message 
     * Specifications. Each Benefit Group will indicate which 
     * Invoice Types will be supported by that Benefit 
     * Group.</p><p>Invoice Types will not generate unique and 
     * distinct XML schemas that can tested independent of each 
     * other. They must be tested together within an Message 
     * Type.</p>
     * 
     * <p>RXDINV, RXCINV, CSINV, CPINV, CSPINV only for root 
     * invoice element group.</p><p>RxS1: RXDINV only for root 
     * invoice element group. DRGING for specify drug group.</p>
     * 
     * <p>Invoice Type is the indication to the payor as to the 
     * content rules to apply when processing and adjudicating the 
     * invoice. Basically, the structure of the invoice grouping. 
     * Ie. Clinical Product, Clinical Service, Preferred Accom, Rx 
     * Dispense, Rx Compound</p>
     */
    @Hl7XmlMapping({"code"})
    public ActInvoiceGroupCode getCode() {
        return (ActInvoiceGroupCode) this.code.getValue();
    }

    /**
     * <p>Business Name: InvoiceType</p>
     * 
     * <p>Un-merged Business Name: InvoiceType</p>
     * 
     * <p>Relationship: FICR_MT610201CA.InvoiceElementGroup.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>of Invoice Grouping.</p><p>Each Invoice Type is used to 
     * specify 1. vocabulary, 2. structure of the Invoice Element 
     * Choice and 3. which Billable Act(s) can be included for the 
     * specified Invoice Type.</p><p>Information on constraints for 
     * the Invoice Type will be found in the NeCST Message 
     * Specifications. Each Benefit Group will indicate which 
     * Invoice Types will be supported by that Benefit 
     * Group.</p><p>Invoice Types will not generate unique and 
     * distinct XML schemas that can tested independent of each 
     * other. They must be tested together within an Message 
     * Type.</p>
     * 
     * <p>RXDINV, RXCINV, CSINV, CPINV, CSPINV only for root 
     * invoice element group.</p><p>RxS1: RXDINV only for root 
     * invoice element group. DRGING for specify drug group.</p>
     * 
     * <p>Invoice Type is the indication to the payor as to the 
     * content rules to apply when processing and adjudicating the 
     * invoice. Basically, the structure of the invoice grouping. 
     * Ie. Clinical Product, Clinical Service, Preferred Accom, Rx 
     * Dispense, Rx Compound</p>
     */
    public void setCode(ActInvoiceGroupCode code) {
        this.code.setValue(code);
    }


    /**
     * <p>Business Name: InvoiceSubTotal</p>
     * 
     * <p>Un-merged Business Name: InvoiceSubTotal</p>
     * 
     * <p>Relationship: FICR_MT610201CA.InvoiceElementGroup.netAmt</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>For Cancel Request: This would serve as a cross-check for 
     * the Adjudicator for the Invoice Grouping that is being 
     * cancelled.</p><p>Attribute cannot be mandatory as it may not 
     * be present for a Coverage Extension Request.</p>
     * 
     * <p>For Coverage Extension Results: Some adjudicators will 
     * indicate a dollar amount allowed for the coverage 
     * extension.</p><p>RxS1: Sum of InvoiceElementDetail.netAmt 
     * for all immediate child invoice elements. The root invoice 
     * element group will be the transaction total (invoice 
     * total).</p>
     * 
     * <p>Identifies the total monetary amount billed for the 
     * invoice element. This is the sum of the Submitted Invoice 
     * Line amounts.</p>
     */
    @Hl7XmlMapping({"netAmt"})
    public Money getNetAmt() {
        return this.netAmt.getValue();
    }

    /**
     * <p>Business Name: InvoiceSubTotal</p>
     * 
     * <p>Un-merged Business Name: InvoiceSubTotal</p>
     * 
     * <p>Relationship: FICR_MT610201CA.InvoiceElementGroup.netAmt</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>For Cancel Request: This would serve as a cross-check for 
     * the Adjudicator for the Invoice Grouping that is being 
     * cancelled.</p><p>Attribute cannot be mandatory as it may not 
     * be present for a Coverage Extension Request.</p>
     * 
     * <p>For Coverage Extension Results: Some adjudicators will 
     * indicate a dollar amount allowed for the coverage 
     * extension.</p><p>RxS1: Sum of InvoiceElementDetail.netAmt 
     * for all immediate child invoice elements. The root invoice 
     * element group will be the transaction total (invoice 
     * total).</p>
     * 
     * <p>Identifies the total monetary amount billed for the 
     * invoice element. This is the sum of the Submitted Invoice 
     * Line amounts.</p>
     */
    public void setNetAmt(Money netAmt) {
        this.netAmt.setValue(netAmt);
    }

}
