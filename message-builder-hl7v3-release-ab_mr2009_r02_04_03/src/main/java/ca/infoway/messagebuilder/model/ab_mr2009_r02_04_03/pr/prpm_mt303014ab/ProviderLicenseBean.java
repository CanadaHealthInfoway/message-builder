/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03.pr.prpm_mt303014ab;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.HealthcareProviderRoleType;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.Date;
import java.util.Set;



/**
 * <p>Business Name: Provider License</p>
 * 
 * <p>HealthCareProvider MUST have a replacementOf relationship 
 * if it is the &quot;root&quot; (has no ancestor 
 * HealthCareProvider classes) and MUST NOT have a 
 * replacementOf relationship if it is not the 
 * &quot;root&quot;.</p>
 * 
 * <p>Identifies the provider llicenses being merged</p>
 * 
 * <p>Identifies either the source or the target of the merge 
 * (depending on which end of the replacementOf association 
 * it's on)</p>
 */
@Hl7PartTypeMapping({"PRPM_MT303014AB.HealthCareProvider"})
@Hl7RootType
public class ProviderLicenseBean extends MessagePartBean {

    private static final long serialVersionUID = 20150811L;
    private SET<II, Identifier> id = new SETImpl<II, Identifier>(IIImpl.class);
    private CV code = new CVImpl();
    private II indirectAuthorithyOverHealthcareWorkerId = new IIImpl();
    private IVL<TS, Interval<Date>> replacementOfEffectiveTime = new IVLImpl<TS, Interval<Date>>();
    private ProviderLicenseBean replacementOfHealthCareProvider;


    /**
     * <p>Business Name: C: Health Care Provider Role 
     * Identification</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.HealthCareProvider.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-10)</p>
     * 
     * <p>Allows lookup on college website, confirmation of 
     * identity, etc. Regulations occasionally require license 
     * numbers to be specified as part of clinical records.</p>
     * 
     * <p>If the identifier used in the root of the CMET is the 
     * same as the license number, the license number should be 
     * sent in both places.</p>
     * 
     * <p>The license number issued to the provider and relevant to 
     * the current action.</p>
     */
    @Hl7XmlMapping({"id"})
    public Set<Identifier> getId() {
        return this.id.rawSet();
    }


    /**
     * <p>Business Name: Health Care Provider Role Type</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.HealthCareProvider.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>In some circumstances, license number isn't unique.</p>
     * 
     * <p>Identifies the type of role being merged</p>
     */
    @Hl7XmlMapping({"code"})
    public HealthcareProviderRoleType getCode() {
        return (HealthcareProviderRoleType) this.code.getValue();
    }

    /**
     * <p>Business Name: Health Care Provider Role Type</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.HealthCareProvider.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>In some circumstances, license number isn't unique.</p>
     * 
     * <p>Identifies the type of role being merged</p>
     */
    public void setCode(HealthcareProviderRoleType code) {
        this.code.setValue(code);
    }


    /**
     * <p>Business Name: A: Healthcare Worker Identifier</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.HealthcareWorker.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows unique identification of the person which can be 
     * critical for authentication, permissions, drill-down and 
     * traceability and is therefore mandatory.</p>
     * 
     * <p>Unique identifier the person involved in the action.</p>
     */
    @Hl7XmlMapping({"indirectAuthorithyOver/healthcareWorker/id"})
    public Identifier getIndirectAuthorithyOverHealthcareWorkerId() {
        return this.indirectAuthorithyOverHealthcareWorkerId.getValue();
    }

    /**
     * <p>Business Name: A: Healthcare Worker Identifier</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.HealthcareWorker.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows unique identification of the person which can be 
     * critical for authentication, permissions, drill-down and 
     * traceability and is therefore mandatory.</p>
     * 
     * <p>Unique identifier the person involved in the action.</p>
     */
    public void setIndirectAuthorithyOverHealthcareWorkerId(Identifier indirectAuthorithyOverHealthcareWorkerId) {
        this.indirectAuthorithyOverHealthcareWorkerId.setValue(indirectAuthorithyOverHealthcareWorkerId);
    }


    /**
     * <p>Business Name: Replacement Time</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.ReplacementOf.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows the fact that this transaction is establishing a 
     * merge to be clearly communicated.</p>
     * 
     * <p>Indicates the date and time at which the target provider 
     * role is considered to be merged into the source role.</p>
     */
    @Hl7XmlMapping({"replacementOf/effectiveTime"})
    public Interval<Date> getReplacementOfEffectiveTime() {
        return this.replacementOfEffectiveTime.getValue();
    }

    /**
     * <p>Business Name: Replacement Time</p>
     * 
     * <p>Relationship: PRPM_MT303014AB.ReplacementOf.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows the fact that this transaction is establishing a 
     * merge to be clearly communicated.</p>
     * 
     * <p>Indicates the date and time at which the target provider 
     * role is considered to be merged into the source role.</p>
     */
    public void setReplacementOfEffectiveTime(Interval<Date> replacementOfEffectiveTime) {
        this.replacementOfEffectiveTime.setValue(replacementOfEffectiveTime);
    }


    /**
     * <p>Relationship: 
     * PRPM_MT303014AB.ReplacementOf.healthCareProvider</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"replacementOf/healthCareProvider"})
    public ProviderLicenseBean getReplacementOfHealthCareProvider() {
        return this.replacementOfHealthCareProvider;
    }

    /**
     * <p>Relationship: 
     * PRPM_MT303014AB.ReplacementOf.healthCareProvider</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setReplacementOfHealthCareProvider(ProviderLicenseBean replacementOfHealthCareProvider) {
        this.replacementOfHealthCareProvider = replacementOfHealthCareProvider;
    }

}
