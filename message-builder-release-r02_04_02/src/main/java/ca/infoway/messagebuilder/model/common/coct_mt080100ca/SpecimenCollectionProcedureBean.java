/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.common.coct_mt080100ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.merged.HasNotesBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Specimen Collection Procedure</p>
 * 
 * <p>This is the procedure act which describes the 
 * process/procedure used to collect the associated specimen.</p>
 * 
 * <p>For certain laboratory tests, the specimen collection 
 * procedure information is relevant in determining the result 
 * value.</p>
 */
@Hl7PartTypeMapping({"COCT_MT080100CA.SpecimenCollectionProcedureEvent"})
public class SpecimenCollectionProcedureBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private ST specimenCollectionText = new STImpl();
    private IVL<TS, Interval<Date>> specimenCollectionDateTime = new IVLImpl<TS, Interval<Date>>();
    private CV specimenCollectionProcedureMethod = new CVImpl();
    private List<PerformerChoiceBean> performerPerformerChoice = new ArrayList<PerformerChoiceBean>();
    private List<HasNotesBean> subjectOf = new ArrayList<HasNotesBean>();

    @Hl7XmlMapping({"text"})
    public String getSpecimenCollectionText() {
        return this.specimenCollectionText.getValue();
    }
    public void setSpecimenCollectionText(String specimenCollectionText) {
        this.specimenCollectionText.setValue(specimenCollectionText);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getSpecimenCollectionDateTime() {
        return this.specimenCollectionDateTime.getValue();
    }
    public void setSpecimenCollectionDateTime(Interval<Date> specimenCollectionDateTime) {
        this.specimenCollectionDateTime.setValue(specimenCollectionDateTime);
    }

    @Hl7XmlMapping({"methodCode"})
    public Code getSpecimenCollectionProcedureMethod() {
        return (Code) this.specimenCollectionProcedureMethod.getValue();
    }
    public void setSpecimenCollectionProcedureMethod(Code specimenCollectionProcedureMethod) {
        this.specimenCollectionProcedureMethod.setValue(specimenCollectionProcedureMethod);
    }

    @Hl7XmlMapping({"performer/performerChoice"})
    public List<PerformerChoiceBean> getPerformerPerformerChoice() {
        return this.performerPerformerChoice;
    }

    @Hl7XmlMapping({"subjectOf"})
    public List<HasNotesBean> getSubjectOf() {
        return this.subjectOf;
    }

}
