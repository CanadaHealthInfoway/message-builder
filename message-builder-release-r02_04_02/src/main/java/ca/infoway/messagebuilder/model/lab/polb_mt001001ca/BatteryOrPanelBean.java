/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.lab.polb_mt001001ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.GTS;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.GTSImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.lang.GeneralTimingSpecification;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActPriority;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.ObservationOrderableLabType;
import ca.infoway.messagebuilder.domainvalue.x_BasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt011001ca.CareCompositionsBean;
import ca.infoway.messagebuilder.model.merged.AssignedEntity_1Bean;
import ca.infoway.messagebuilder.model.merged.HasNotesBean;
import ca.infoway.messagebuilder.model.merged.LabInitiatedOrderIndicatorBean;
import ca.infoway.messagebuilder.model.merged.OrderSortKeyBean;
import ca.infoway.messagebuilder.model.merged.ParentTestBean;
import ca.infoway.messagebuilder.model.merged.PriorTestRequestBean;
import ca.infoway.messagebuilder.model.merged.RecipientChoiceBean;
import ca.infoway.messagebuilder.model.merged.ReferralRedirectIndicatorBean;
import ca.infoway.messagebuilder.model.merged.SubjectToTriggerEventBean;
import ca.infoway.messagebuilder.model.merged.SupportingClinicalInformationBean;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;



/**
 * <p>Battery or Panel</p>
 * 
 * <p>Used as a functional grouper of tests. Usually a "panel" 
 * or "battery" of tests are diagnostically related and 
 * frequently conducted and reported together.</p>
 */
@Hl7PartTypeMapping({"POLB_MT001001CA.BatteryRequest"})
public class BatteryOrPanelBean extends MessagePartBean implements RequestChoiceBean {

    private static final long serialVersionUID = 20100603L;
    private List<RecipientChoiceBean> informationRecipientRecipientChoice = new ArrayList<RecipientChoiceBean>();
    private List<AssignedEntity_1Bean> verifierAssignedEntity = new ArrayList<AssignedEntity_1Bean>();
    private II batteryIdentifier = new IIImpl();
    private ParentTestBean occurrenceOfActParentPointer;
    private CD batteryType = new CDImpl();
    private List<SupportingClinicalInformationBean> pertinentInformationSupportingClinicalObservationEvent = new ArrayList<SupportingClinicalInformationBean>();
    private CS batteryStatus = new CSImpl();
    private LabInitiatedOrderIndicatorBean component1LabInitiatedOrderIndicator;
    private LIST<GTS, GeneralTimingSpecification> batteryRequestTimeSpecification = new LISTImpl<GTS, GeneralTimingSpecification>(GTSImpl.class);
    private ReferralRedirectIndicatorBean component2ReferralRedirectIndicator;
    private CV batteryPriorityCode = new CVImpl();
    private OrderSortKeyBean component3RequestSortKey;
    private SET<CV, Code> batteryMaskingIndicator = new SETImpl<CV, Code>(CVImpl.class);
    private List<RequestChoiceBean> component4RequestChoice = new ArrayList<RequestChoiceBean>();
    private List<HasNotesBean> subjectOf1 = new ArrayList<HasNotesBean>();
    private SubjectToTriggerEventBean subjectOf2;
    private PriorTestRequestBean componentOf1PriorActRequest;
    private List<CareCompositionsBean> componentOf2PatientCareProvisionEvent = new ArrayList<CareCompositionsBean>();

    @Hl7XmlMapping({"informationRecipient/recipientChoice"})
    public List<RecipientChoiceBean> getInformationRecipientRecipientChoice() {
        return this.informationRecipientRecipientChoice;
    }

    @Hl7XmlMapping({"verifier/assignedEntity"})
    public List<AssignedEntity_1Bean> getVerifierAssignedEntity() {
        return this.verifierAssignedEntity;
    }

    @Hl7XmlMapping({"id"})
    public Identifier getBatteryIdentifier() {
        return this.batteryIdentifier.getValue();
    }
    public void setBatteryIdentifier(Identifier batteryIdentifier) {
        this.batteryIdentifier.setValue(batteryIdentifier);
    }

    @Hl7XmlMapping({"occurrenceOf/actParentPointer"})
    public ParentTestBean getOccurrenceOfActParentPointer() {
        return this.occurrenceOfActParentPointer;
    }
    public void setOccurrenceOfActParentPointer(ParentTestBean occurrenceOfActParentPointer) {
        this.occurrenceOfActParentPointer = occurrenceOfActParentPointer;
    }

    @Hl7XmlMapping({"code"})
    public ObservationOrderableLabType getBatteryType() {
        return (ObservationOrderableLabType) this.batteryType.getValue();
    }
    public void setBatteryType(ObservationOrderableLabType batteryType) {
        this.batteryType.setValue(batteryType);
    }

    @Hl7XmlMapping({"pertinentInformation/supportingClinicalObservationEvent"})
    public List<SupportingClinicalInformationBean> getPertinentInformationSupportingClinicalObservationEvent() {
        return this.pertinentInformationSupportingClinicalObservationEvent;
    }

    @Hl7XmlMapping({"statusCode"})
    public ActStatus getBatteryStatus() {
        return (ActStatus) this.batteryStatus.getValue();
    }
    public void setBatteryStatus(ActStatus batteryStatus) {
        this.batteryStatus.setValue(batteryStatus);
    }

    @Hl7XmlMapping({"component1/labInitiatedOrderIndicator"})
    public LabInitiatedOrderIndicatorBean getComponent1LabInitiatedOrderIndicator() {
        return this.component1LabInitiatedOrderIndicator;
    }
    public void setComponent1LabInitiatedOrderIndicator(LabInitiatedOrderIndicatorBean component1LabInitiatedOrderIndicator) {
        this.component1LabInitiatedOrderIndicator = component1LabInitiatedOrderIndicator;
    }

    @Hl7XmlMapping({"effectiveTime"})
    public List<GeneralTimingSpecification> getBatteryRequestTimeSpecification() {
        return this.batteryRequestTimeSpecification.rawList();
    }

    @Hl7XmlMapping({"component2/referralRedirectIndicator"})
    public ReferralRedirectIndicatorBean getComponent2ReferralRedirectIndicator() {
        return this.component2ReferralRedirectIndicator;
    }
    public void setComponent2ReferralRedirectIndicator(ReferralRedirectIndicatorBean component2ReferralRedirectIndicator) {
        this.component2ReferralRedirectIndicator = component2ReferralRedirectIndicator;
    }

    @Hl7XmlMapping({"priorityCode"})
    public ActPriority getBatteryPriorityCode() {
        return (ActPriority) this.batteryPriorityCode.getValue();
    }
    public void setBatteryPriorityCode(ActPriority batteryPriorityCode) {
        this.batteryPriorityCode.setValue(batteryPriorityCode);
    }

    @Hl7XmlMapping({"component3/requestSortKey"})
    public OrderSortKeyBean getComponent3RequestSortKey() {
        return this.component3RequestSortKey;
    }
    public void setComponent3RequestSortKey(OrderSortKeyBean component3RequestSortKey) {
        this.component3RequestSortKey = component3RequestSortKey;
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public Set<x_BasicConfidentialityKind> getBatteryMaskingIndicator() {
        return this.batteryMaskingIndicator.rawSet(x_BasicConfidentialityKind.class);
    }

    @Hl7XmlMapping({"component4/requestChoice"})
    public List<RequestChoiceBean> getComponent4RequestChoice() {
        return this.component4RequestChoice;
    }

    @Hl7XmlMapping({"subjectOf1"})
    public List<HasNotesBean> getSubjectOf1() {
        return this.subjectOf1;
    }

    @Hl7XmlMapping({"subjectOf2"})
    public SubjectToTriggerEventBean getSubjectOf2() {
        return this.subjectOf2;
    }
    public void setSubjectOf2(SubjectToTriggerEventBean subjectOf2) {
        this.subjectOf2 = subjectOf2;
    }

    @Hl7XmlMapping({"componentOf1/priorActRequest"})
    public PriorTestRequestBean getComponentOf1PriorActRequest() {
        return this.componentOf1PriorActRequest;
    }
    public void setComponentOf1PriorActRequest(PriorTestRequestBean componentOf1PriorActRequest) {
        this.componentOf1PriorActRequest = componentOf1PriorActRequest;
    }

    @Hl7XmlMapping({"componentOf2/patientCareProvisionEvent"})
    public List<CareCompositionsBean> getComponentOf2PatientCareProvisionEvent() {
        return this.componentOf2PatientCareProvisionEvent;
    }

}
