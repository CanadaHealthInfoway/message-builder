/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.immunization.poiz_mt061150ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.ActUncertainty;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.iehr.comt_mt111111ca.SummaryBean;
import ca.infoway.messagebuilder.model.merged.AdministeredToBean;
import ca.infoway.messagebuilder.model.merged.InvestigationEventBean;
import java.util.Date;



/**
 * <p>Immunizations</p>
 * 
 * <p>A record of products administered to a patient specific 
 * to immunization.</p>
 * 
 * <p>Necessary component of a person's overall vaccine 
 * profile. Helps deal with outbreaks and also vaccine 
 * contraindication checking.</p>
 */
@Hl7PartTypeMapping({"POIZ_MT061150CA.Immunization"})
@Hl7RootType
public class ImmunizationsBean extends MessagePartBean implements SummaryBean {

    private static final long serialVersionUID = 20100603L;
    private II immunizationRecordId = new IIImpl();
    private BL notImmunized = new BLImpl();
    private CS immunizationEventStatus = new CSImpl();
    private TS immunizationDate = new TSImpl();
    private CV uncertaintyCode = new CVImpl();
    private AdministeredToBean subject;
    private VaccineBean consumableAdministerableMedicineAdministerableVaccine;
    private BL subjectOf1DetectedIssuesIndicator = new BLImpl(false);
    private BL subjectOf2AnnotationIndicator = new BLImpl(false);
    private InvestigationEventBean causeInvestigationEvent;

    @Hl7XmlMapping({"id"})
    public Identifier getImmunizationRecordId() {
        return this.immunizationRecordId.getValue();
    }
    public void setImmunizationRecordId(Identifier immunizationRecordId) {
        this.immunizationRecordId.setValue(immunizationRecordId);
    }

    @Hl7XmlMapping({"negationInd"})
    public Boolean getNotImmunized() {
        return this.notImmunized.getValue();
    }
    public void setNotImmunized(Boolean notImmunized) {
        this.notImmunized.setValue(notImmunized);
    }

    @Hl7XmlMapping({"statusCode"})
    public ActStatus getImmunizationEventStatus() {
        return (ActStatus) this.immunizationEventStatus.getValue();
    }
    public void setImmunizationEventStatus(ActStatus immunizationEventStatus) {
        this.immunizationEventStatus.setValue(immunizationEventStatus);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Date getImmunizationDate() {
        return this.immunizationDate.getValue();
    }
    public void setImmunizationDate(Date immunizationDate) {
        this.immunizationDate.setValue(immunizationDate);
    }

    @Hl7XmlMapping({"uncertaintyCode"})
    public ActUncertainty getUncertaintyCode() {
        return (ActUncertainty) this.uncertaintyCode.getValue();
    }
    public void setUncertaintyCode(ActUncertainty uncertaintyCode) {
        this.uncertaintyCode.setValue(uncertaintyCode);
    }

    @Hl7XmlMapping({"subject"})
    public AdministeredToBean getSubject() {
        return this.subject;
    }
    public void setSubject(AdministeredToBean subject) {
        this.subject = subject;
    }

    @Hl7XmlMapping({"consumable/administerableMedicine/administerableVaccine"})
    public VaccineBean getConsumableAdministerableMedicineAdministerableVaccine() {
        return this.consumableAdministerableMedicineAdministerableVaccine;
    }
    public void setConsumableAdministerableMedicineAdministerableVaccine(VaccineBean consumableAdministerableMedicineAdministerableVaccine) {
        this.consumableAdministerableMedicineAdministerableVaccine = consumableAdministerableMedicineAdministerableVaccine;
    }

    @Hl7XmlMapping({"subjectOf1/detectedIssuesIndicator"})
    public Boolean getSubjectOf1DetectedIssuesIndicator() {
        return this.subjectOf1DetectedIssuesIndicator.getValue();
    }
    public void setSubjectOf1DetectedIssuesIndicator(Boolean subjectOf1DetectedIssuesIndicator) {
        this.subjectOf1DetectedIssuesIndicator.setValue(subjectOf1DetectedIssuesIndicator);
    }

    @Hl7XmlMapping({"subjectOf2/annotationIndicator"})
    public Boolean getSubjectOf2AnnotationIndicator() {
        return this.subjectOf2AnnotationIndicator.getValue();
    }
    public void setSubjectOf2AnnotationIndicator(Boolean subjectOf2AnnotationIndicator) {
        this.subjectOf2AnnotationIndicator.setValue(subjectOf2AnnotationIndicator);
    }

    @Hl7XmlMapping({"cause/investigationEvent"})
    public InvestigationEventBean getCauseInvestigationEvent() {
        return this.causeInvestigationEvent;
    }
    public void setCauseInvestigationEvent(InvestigationEventBean causeInvestigationEvent) {
        this.causeInvestigationEvent = causeInvestigationEvent;
    }

}
