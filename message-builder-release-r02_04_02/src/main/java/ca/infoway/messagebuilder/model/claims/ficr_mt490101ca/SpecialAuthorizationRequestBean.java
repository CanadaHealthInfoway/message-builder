/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.claims.ficr_mt490101ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt090508ca.HealthcareOrganizationBean;
import ca.infoway.messagebuilder.model.merged.DevicePassThruBean;
import ca.infoway.messagebuilder.model.merged.PolicyOrAccount_1Bean;
import ca.infoway.messagebuilder.model.merged.RefusedByBean;
import ca.infoway.messagebuilder.model.merged.SpecialAuthorizationChoice_1Bean;
import ca.infoway.messagebuilder.model.merged.SubjectToTriggerEventBean;
import ca.infoway.messagebuilder.model.merged.SubstanceAdministrationBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



@Hl7PartTypeMapping({"FICR_MT490101CA.SpecialAuthorizationRequest"})
@Hl7RootType
public class SpecialAuthorizationRequestBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private II specialAuthorizationRequestID = new IIImpl();
    private CV specialAuthorizationRequestType = new CVImpl();
    private RefusedByBean author;
    private List<SubjectToTriggerEventBean> subject1 = new ArrayList<SubjectToTriggerEventBean>();
    private SpecialAuthorizationChoice_1Bean subject2SpecialAuthorizationChoice;
    private CS specialAuthorizationStatus = new CSImpl();
    private IVL<TS, Interval<Date>> specialAuthorizationEffectiveDate = new IVLImpl<TS, Interval<Date>>();
    private HealthcareOrganizationBean fulfillmentSpecialAuthorizationAuthorAssignedEntity;
    private PolicyOrAccount_1Bean fulfillmentSpecialAuthorizationCoveragePolicyOrAccount;

    @Hl7XmlMapping({"id"})
    public Identifier getSpecialAuthorizationRequestID() {
        return this.specialAuthorizationRequestID.getValue();
    }
    public void setSpecialAuthorizationRequestID(Identifier specialAuthorizationRequestID) {
        this.specialAuthorizationRequestID.setValue(specialAuthorizationRequestID);
    }

    @Hl7XmlMapping({"code"})
    public Code getSpecialAuthorizationRequestType() {
        return (Code) this.specialAuthorizationRequestType.getValue();
    }
    public void setSpecialAuthorizationRequestType(Code specialAuthorizationRequestType) {
        this.specialAuthorizationRequestType.setValue(specialAuthorizationRequestType);
    }

    @Hl7XmlMapping({"author"})
    public RefusedByBean getAuthor() {
        return this.author;
    }
    public void setAuthor(RefusedByBean author) {
        this.author = author;
    }

    @Hl7XmlMapping({"subject1"})
    public List<SubjectToTriggerEventBean> getSubject1() {
        return this.subject1;
    }

    @Hl7XmlMapping({"subject2/specialAuthorizationChoice"})
    public SpecialAuthorizationChoice_1Bean getSubject2SpecialAuthorizationChoice() {
        return this.subject2SpecialAuthorizationChoice;
    }
    public void setSubject2SpecialAuthorizationChoice(SpecialAuthorizationChoice_1Bean subject2SpecialAuthorizationChoice) {
        this.subject2SpecialAuthorizationChoice = subject2SpecialAuthorizationChoice;
    }

    public SubstanceAdministrationBean getSubject2SpecialAuthorizationChoiceAsSubstanceAdministration() {
        return this.subject2SpecialAuthorizationChoice instanceof SubstanceAdministrationBean ? (SubstanceAdministrationBean) this.subject2SpecialAuthorizationChoice : null;
    }
    public boolean hasSubject2SpecialAuthorizationChoiceAsSubstanceAdministration() {
        return (this.subject2SpecialAuthorizationChoice instanceof SubstanceAdministrationBean);
    }

    public DevicePassThruBean getSubject2SpecialAuthorizationChoiceAsDevicePassThru() {
        return this.subject2SpecialAuthorizationChoice instanceof DevicePassThruBean ? (DevicePassThruBean) this.subject2SpecialAuthorizationChoice : null;
    }
    public boolean hasSubject2SpecialAuthorizationChoiceAsDevicePassThru() {
        return (this.subject2SpecialAuthorizationChoice instanceof DevicePassThruBean);
    }

    @Hl7XmlMapping({"fulfillment/specialAuthorization/statusCode"})
    public ActStatus getSpecialAuthorizationStatus() {
        return (ActStatus) this.specialAuthorizationStatus.getValue();
    }
    public void setSpecialAuthorizationStatus(ActStatus specialAuthorizationStatus) {
        this.specialAuthorizationStatus.setValue(specialAuthorizationStatus);
    }

    @Hl7XmlMapping({"fulfillment/specialAuthorization/effectiveTime"})
    public Interval<Date> getSpecialAuthorizationEffectiveDate() {
        return this.specialAuthorizationEffectiveDate.getValue();
    }
    public void setSpecialAuthorizationEffectiveDate(Interval<Date> specialAuthorizationEffectiveDate) {
        this.specialAuthorizationEffectiveDate.setValue(specialAuthorizationEffectiveDate);
    }

    @Hl7XmlMapping({"fulfillment/specialAuthorization/author/assignedEntity"})
    public HealthcareOrganizationBean getFulfillmentSpecialAuthorizationAuthorAssignedEntity() {
        return this.fulfillmentSpecialAuthorizationAuthorAssignedEntity;
    }
    public void setFulfillmentSpecialAuthorizationAuthorAssignedEntity(HealthcareOrganizationBean fulfillmentSpecialAuthorizationAuthorAssignedEntity) {
        this.fulfillmentSpecialAuthorizationAuthorAssignedEntity = fulfillmentSpecialAuthorizationAuthorAssignedEntity;
    }

    @Hl7XmlMapping({"fulfillment/specialAuthorization/coverage/policyOrAccount"})
    public PolicyOrAccount_1Bean getFulfillmentSpecialAuthorizationCoveragePolicyOrAccount() {
        return this.fulfillmentSpecialAuthorizationCoveragePolicyOrAccount;
    }
    public void setFulfillmentSpecialAuthorizationCoveragePolicyOrAccount(PolicyOrAccount_1Bean fulfillmentSpecialAuthorizationCoveragePolicyOrAccount) {
        this.fulfillmentSpecialAuthorizationCoveragePolicyOrAccount = fulfillmentSpecialAuthorizationCoveragePolicyOrAccount;
    }

}
