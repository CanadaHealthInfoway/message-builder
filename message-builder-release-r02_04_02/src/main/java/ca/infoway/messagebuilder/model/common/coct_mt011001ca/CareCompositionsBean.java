/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.common.coct_mt011001ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActCareEventType;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Care Compositions</p>
 * 
 * <p>A care composition is a record with two purposes. It 
 * indicates that care of a given type has occurred or is 
 * occurring. It also acts as a collector for the events that 
 * happened during care, including who is responsible for the 
 * care provided.</p>
 * 
 * <p>Allows linking records to encounters, condition and 
 * care-based compositions. Useful for searching and navigation 
 * of the patient's record.</p>
 */
@Hl7PartTypeMapping({"COCT_MT011001CA.PatientCareProvisionEvent"})
@Hl7RootType
public class CareCompositionsBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private II careCompositionIdentifier = new IIImpl();
    private CV careCompositionType = new CVImpl();
    private IVL<TS, Interval<Date>> careCompositionEffectiveDate = new IVLImpl<TS, Interval<Date>>();
    private List<AssigneesBean> admitterAssignees = new ArrayList<AssigneesBean>();
    private List<AssigneesBean> attenderAssignees = new ArrayList<AssigneesBean>();
    private ServiceDeliveryLocationBean locationServiceDeliveryLocation;

    @Hl7XmlMapping({"id"})
    public Identifier getCareCompositionIdentifier() {
        return this.careCompositionIdentifier.getValue();
    }
    public void setCareCompositionIdentifier(Identifier careCompositionIdentifier) {
        this.careCompositionIdentifier.setValue(careCompositionIdentifier);
    }

    @Hl7XmlMapping({"code"})
    public ActCareEventType getCareCompositionType() {
        return (ActCareEventType) this.careCompositionType.getValue();
    }
    public void setCareCompositionType(ActCareEventType careCompositionType) {
        this.careCompositionType.setValue(careCompositionType);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getCareCompositionEffectiveDate() {
        return this.careCompositionEffectiveDate.getValue();
    }
    public void setCareCompositionEffectiveDate(Interval<Date> careCompositionEffectiveDate) {
        this.careCompositionEffectiveDate.setValue(careCompositionEffectiveDate);
    }

    @Hl7XmlMapping({"admitter/assignees"})
    public List<AssigneesBean> getAdmitterAssignees() {
        return this.admitterAssignees;
    }

    @Hl7XmlMapping({"attender/assignees"})
    public List<AssigneesBean> getAttenderAssignees() {
        return this.attenderAssignees;
    }

    @Hl7XmlMapping({"location/serviceDeliveryLocation"})
    public ServiceDeliveryLocationBean getLocationServiceDeliveryLocation() {
        return this.locationServiceDeliveryLocation;
    }
    public void setLocationServiceDeliveryLocation(ServiceDeliveryLocationBean locationServiceDeliveryLocation) {
        this.locationServiceDeliveryLocation = locationServiceDeliveryLocation;
    }

}
