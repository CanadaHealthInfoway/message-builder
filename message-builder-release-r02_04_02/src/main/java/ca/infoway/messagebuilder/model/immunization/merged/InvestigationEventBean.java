/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.immunization.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.IndividualCaseSafetyReportType;
import ca.infoway.messagebuilder.model.MessagePartBean;



/**
 * <p>InvestigationEvent</p>
 * 
 * <p>POIZ_MT060150CA.InvestigationEvent: Investigation Event</p>
 * 
 * <p><p>Provides information about an adverse event report 
 * associated with the immunization event.</p></p>
 * 
 * <p><p>Provides additional information about the immunization 
 * event by indicating an adverse event is associated and also 
 * provides a mechanism for communicating information about the 
 * report that was filed.</p></p>
 * 
 * <p>POIZ_MT030060CA.InvestigationEvent: Investigation Event</p>
 * 
 * <p><p>Provides information about an adverse event report 
 * associated with the immunization event.</p></p>
 * 
 * <p><p>Provides additional information about the immunization 
 * event by indicating an adverse event is associated and also 
 * provides a mechanism for communicating information about the 
 * report that was filed.</p></p>
 * 
 * <p>POIZ_MT061150CA.InvestigationEvent: Investigation Event</p>
 * 
 * <p><p>Provides information about an adverse event report 
 * associated with the immunization event.</p></p>
 * 
 * <p><p>Provides additional information about the immunization 
 * event by indicating an adverse event is associated and also 
 * provides a mechanism for communicating information about the 
 * report that was filed.</p></p>
 * 
 * <p>POIZ_MT030050CA.InvestigationEvent: Investigation Event</p>
 * 
 * <p><p>Provides information about an adverse event report 
 * associated with the immunization event.</p></p>
 * 
 * <p><p>Provides additional information about the immunization 
 * event by indicating an adverse event is associated and also 
 * provides a mechanism for communicating information about the 
 * report that was filed.</p></p>
 */
@Hl7PartTypeMapping({"POIZ_MT030050CA.InvestigationEvent","POIZ_MT030060CA.InvestigationEvent","POIZ_MT060150CA.InvestigationEvent","POIZ_MT061150CA.InvestigationEvent"})
public class InvestigationEventBean extends MessagePartBean {

    private static final long serialVersionUID = 20110127L;
    private CS reportStatus = new CSImpl();
    private CV reportType = new CVImpl();
    private ST text = new STImpl();
    private II adverseEventReportID = new IIImpl();


    /**
     * <p>ReportStatus</p>
     * 
     * <p>Report Status</p>
     * 
     * <p><p>Code indicating the operative status of the business 
     * process, which in this case is an Adverse Event Report. 
     * Status examples: active, completed, etc.</p></p>
     * 
     * <p><p>Provides additional context to the receiver as to the 
     * state of the referenced report. As a result, this attribute 
     * is mandatory.</p></p>
     */
    @Hl7XmlMapping({"statusCode"})
    public ActStatus getReportStatus() {
        return (ActStatus) this.reportStatus.getValue();
    }
    public void setReportStatus(ActStatus reportStatus) {
        this.reportStatus.setValue(reportStatus);
    }


    /**
     * <p>ReportType</p>
     * 
     * <p>Report Type</p>
     * 
     * <p><p>A coded value that indicates the type of report that 
     * was filed.</p></p>
     * 
     * <p><p>Provides a mechanism to categorizing the report.</p></p>
     */
    @Hl7XmlMapping({"code"})
    public IndividualCaseSafetyReportType getReportType() {
        return (IndividualCaseSafetyReportType) this.reportType.getValue();
    }
    public void setReportType(IndividualCaseSafetyReportType reportType) {
        this.reportType.setValue(reportType);
    }


    /**
     * <p>Adverse Event ReportText</p>
     * 
     * <p><p>Textual description of the Adverse Event Following 
     * Immunization reported</p></p>
     * 
     * <p><p>Provides information about the adverse event in 
     * addition to an indication that an adverse event occurred - 
     * information that would not otherwise be known.</p></p>
     * 
     * <p>Adverse Event Text</p>
     * 
     * <p><p>Textual description of the Adverse Event Following 
     * Immunization reported</p></p>
     * 
     * <p><p>Provides information about the adverse event in 
     * addition to an indication that an adverse event occurred - 
     * information that would not otherwise be known.</p></p>
     * 
     * <p>Adverse Event Text</p>
     * 
     * <p><p>Textual description of the Adverse Event Following 
     * Immunization reported</p></p>
     * 
     * <p><p>Provides information about the adverse event in 
     * addition to an indication that an adverse event occurred - 
     * information that would not otherwise be known</p></p>
     */
    @Hl7XmlMapping({"text"})
    public String getText() {
        return this.text.getValue();
    }
    public void setText(String text) {
        this.text.setValue(text);
    }


    /**
     * <p>AdverseEventReportID</p>
     * 
     * <p>Adverse Event Report ID</p>
     * 
     * <p><p>Identifier associated with the Adverse Event Report. 
     * An example would be the unique episode number assigned to 
     * the Report of Adverse Events Following Immunization 
     * (AEFI).</p></p>
     * 
     * <p><p>Provides reference to the Adverse Event Report in the 
     * case that follow up is needed. However, this ID may not 
     * always be known.</p></p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getAdverseEventReportID() {
        return this.adverseEventReportID.getValue();
    }
    public void setAdverseEventReportID(Identifier adverseEventReportID) {
        this.adverseEventReportID.setValue(adverseEventReportID);
    }

}
