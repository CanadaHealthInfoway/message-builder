/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.claims.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.claims.ficr_mt400004ca.DevicePassThruBean;
import ca.infoway.messagebuilder.model.merged.ActiveMedicationBean;



@Hl7PartTypeMapping({"FICR_MT400001CA.Subject3","FICR_MT400003CA.Subject","FICR_MT400003CA.Subject3","FICR_MT400004CA.Subject","FICR_MT400004CA.Subject3","FICR_MT490101CA.Subject3","FICR_MT490102CA.Subject3","FICR_MT490102CA.Subject4"})
public class Subject3Bean extends MessagePartBean {

    private static final long serialVersionUID = 20110127L;
    private SpecialAuthorizationChoice specialAuthorizationChoice;
    private BL includesExcludesProduct = new BLImpl();


    @Hl7XmlMapping({"specialAuthorizationChoice"})
    public SpecialAuthorizationChoice getSpecialAuthorizationChoice() {
        return this.specialAuthorizationChoice;
    }
    public void setSpecialAuthorizationChoice(SpecialAuthorizationChoice specialAuthorizationChoice) {
        this.specialAuthorizationChoice = specialAuthorizationChoice;
    }

    public ActiveMedicationBean getSpecialAuthorizationChoiceAsSubstanceAdministration() {
        return this.specialAuthorizationChoice instanceof ActiveMedicationBean ? (ActiveMedicationBean) this.specialAuthorizationChoice : null;
    }
    public boolean hasSpecialAuthorizationChoiceAsSubstanceAdministration() {
        return (this.specialAuthorizationChoice instanceof ActiveMedicationBean);
    }

    public DevicePassThruBean getSpecialAuthorizationChoiceAsDevicePassThru() {
        return this.specialAuthorizationChoice instanceof DevicePassThruBean ? (DevicePassThruBean) this.specialAuthorizationChoice : null;
    }
    public boolean hasSpecialAuthorizationChoiceAsDevicePassThru() {
        return (this.specialAuthorizationChoice instanceof DevicePassThruBean);
    }


    /**
     * <p>IncludesExcludesProduct</p>
     * 
     * <p>Includes / Excludes Product</p>
     */
    @Hl7XmlMapping({"negationInd"})
    public Boolean getIncludesExcludesProduct() {
        return this.includesExcludesProduct.getValue();
    }
    public void setIncludesExcludesProduct(Boolean includesExcludesProduct) {
        this.includesExcludesProduct.setValue(includesExcludesProduct);
    }

}
