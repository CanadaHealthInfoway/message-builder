/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt130001ca.VersionInformationBean;



@Hl7PartTypeMapping({"FICR_MT490101CA.Subject","FICR_MT490102CA.Subject5","POLB_MT001001CA.Subject2","POLB_MT001010CA.Subject2","POLB_MT001999CA.Subject2","POLB_MT002000CA.Subject1","POLB_MT004000CA.Subject1","POLB_MT004100CA.Subject1","POLB_MT004200CA.Subject1","REPC_MT000010CA.Subject7","REPC_MT500004CA.Subject3"})
public class SubjectToTriggerEventBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private VersionInformationBean controlActEvent;
    private BL contextConductionInd = new BLImpl();

    @Hl7XmlMapping({"controlActEvent"})
    public VersionInformationBean getControlActEvent() {
        return this.controlActEvent;
    }
    public void setControlActEvent(VersionInformationBean controlActEvent) {
        this.controlActEvent = controlActEvent;
    }

    @Hl7XmlMapping({"contextConductionInd"})
    public Boolean getContextConductionInd() {
        return this.contextConductionInd.getValue();
    }
    public void setContextConductionInd(Boolean contextConductionInd) {
        this.contextConductionInd.setValue(contextConductionInd);
    }

}
