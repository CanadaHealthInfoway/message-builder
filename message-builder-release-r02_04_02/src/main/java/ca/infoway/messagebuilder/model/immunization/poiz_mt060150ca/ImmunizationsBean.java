/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.immunization.poiz_mt060150ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.ActUncertainty;
import ca.infoway.messagebuilder.domainvalue.HumanSubstanceAdministrationSite;
import ca.infoway.messagebuilder.domainvalue.RouteOfAdministration;
import ca.infoway.messagebuilder.domainvalue.x_BasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt260030ca.IssuesBean;
import ca.infoway.messagebuilder.model.merged.AdministeredByBean;
import ca.infoway.messagebuilder.model.merged.AdministeredToBean;
import ca.infoway.messagebuilder.model.merged.AssignedEntity_2Bean;
import ca.infoway.messagebuilder.model.merged.ConsentBean;
import ca.infoway.messagebuilder.model.merged.HasNotesBean;
import ca.infoway.messagebuilder.model.merged.HealthDocumentBean;
import ca.infoway.messagebuilder.model.merged.InFulfillmentOfBean;
import ca.infoway.messagebuilder.model.merged.IntoleranceConditionBean;
import ca.infoway.messagebuilder.model.merged.InvestigationEventBean;
import ca.infoway.messagebuilder.model.merged.OccurredAtBean;
import ca.infoway.messagebuilder.model.merged.PatientImmunizationObservationsBean;
import ca.infoway.messagebuilder.model.merged.ReasonBean;
import ca.infoway.messagebuilder.model.merged.VaccineBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;



/**
 * <p>Immunizations</p>
 * 
 * <p>A record of products administered to a patient specific 
 * to immunization.</p>
 * 
 * <p>Necessary component of a person's overall vaccine 
 * profile. Helps deal with outbreaks and also vaccine 
 * contraindication checking.</p>
 */
@Hl7PartTypeMapping({"POIZ_MT060150CA.Immunization"})
@Hl7RootType
public class ImmunizationsBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private II immunizationEventID = new IIImpl();
    private BL notImmunized = new BLImpl();
    private CS immunizationEventStatus = new CSImpl();
    private TS immunizationDate = new TSImpl();
    private SET<CV, Code> immunizationMaskingIndicators = new SETImpl<CV, Code>(CVImpl.class);
    private CV uncertaintyCode = new CVImpl();
    private CV anatomicalSite = new CVImpl();
    private CV routeOfAdministration = new CVImpl();
    private PQ quantityAdministered = new PQImpl();
    private AdministeredToBean subject;
    private VaccineBean consumableAdministerableMedicineAdministerableVaccine;
    private AssignedEntity_2Bean responsiblePartyAssignedEntity;
    private AdministeredByBean performer;
    private AssignedEntity_2Bean authorAssignedEntity;
    private InformantBean informant;
    private AssignedEntity_2Bean authenticatorAssignedEntity;
    private OccurredAtBean location;
    private InFulfillmentOfBean inFulfillmentOf;
    private ReasonBean reason;
    private ConsentBean authorizationConsent;
    private List<PatientImmunizationObservationsBean> pertinentInformationPatientImmunizationObservations = new ArrayList<PatientImmunizationObservationsBean>();
    private List<IssuesBean> subjectOf1DetectedIssueEvent = new ArrayList<IssuesBean>();
    private List<HasNotesBean> subjectOf2 = new ArrayList<HasNotesBean>();
    private InvestigationEventBean cause1InvestigationEvent;
    private List<IntoleranceConditionBean> cause2IntoleranceCondition = new ArrayList<IntoleranceConditionBean>();
    private HealthDocumentBean referencedByHealthDocument;

    @Hl7XmlMapping({"id"})
    public Identifier getImmunizationEventID() {
        return this.immunizationEventID.getValue();
    }
    public void setImmunizationEventID(Identifier immunizationEventID) {
        this.immunizationEventID.setValue(immunizationEventID);
    }

    @Hl7XmlMapping({"negationInd"})
    public Boolean getNotImmunized() {
        return this.notImmunized.getValue();
    }
    public void setNotImmunized(Boolean notImmunized) {
        this.notImmunized.setValue(notImmunized);
    }

    @Hl7XmlMapping({"statusCode"})
    public ActStatus getImmunizationEventStatus() {
        return (ActStatus) this.immunizationEventStatus.getValue();
    }
    public void setImmunizationEventStatus(ActStatus immunizationEventStatus) {
        this.immunizationEventStatus.setValue(immunizationEventStatus);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Date getImmunizationDate() {
        return this.immunizationDate.getValue();
    }
    public void setImmunizationDate(Date immunizationDate) {
        this.immunizationDate.setValue(immunizationDate);
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public Set<x_BasicConfidentialityKind> getImmunizationMaskingIndicators() {
        return this.immunizationMaskingIndicators.rawSet(x_BasicConfidentialityKind.class);
    }

    @Hl7XmlMapping({"uncertaintyCode"})
    public ActUncertainty getUncertaintyCode() {
        return (ActUncertainty) this.uncertaintyCode.getValue();
    }
    public void setUncertaintyCode(ActUncertainty uncertaintyCode) {
        this.uncertaintyCode.setValue(uncertaintyCode);
    }

    @Hl7XmlMapping({"approachSiteCode"})
    public HumanSubstanceAdministrationSite getAnatomicalSite() {
        return (HumanSubstanceAdministrationSite) this.anatomicalSite.getValue();
    }
    public void setAnatomicalSite(HumanSubstanceAdministrationSite anatomicalSite) {
        this.anatomicalSite.setValue(anatomicalSite);
    }

    @Hl7XmlMapping({"routeCode"})
    public RouteOfAdministration getRouteOfAdministration() {
        return (RouteOfAdministration) this.routeOfAdministration.getValue();
    }
    public void setRouteOfAdministration(RouteOfAdministration routeOfAdministration) {
        this.routeOfAdministration.setValue(routeOfAdministration);
    }

    @Hl7XmlMapping({"doseQuantity"})
    public PhysicalQuantity getQuantityAdministered() {
        return this.quantityAdministered.getValue();
    }
    public void setQuantityAdministered(PhysicalQuantity quantityAdministered) {
        this.quantityAdministered.setValue(quantityAdministered);
    }

    @Hl7XmlMapping({"subject"})
    public AdministeredToBean getSubject() {
        return this.subject;
    }
    public void setSubject(AdministeredToBean subject) {
        this.subject = subject;
    }

    @Hl7XmlMapping({"consumable/administerableMedicine/administerableVaccine"})
    public VaccineBean getConsumableAdministerableMedicineAdministerableVaccine() {
        return this.consumableAdministerableMedicineAdministerableVaccine;
    }
    public void setConsumableAdministerableMedicineAdministerableVaccine(VaccineBean consumableAdministerableMedicineAdministerableVaccine) {
        this.consumableAdministerableMedicineAdministerableVaccine = consumableAdministerableMedicineAdministerableVaccine;
    }

    @Hl7XmlMapping({"responsibleParty/assignedEntity"})
    public AssignedEntity_2Bean getResponsiblePartyAssignedEntity() {
        return this.responsiblePartyAssignedEntity;
    }
    public void setResponsiblePartyAssignedEntity(AssignedEntity_2Bean responsiblePartyAssignedEntity) {
        this.responsiblePartyAssignedEntity = responsiblePartyAssignedEntity;
    }

    @Hl7XmlMapping({"performer"})
    public AdministeredByBean getPerformer() {
        return this.performer;
    }
    public void setPerformer(AdministeredByBean performer) {
        this.performer = performer;
    }

    @Hl7XmlMapping({"author/assignedEntity"})
    public AssignedEntity_2Bean getAuthorAssignedEntity() {
        return this.authorAssignedEntity;
    }
    public void setAuthorAssignedEntity(AssignedEntity_2Bean authorAssignedEntity) {
        this.authorAssignedEntity = authorAssignedEntity;
    }

    @Hl7XmlMapping({"informant"})
    public InformantBean getInformant() {
        return this.informant;
    }
    public void setInformant(InformantBean informant) {
        this.informant = informant;
    }

    @Hl7XmlMapping({"authenticator/assignedEntity"})
    public AssignedEntity_2Bean getAuthenticatorAssignedEntity() {
        return this.authenticatorAssignedEntity;
    }
    public void setAuthenticatorAssignedEntity(AssignedEntity_2Bean authenticatorAssignedEntity) {
        this.authenticatorAssignedEntity = authenticatorAssignedEntity;
    }

    @Hl7XmlMapping({"location"})
    public OccurredAtBean getLocation() {
        return this.location;
    }
    public void setLocation(OccurredAtBean location) {
        this.location = location;
    }

    @Hl7XmlMapping({"inFulfillmentOf"})
    public InFulfillmentOfBean getInFulfillmentOf() {
        return this.inFulfillmentOf;
    }
    public void setInFulfillmentOf(InFulfillmentOfBean inFulfillmentOf) {
        this.inFulfillmentOf = inFulfillmentOf;
    }

    @Hl7XmlMapping({"reason"})
    public ReasonBean getReason() {
        return this.reason;
    }
    public void setReason(ReasonBean reason) {
        this.reason = reason;
    }

    @Hl7XmlMapping({"authorization/consent"})
    public ConsentBean getAuthorizationConsent() {
        return this.authorizationConsent;
    }
    public void setAuthorizationConsent(ConsentBean authorizationConsent) {
        this.authorizationConsent = authorizationConsent;
    }

    @Hl7XmlMapping({"pertinentInformation/patientImmunizationObservations"})
    public List<PatientImmunizationObservationsBean> getPertinentInformationPatientImmunizationObservations() {
        return this.pertinentInformationPatientImmunizationObservations;
    }

    @Hl7XmlMapping({"subjectOf1/detectedIssueEvent"})
    public List<IssuesBean> getSubjectOf1DetectedIssueEvent() {
        return this.subjectOf1DetectedIssueEvent;
    }

    @Hl7XmlMapping({"subjectOf2"})
    public List<HasNotesBean> getSubjectOf2() {
        return this.subjectOf2;
    }

    @Hl7XmlMapping({"cause1/investigationEvent"})
    public InvestigationEventBean getCause1InvestigationEvent() {
        return this.cause1InvestigationEvent;
    }
    public void setCause1InvestigationEvent(InvestigationEventBean cause1InvestigationEvent) {
        this.cause1InvestigationEvent = cause1InvestigationEvent;
    }

    @Hl7XmlMapping({"cause2/intoleranceCondition"})
    public List<IntoleranceConditionBean> getCause2IntoleranceCondition() {
        return this.cause2IntoleranceCondition;
    }

    @Hl7XmlMapping({"referencedBy/healthDocument"})
    public HealthDocumentBean getReferencedByHealthDocument() {
        return this.referencedByHealthDocument;
    }
    public void setReferencedByHealthDocument(HealthDocumentBean referencedByHealthDocument) {
        this.referencedByHealthDocument = referencedByHealthDocument;
    }

}
