/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt090108ca.HealthcareWorkerBean;
import ca.infoway.messagebuilder.model.common.coct_mt090302ca.ApplicationBean;
import ca.infoway.messagebuilder.model.common.coct_mt090508ca.HealthcareOrganizationBean;
import ca.infoway.messagebuilder.model.common.coct_mt120600ca.AssignedPersonBean;
import ca.infoway.messagebuilder.model.common.coct_mt910108ca.RelatedPersonBean;
import ca.infoway.messagebuilder.model.common.coct_mt911108ca.ActingPersonBean;
import java.util.Date;



@Hl7PartTypeMapping({"COCT_MT120600CA.Author","COCT_MT130001CA.Author3","COCT_MT260020CA.Author1","COMT_MT300003CA.Author","PORX_MT060010CA.Author6","PORX_MT060040CA.Author1","PORX_MT060090CA.Author6","PORX_MT060160CA.Author1","PORX_MT060210CA.Author7","PORX_MT060340CA.Author1","REPC_MT000005CA.Author","REPC_MT000006CA.Author","REPC_MT000007CA.Author","REPC_MT000009CA.Author","REPC_MT000009CA.Author3","REPC_MT000010CA.Author","REPC_MT410003CA.Author3","REPC_MT420003CA.Author3","REPC_MT500003CA.Author","REPC_MT500003CA.Author3","REPC_MT500004CA.Author","REPC_MT500004CA.Author3","REPC_MT610002CA.Author3"})
public class AnnotatedBy_1Bean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private TS changeTimestamp = new TSImpl();
    private ChangedBy_1Bean changedBy;
    private HealthcareWorkerBean assignedEntity;
    private ActingPersonBean actingPerson;
    private AssignedPersonBean assignedPerson;

    @Hl7XmlMapping({"time"})
    public Date getChangeTimestamp() {
        return this.changeTimestamp.getValue();
    }
    public void setChangeTimestamp(Date changeTimestamp) {
        this.changeTimestamp.setValue(changeTimestamp);
    }

    @Hl7XmlMapping({"changedBy"})
    public ChangedBy_1Bean getChangedBy() {
        return this.changedBy;
    }
    public void setChangedBy(ChangedBy_1Bean changedBy) {
        this.changedBy = changedBy;
    }

    public HealthcareWorkerBean getChangedByAsAssignedEntity() {
        return this.changedBy instanceof HealthcareWorkerBean ? (HealthcareWorkerBean) this.changedBy : null;
    }
    public boolean hasChangedByAsAssignedEntity() {
        return (this.changedBy instanceof HealthcareWorkerBean);
    }

    public ApplicationBean getChangedByAsAssignedDevice() {
        return this.changedBy instanceof ApplicationBean ? (ApplicationBean) this.changedBy : null;
    }
    public boolean hasChangedByAsAssignedDevice() {
        return (this.changedBy instanceof ApplicationBean);
    }

    @Hl7XmlMapping({"assignedEntity"})
    public HealthcareWorkerBean getAssignedEntity() {
        return this.assignedEntity;
    }
    public void setAssignedEntity(HealthcareWorkerBean assignedEntity) {
        this.assignedEntity = assignedEntity;
    }

    @Hl7XmlMapping({"actingPerson"})
    public ActingPersonBean getActingPerson() {
        return this.actingPerson;
    }
    public void setActingPerson(ActingPersonBean actingPerson) {
        this.actingPerson = actingPerson;
    }

    public HealthcareWorkerBean getActingPersonAsAssignedEntity1() {
        return this.actingPerson instanceof HealthcareWorkerBean ? (HealthcareWorkerBean) this.actingPerson : null;
    }
    public boolean hasActingPersonAsAssignedEntity1() {
        return (this.actingPerson instanceof HealthcareWorkerBean);
    }

    public HealthcareOrganizationBean getActingPersonAsAssignedEntity2() {
        return this.actingPerson instanceof HealthcareOrganizationBean ? (HealthcareOrganizationBean) this.actingPerson : null;
    }
    public boolean hasActingPersonAsAssignedEntity2() {
        return (this.actingPerson instanceof HealthcareOrganizationBean);
    }

    public RelatedPersonBean getActingPersonAsPersonalRelationship() {
        return this.actingPerson instanceof RelatedPersonBean ? (RelatedPersonBean) this.actingPerson : null;
    }
    public boolean hasActingPersonAsPersonalRelationship() {
        return (this.actingPerson instanceof RelatedPersonBean);
    }

    @Hl7XmlMapping({"assignedPerson"})
    public AssignedPersonBean getAssignedPerson() {
        return this.assignedPerson;
    }
    public void setAssignedPerson(AssignedPersonBean assignedPerson) {
        this.assignedPerson = assignedPerson;
    }

    public AssignedEntity_1Bean getAssignedPersonAsAssignedEntity1() {
        return this.assignedPerson instanceof AssignedEntity_1Bean ? (AssignedEntity_1Bean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsAssignedEntity1() {
        return (this.assignedPerson instanceof AssignedEntity_1Bean);
    }

    public ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean getAssignedPersonAsAssignedEntity2() {
        return this.assignedPerson instanceof ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean ? (ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsAssignedEntity2() {
        return (this.assignedPerson instanceof ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean);
    }

    public ca.infoway.messagebuilder.model.merged.RelatedPersonBean getAssignedPersonAsPersonalRelationship1() {
        return this.assignedPerson instanceof ca.infoway.messagebuilder.model.merged.RelatedPersonBean ? (ca.infoway.messagebuilder.model.merged.RelatedPersonBean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsPersonalRelationship1() {
        return (this.assignedPerson instanceof ca.infoway.messagebuilder.model.merged.RelatedPersonBean);
    }

    public HealthcareWorkerBean getAssignedPersonAsAssignedEntity3() {
        return this.assignedPerson instanceof HealthcareWorkerBean ? (HealthcareWorkerBean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsAssignedEntity3() {
        return (this.assignedPerson instanceof HealthcareWorkerBean);
    }

    public HealthcareOrganizationBean getAssignedPersonAsAssignedEntity4() {
        return this.assignedPerson instanceof HealthcareOrganizationBean ? (HealthcareOrganizationBean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsAssignedEntity4() {
        return (this.assignedPerson instanceof HealthcareOrganizationBean);
    }

    public RelatedPersonBean getAssignedPersonAsPersonalRelationship2() {
        return this.assignedPerson instanceof RelatedPersonBean ? (RelatedPersonBean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsPersonalRelationship2() {
        return (this.assignedPerson instanceof RelatedPersonBean);
    }

    public ca.infoway.messagebuilder.model.merged.RelatedPersonBean getAssignedPersonAsPersonalRelationship4() {
        return this.assignedPerson instanceof ca.infoway.messagebuilder.model.merged.RelatedPersonBean ? (ca.infoway.messagebuilder.model.merged.RelatedPersonBean) this.assignedPerson : null;
    }
    public boolean hasAssignedPersonAsPersonalRelationship4() {
        return (this.assignedPerson instanceof ca.infoway.messagebuilder.model.merged.RelatedPersonBean);
    }

}
