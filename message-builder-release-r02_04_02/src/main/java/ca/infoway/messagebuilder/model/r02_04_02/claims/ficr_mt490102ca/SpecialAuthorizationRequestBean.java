/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.r02_04_02.claims.ficr_mt490102ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActPriority;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.r02_04_02.claims.merged.HealthDocumentAttachment_1Bean;
import ca.infoway.messagebuilder.model.r02_04_02.claims.merged.SpecialAuthorizationRequestCrossReferenceBean;
import ca.infoway.messagebuilder.model.r02_04_02.claims.merged.Subject3Bean;
import ca.infoway.messagebuilder.model.r02_04_02.claims.merged.Subject5Bean;
import ca.infoway.messagebuilder.model.r02_04_02.common.merged.HealthcareWorkerBean;
import ca.infoway.messagebuilder.model.r02_04_02.merged.IncludesBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;



@Hl7PartTypeMapping({"FICR_MT490102CA.SpecialAuthorizationRequest"})
@Hl7RootType
public class SpecialAuthorizationRequestBean extends MessagePartBean {

    private static final long serialVersionUID = 20110318L;
    private SET<CV, Code> confidentialityRestrictionS = new SETImpl<CV, Code>(CVImpl.class);
    private List<HealthDocumentAttachment_1Bean> pertinentInformationHealthDocumentAttachment = new ArrayList<HealthDocumentAttachment_1Bean>();
    private HealthcareWorkerBean authorAssignedEntity;
    private IVL<TS, Interval<Date>> specialAuthorizationRequestEffectiveDate = new IVLImpl<TS, Interval<Date>>();
    private CV specialAuthorizationRequestType = new CVImpl();
    private SpecialAuthorizationRequestCrossReferenceBean predecessorSpecialAuthorizationRequestCrossReference;
    private List<IncludesBean> subjectOf = new ArrayList<IncludesBean>();
    private CV specialAuthorizationPriorityCode = new CVImpl();
    private List<SpecialAuthorizationCriteriaBean> supportSpecialAuthorizationCriteria = new ArrayList<SpecialAuthorizationCriteriaBean>();
    private Subject3Bean subject1;
    private List<Subject5Bean> subject2 = new ArrayList<Subject5Bean>();
    private II specialAuthorityRequestID = new IIImpl();
    private SpecialAuthorizationBean fulfillmentSpecialAuthorization;
    private PolicyOrAccountBean coveragePolicyOrAccount;


    /**
     * <p>Confidentiality Restriction(s</p>
     */
    @Hl7XmlMapping({"confidentialityCode"})
    public Set<x_VeryBasicConfidentialityKind> getConfidentialityRestrictionS() {
        return this.confidentialityRestrictionS.rawSet(x_VeryBasicConfidentialityKind.class);
    }


    @Hl7XmlMapping({"pertinentInformation/healthDocumentAttachment"})
    public List<HealthDocumentAttachment_1Bean> getPertinentInformationHealthDocumentAttachment() {
        return this.pertinentInformationHealthDocumentAttachment;
    }


    @Hl7XmlMapping({"author/assignedEntity"})
    public HealthcareWorkerBean getAuthorAssignedEntity() {
        return this.authorAssignedEntity;
    }
    public void setAuthorAssignedEntity(HealthcareWorkerBean authorAssignedEntity) {
        this.authorAssignedEntity = authorAssignedEntity;
    }


    /**
     * <p>Special Authorization Request Effective Date</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getSpecialAuthorizationRequestEffectiveDate() {
        return this.specialAuthorizationRequestEffectiveDate.getValue();
    }
    public void setSpecialAuthorizationRequestEffectiveDate(Interval<Date> specialAuthorizationRequestEffectiveDate) {
        this.specialAuthorizationRequestEffectiveDate.setValue(specialAuthorizationRequestEffectiveDate);
    }


    /**
     * <p>Special Authorization Request Type</p>
     */
    @Hl7XmlMapping({"code"})
    public Code getSpecialAuthorizationRequestType() {
        return (Code) this.specialAuthorizationRequestType.getValue();
    }
    public void setSpecialAuthorizationRequestType(Code specialAuthorizationRequestType) {
        this.specialAuthorizationRequestType.setValue(specialAuthorizationRequestType);
    }


    @Hl7XmlMapping({"predecessor/specialAuthorizationRequestCrossReference"})
    public SpecialAuthorizationRequestCrossReferenceBean getPredecessorSpecialAuthorizationRequestCrossReference() {
        return this.predecessorSpecialAuthorizationRequestCrossReference;
    }
    public void setPredecessorSpecialAuthorizationRequestCrossReference(SpecialAuthorizationRequestCrossReferenceBean predecessorSpecialAuthorizationRequestCrossReference) {
        this.predecessorSpecialAuthorizationRequestCrossReference = predecessorSpecialAuthorizationRequestCrossReference;
    }


    @Hl7XmlMapping({"subjectOf"})
    public List<IncludesBean> getSubjectOf() {
        return this.subjectOf;
    }


    /**
     * <p>Special Authorization Priority Code</p>
     */
    @Hl7XmlMapping({"priorityCode"})
    public ActPriority getSpecialAuthorizationPriorityCode() {
        return (ActPriority) this.specialAuthorizationPriorityCode.getValue();
    }
    public void setSpecialAuthorizationPriorityCode(ActPriority specialAuthorizationPriorityCode) {
        this.specialAuthorizationPriorityCode.setValue(specialAuthorizationPriorityCode);
    }


    @Hl7XmlMapping({"support/specialAuthorizationCriteria"})
    public List<SpecialAuthorizationCriteriaBean> getSupportSpecialAuthorizationCriteria() {
        return this.supportSpecialAuthorizationCriteria;
    }


    @Hl7XmlMapping({"subject1"})
    public Subject3Bean getSubject1() {
        return this.subject1;
    }
    public void setSubject1(Subject3Bean subject1) {
        this.subject1 = subject1;
    }


    @Hl7XmlMapping({"subject2"})
    public List<Subject5Bean> getSubject2() {
        return this.subject2;
    }


    /**
     * <p>Special Authority Request ID</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getSpecialAuthorityRequestID() {
        return this.specialAuthorityRequestID.getValue();
    }
    public void setSpecialAuthorityRequestID(Identifier specialAuthorityRequestID) {
        this.specialAuthorityRequestID.setValue(specialAuthorityRequestID);
    }


    @Hl7XmlMapping({"fulfillment/specialAuthorization"})
    public SpecialAuthorizationBean getFulfillmentSpecialAuthorization() {
        return this.fulfillmentSpecialAuthorization;
    }
    public void setFulfillmentSpecialAuthorization(SpecialAuthorizationBean fulfillmentSpecialAuthorization) {
        this.fulfillmentSpecialAuthorization = fulfillmentSpecialAuthorization;
    }


    @Hl7XmlMapping({"coverage/policyOrAccount"})
    public PolicyOrAccountBean getCoveragePolicyOrAccount() {
        return this.coveragePolicyOrAccount;
    }
    public void setCoveragePolicyOrAccount(PolicyOrAccountBean coveragePolicyOrAccount) {
        this.coveragePolicyOrAccount = coveragePolicyOrAccount;
    }

}
