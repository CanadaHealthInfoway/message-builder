/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pharmacy.pome_mt010100ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.merged.AppearanceCharacteristicsBean;
import ca.infoway.messagebuilder.model.merged.DrugCostBean;
import ca.infoway.messagebuilder.model.merged.DrugOrCompoundBean;
import java.util.ArrayList;
import java.util.List;



/**
 * <p>Medication</p>
 * 
 * <p>Represents a particular medicine or herbal product which 
 * might be prescribed or administered.</p>
 * 
 * <p>Allows retrieval of summary about one or more products 
 * when searching for a medication</p>
 */
@Hl7PartTypeMapping({"POME_MT010100CA.AdministerableMaterial"})
@Hl7RootType
public class MedicationBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private DrugOrCompoundBean administerableMedicine;
    private DrugCostBean subjectOf1PotentialCharge;
    private List<AppearanceCharacteristicsBean> subjectOf2Characteristic = new ArrayList<AppearanceCharacteristicsBean>();

    @Hl7XmlMapping({"administerableMedicine"})
    public DrugOrCompoundBean getAdministerableMedicine() {
        return this.administerableMedicine;
    }
    public void setAdministerableMedicine(DrugOrCompoundBean administerableMedicine) {
        this.administerableMedicine = administerableMedicine;
    }

    @Hl7XmlMapping({"subjectOf1/potentialCharge"})
    public DrugCostBean getSubjectOf1PotentialCharge() {
        return this.subjectOf1PotentialCharge;
    }
    public void setSubjectOf1PotentialCharge(DrugCostBean subjectOf1PotentialCharge) {
        this.subjectOf1PotentialCharge = subjectOf1PotentialCharge;
    }

    @Hl7XmlMapping({"subjectOf2/characteristic"})
    public List<AppearanceCharacteristicsBean> getSubjectOf2Characteristic() {
        return this.subjectOf2Characteristic;
    }

}
