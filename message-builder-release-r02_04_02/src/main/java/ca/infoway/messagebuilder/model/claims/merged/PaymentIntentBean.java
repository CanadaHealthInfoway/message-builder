/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.claims.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.MO;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.MOImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Money;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.claims.ficr_mt610201ca.PaymentIntentReasonBean;
import ca.infoway.messagebuilder.model.common.coct_mt110101ca.AccountBean;
import ca.infoway.messagebuilder.model.common.coct_mt110200ca.PayeeAccountBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>PaymentIntent</p>
 * 
 * <p>FICR_MT630000CA.PaymentIntent: Payment Intent</p>
 * 
 * <p><p>Intention of Payor to pay invoice as previously 
 * adjudicated.</p></p>
 * 
 * <p><p>If an Adjudicator adjudicates for multiple insurance 
 * policies (EOBs) for multiple Payors and/or Payees, there 
 * would be more than 1 Payment Intent payload in the Results 
 * message</p></p>
 */
@Hl7PartTypeMapping({"FICR_MT610201CA.PaymentIntent","FICR_MT630000CA.PaymentIntent"})
@Hl7RootType
public class PaymentIntentBean extends MessagePartBean {

    private static final long serialVersionUID = 20110127L;
    private List<AdjudicatorBillingTaxAccountBean> pertinentInformationAdjudicatorBillingTaxAccount = new ArrayList<AdjudicatorBillingTaxAccountBean>();
    private List<PaymentIntentReasonBean> reasonOf = new ArrayList<PaymentIntentReasonBean>();
    private PayeeAccountBean creditAccount;
    private TS paymentIntentDateTime = new TSImpl();
    private MO amt = new MOImpl();
    private AccountBean debitAccount;


    @Hl7XmlMapping({"pertinentInformation/adjudicatorBillingTaxAccount"})
    public List<AdjudicatorBillingTaxAccountBean> getPertinentInformationAdjudicatorBillingTaxAccount() {
        return this.pertinentInformationAdjudicatorBillingTaxAccount;
    }


    @Hl7XmlMapping({"reasonOf"})
    public List<PaymentIntentReasonBean> getReasonOf() {
        return this.reasonOf;
    }


    @Hl7XmlMapping({"credit/account"})
    public PayeeAccountBean getCreditAccount() {
        return this.creditAccount;
    }
    public void setCreditAccount(PayeeAccountBean creditAccount) {
        this.creditAccount = creditAccount;
    }


    /**
     * <p>PaymentIntentDateTime</p>
     * 
     * <p>Payment Intent Date/Time</p>
     * 
     * <p>Payment Intent Date/Time</p>
     * 
     * <p><p>Parment Intent Date/Time - Time payor intends to make 
     * payment (e.g. date of cheque/EFT run).</p></p>
     * 
     * <p><p>For nullify, this would also be the date the payor 
     * intends to make the payment.</p><p>For Invoice Nullify 
     * Results: Effective time of the cancel is noted in the 
     * control act wrapper.</p></p>
     * 
     * <p><p>For nullify, this would also be the date the payor 
     * intends to make the payment.</p><p>For Invoice Nullify 
     * Results: Effective time of the cancel is noted in the 
     * control act wrapper.</p></p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Date getPaymentIntentDateTime() {
        return this.paymentIntentDateTime.getValue();
    }
    public void setPaymentIntentDateTime(Date paymentIntentDateTime) {
        this.paymentIntentDateTime.setValue(paymentIntentDateTime);
    }


    /**
     * <p>Total intent payment amount</p>
     * 
     * <p>payment amount</p>
     * 
     * <p><p>Net_amt must be positive or 0 for</p><p>Adjudication 
     * Results messages</p><p>Net_amt must be negative or 0 for 
     * Invoice Cancel messages</p></p>
     * 
     * <p><p>Net_amt must be positive or 0 for</p><p>Adjudication 
     * Results messages</p><p>Net_amt must be negative or 0 for 
     * Invoice Cancel messages</p></p>
     * 
     * <p><p>Net_amt must be positive or 0 for</p><p>Adjudication 
     * Results messages</p><p>Net_amt must be negative or 0 for 
     * Invoice Cancel messages</p></p>
     * 
     * <p><p>payment amount</p></p>
     * 
     * <p><p>Adjudication Results: The payment intent amount cannot 
     * be mandatory for active adjudication results.</p><p>For 
     * Invoice Nullify Results: the payment intent is completed 
     * only, and therefore the amount must be specified.</p><p>For 
     * completed Payment Intents, this field is mandatory.</p></p>
     * 
     * <p><p>Adjudication Results: The payment intent amount cannot 
     * be mandatory for active adjudication results.</p><p>For 
     * Invoice Nullify Results: the payment intent is completed 
     * only, and therefore the amount must be specified.</p><p>For 
     * completed Payment Intents, this field is mandatory.</p></p>
     * 
     * <p><p>Adjudication Results: The payment intent amount cannot 
     * be mandatory for active adjudication results.</p><p>For 
     * Invoice Nullify Results: the payment intent is completed 
     * only, and therefore the amount must be specified.</p><p>For 
     * completed Payment Intents, this field is mandatory.</p></p>
     */
    @Hl7XmlMapping({"amt"})
    public Money getAmt() {
        return this.amt.getValue();
    }
    public void setAmt(Money amt) {
        this.amt.setValue(amt);
    }


    @Hl7XmlMapping({"debit/account"})
    public AccountBean getDebitAccount() {
        return this.debitAccount;
    }
    public void setDebitAccount(AccountBean debitAccount) {
        this.debitAccount = debitAccount;
    }

}
