/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.claims.ficr_mt600201ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.merged.CoveredPartyAsPatientAnimalBean;
import ca.infoway.messagebuilder.model.merged.PersonalRelationship_1Bean;
import ca.infoway.messagebuilder.model.merged.SubjectBean;
import java.util.ArrayList;
import java.util.List;



/**
 * <p>Covered Person Identifier</p>
 * 
 * <p>(Assigned by carrier - root of OID)</p>
 * 
 * <p>= Subscriber+Dependents</p>
 * 
 * <p>Can be a single covered party,</p>
 * 
 * <p>an organization, an animal</p>
 * 
 * <p>or a group of patients</p>
 * 
 * <p>and/or a group of animals.</p>
 * 
 * <p>Covered party may be a patient who for the purposes of 
 * the invoice is a covered party.</p>
 */
@Hl7PartTypeMapping({"FICR_MT600201CA.CoveredPartyAsPatient"})
public class CoveredPartyAsPatientBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private II coveredPartyIdentifier = new IIImpl();
    private CV coveredPartyRelationshipToPolicyHolder = new CVImpl();
    private CoveredPartyAsPatientChoiceBean coveredPartyAsPatientChoice;
    private List<SubjectBean> subjectOf = new ArrayList<SubjectBean>();
    private PersonalRelationship_1Bean indirectAuthorityPersonalRelationship;

    @Hl7XmlMapping({"id"})
    public Identifier getCoveredPartyIdentifier() {
        return this.coveredPartyIdentifier.getValue();
    }
    public void setCoveredPartyIdentifier(Identifier coveredPartyIdentifier) {
        this.coveredPartyIdentifier.setValue(coveredPartyIdentifier);
    }

    @Hl7XmlMapping({"code"})
    public Code getCoveredPartyRelationshipToPolicyHolder() {
        return (Code) this.coveredPartyRelationshipToPolicyHolder.getValue();
    }
    public void setCoveredPartyRelationshipToPolicyHolder(Code coveredPartyRelationshipToPolicyHolder) {
        this.coveredPartyRelationshipToPolicyHolder.setValue(coveredPartyRelationshipToPolicyHolder);
    }

    @Hl7XmlMapping({"coveredPartyAsPatientChoice"})
    public CoveredPartyAsPatientChoiceBean getCoveredPartyAsPatientChoice() {
        return this.coveredPartyAsPatientChoice;
    }
    public void setCoveredPartyAsPatientChoice(CoveredPartyAsPatientChoiceBean coveredPartyAsPatientChoice) {
        this.coveredPartyAsPatientChoice = coveredPartyAsPatientChoice;
    }

    public CoveredPartyAsPatientPersonBean getCoveredPartyAsPatientChoiceAsCoveredPartyAsPatientPerson() {
        return this.coveredPartyAsPatientChoice instanceof CoveredPartyAsPatientPersonBean ? (CoveredPartyAsPatientPersonBean) this.coveredPartyAsPatientChoice : null;
    }
    public boolean hasCoveredPartyAsPatientChoiceAsCoveredPartyAsPatientPerson() {
        return (this.coveredPartyAsPatientChoice instanceof CoveredPartyAsPatientPersonBean);
    }

    public CoveredPartyAsPatientAnimalBean getCoveredPartyAsPatientChoiceAsCoveredPartyAsPatientAnimal() {
        return this.coveredPartyAsPatientChoice instanceof CoveredPartyAsPatientAnimalBean ? (CoveredPartyAsPatientAnimalBean) this.coveredPartyAsPatientChoice : null;
    }
    public boolean hasCoveredPartyAsPatientChoiceAsCoveredPartyAsPatientAnimal() {
        return (this.coveredPartyAsPatientChoice instanceof CoveredPartyAsPatientAnimalBean);
    }

    @Hl7XmlMapping({"subjectOf"})
    public List<SubjectBean> getSubjectOf() {
        return this.subjectOf;
    }

    @Hl7XmlMapping({"indirectAuthority/personalRelationship"})
    public PersonalRelationship_1Bean getIndirectAuthorityPersonalRelationship() {
        return this.indirectAuthorityPersonalRelationship;
    }
    public void setIndirectAuthorityPersonalRelationship(PersonalRelationship_1Bean indirectAuthorityPersonalRelationship) {
        this.indirectAuthorityPersonalRelationship = indirectAuthorityPersonalRelationship;
    }

}
