/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.common.coct_mt050007ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.AD;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.TEL;
import ca.infoway.messagebuilder.datatype.impl.ADImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.impl.TELImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.PostalAddress;
import ca.infoway.messagebuilder.datatype.lang.TelecommunicationAddress;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.List;
import java.util.Set;



/**
 * <p>Patient</p>
 * 
 * <p>A person who is receiving or may receive healthcare 
 * services and has personal attributes (e.g. name, birth 
 * date).</p>
 * 
 * <p>Information used to identify the patient and to support 
 * clinical decisions. This information applies to the person 
 * in the context of the associated action only, and should be 
 * stored separately. I.e. the address/phone/email only apply 
 * to the current prescription/dispense/lab order etc.</p>
 */
@Hl7PartTypeMapping({"COCT_MT050007CA.Patient"})
@Hl7RootType
public class PatientBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private SET<II, Identifier> patientIdentifier = new SETImpl<II, Identifier>(IIImpl.class);
    private AD patientAddress = new ADImpl();
    private LIST<TEL, TelecommunicationAddress> patientContactPhoneAndEMails = new LISTImpl<TEL, TelecommunicationAddress>(TELImpl.class);
    private ST patientHealthCardVersionCode = new STImpl();
    private PersonBean patientPerson;
    private PatientIdentifyingCharacteristicsBean subjectOfIdentifyingCharacteristicsObservationEvent;

    @Hl7XmlMapping({"id"})
    public Set<Identifier> getPatientIdentifier() {
        return this.patientIdentifier.rawSet();
    }

    @Hl7XmlMapping({"addr"})
    public PostalAddress getPatientAddress() {
        return this.patientAddress.getValue();
    }
    public void setPatientAddress(PostalAddress patientAddress) {
        this.patientAddress.setValue(patientAddress);
    }

    @Hl7XmlMapping({"telecom"})
    public List<TelecommunicationAddress> getPatientContactPhoneAndEMails() {
        return this.patientContactPhoneAndEMails.rawList();
    }

    @Hl7XmlMapping({"certificateText"})
    public String getPatientHealthCardVersionCode() {
        return this.patientHealthCardVersionCode.getValue();
    }
    public void setPatientHealthCardVersionCode(String patientHealthCardVersionCode) {
        this.patientHealthCardVersionCode.setValue(patientHealthCardVersionCode);
    }

    @Hl7XmlMapping({"patientPerson"})
    public PersonBean getPatientPerson() {
        return this.patientPerson;
    }
    public void setPatientPerson(PersonBean patientPerson) {
        this.patientPerson = patientPerson;
    }

    @Hl7XmlMapping({"subjectOf/identifyingCharacteristicsObservationEvent"})
    public PatientIdentifyingCharacteristicsBean getSubjectOfIdentifyingCharacteristicsObservationEvent() {
        return this.subjectOfIdentifyingCharacteristicsObservationEvent;
    }
    public void setSubjectOfIdentifyingCharacteristicsObservationEvent(PatientIdentifyingCharacteristicsBean subjectOfIdentifyingCharacteristicsObservationEvent) {
        this.subjectOfIdentifyingCharacteristicsObservationEvent = subjectOfIdentifyingCharacteristicsObservationEvent;
    }

}
