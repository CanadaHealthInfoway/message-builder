/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.lab.polb_mt004000ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.ED;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.EDImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.EncapsulatedData;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.x_BasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt050007ca.PatientBean;
import ca.infoway.messagebuilder.model.common.coct_mt090508ca.HealthcareOrganizationBean;
import ca.infoway.messagebuilder.model.merged.FulfillmentChoiceBean;
import ca.infoway.messagebuilder.model.merged.HasNotesBean;
import ca.infoway.messagebuilder.model.merged.OutbreakBean;
import ca.infoway.messagebuilder.model.merged.ReportSectionSpecimenBean;
import ca.infoway.messagebuilder.model.merged.ReportableHealthIndicatorBean;
import ca.infoway.messagebuilder.model.merged.ResultSortKeyBean;
import ca.infoway.messagebuilder.model.merged.ResultStatusProcessStepBean;
import ca.infoway.messagebuilder.model.merged.RoleChoiceBean;
import ca.infoway.messagebuilder.model.merged.SubjectToTriggerEventBean;
import ca.infoway.messagebuilder.model.merged.SupportingClinicalInformationBean;
import ca.infoway.messagebuilder.model.merged.WasPerformedByBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;



/**
 * <p>Observation Report</p>
 * 
 * <p>This observation report object is used to group multiple 
 * clusters, batteries, or observations into one result report.</p>
 * 
 * <p>Used to organize and report results.</p>
 */
@Hl7PartTypeMapping({"POLB_MT004000CA.ObservationReport"})
public class ObservationReportBean extends MessagePartBean implements ResultChoiceBean {

    private static final long serialVersionUID = 20100603L;
    private List<ReportSectionSpecimenBean> specimen = new ArrayList<ReportSectionSpecimenBean>();
    private PatientBean recordTargetPatient;
    private II observationReportIdentifier = new IIImpl();
    private List<RoleChoiceBean> receiverRoleChoice = new ArrayList<RoleChoiceBean>();
    private CD labObservationReportType = new CDImpl();
    private List<WasPerformedByBean> performer = new ArrayList<WasPerformedByBean>();
    private ST observationReportTitle = new STImpl();
    private RecipientChoiceBean primaryInformationRecipientRecipientChoice;
    private ED<EncapsulatedData> renderedReport = new EDImpl<EncapsulatedData>();
    private List<FulfillmentChoiceBean> inFulfillmentOfFulfillmentChoice = new ArrayList<FulfillmentChoiceBean>();
    private CS observationReportStatus = new CSImpl();
    private OutbreakBean pertinentInformation1OutbreakEvent;
    private TS reportDateTime = new TSImpl();
    private List<SupportingClinicalInformationBean> pertinentInformation2SupportingClinicalObservationEvent = new ArrayList<SupportingClinicalInformationBean>();
    private SET<CV, Code> resultMaskingIndicator = new SETImpl<CV, Code>(CVImpl.class);
    private ResultSortKeyBean component1ResultSortKey;
    private List<ReportableHealthIndicatorBean> component2ReportableTestIndicator = new ArrayList<ReportableHealthIndicatorBean>();
    private List<ResultChoiceBean> component3ResultChoice = new ArrayList<ResultChoiceBean>();
    private SubjectToTriggerEventBean subjectOf1;
    private List<HasNotesBean> subjectOf2 = new ArrayList<HasNotesBean>();
    private ResultStatusProcessStepBean subjectOf3ResultStatusProcessStep;

    @Hl7XmlMapping({"specimen"})
    public List<ReportSectionSpecimenBean> getSpecimen() {
        return this.specimen;
    }

    @Hl7XmlMapping({"recordTarget/patient"})
    public PatientBean getRecordTargetPatient() {
        return this.recordTargetPatient;
    }
    public void setRecordTargetPatient(PatientBean recordTargetPatient) {
        this.recordTargetPatient = recordTargetPatient;
    }

    @Hl7XmlMapping({"id"})
    public Identifier getObservationReportIdentifier() {
        return this.observationReportIdentifier.getValue();
    }
    public void setObservationReportIdentifier(Identifier observationReportIdentifier) {
        this.observationReportIdentifier.setValue(observationReportIdentifier);
    }

    @Hl7XmlMapping({"receiver/roleChoice"})
    public List<RoleChoiceBean> getReceiverRoleChoice() {
        return this.receiverRoleChoice;
    }

    @Hl7XmlMapping({"code"})
    public Code getLabObservationReportType() {
        return (Code) this.labObservationReportType.getValue();
    }
    public void setLabObservationReportType(Code labObservationReportType) {
        this.labObservationReportType.setValue(labObservationReportType);
    }

    @Hl7XmlMapping({"performer"})
    public List<WasPerformedByBean> getPerformer() {
        return this.performer;
    }

    @Hl7XmlMapping({"title"})
    public String getObservationReportTitle() {
        return this.observationReportTitle.getValue();
    }
    public void setObservationReportTitle(String observationReportTitle) {
        this.observationReportTitle.setValue(observationReportTitle);
    }

    @Hl7XmlMapping({"primaryInformationRecipient/recipientChoice"})
    public RecipientChoiceBean getPrimaryInformationRecipientRecipientChoice() {
        return this.primaryInformationRecipientRecipientChoice;
    }
    public void setPrimaryInformationRecipientRecipientChoice(RecipientChoiceBean primaryInformationRecipientRecipientChoice) {
        this.primaryInformationRecipientRecipientChoice = primaryInformationRecipientRecipientChoice;
    }

    public HealthcareOrganizationBean getPrimaryInformationRecipientRecipientChoiceAsAssignedEntity1() {
        return this.primaryInformationRecipientRecipientChoice instanceof HealthcareOrganizationBean ? (HealthcareOrganizationBean) this.primaryInformationRecipientRecipientChoice : null;
    }
    public boolean hasPrimaryInformationRecipientRecipientChoiceAsAssignedEntity1() {
        return (this.primaryInformationRecipientRecipientChoice instanceof HealthcareOrganizationBean);
    }

    public ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean getPrimaryInformationRecipientRecipientChoiceAsAssignedEntity2() {
        return this.primaryInformationRecipientRecipientChoice instanceof ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean ? (ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean) this.primaryInformationRecipientRecipientChoice : null;
    }
    public boolean hasPrimaryInformationRecipientRecipientChoiceAsAssignedEntity2() {
        return (this.primaryInformationRecipientRecipientChoice instanceof ca.infoway.messagebuilder.model.common.coct_mt090502ca.HealthcareOrganizationBean);
    }

    @Hl7XmlMapping({"text"})
    public EncapsulatedData getRenderedReport() {
        return this.renderedReport.getValue();
    }
    public void setRenderedReport(EncapsulatedData renderedReport) {
        this.renderedReport.setValue(renderedReport);
    }

    @Hl7XmlMapping({"inFulfillmentOf/fulfillmentChoice"})
    public List<FulfillmentChoiceBean> getInFulfillmentOfFulfillmentChoice() {
        return this.inFulfillmentOfFulfillmentChoice;
    }

    @Hl7XmlMapping({"statusCode"})
    public ActStatus getObservationReportStatus() {
        return (ActStatus) this.observationReportStatus.getValue();
    }
    public void setObservationReportStatus(ActStatus observationReportStatus) {
        this.observationReportStatus.setValue(observationReportStatus);
    }

    @Hl7XmlMapping({"pertinentInformation1/outbreakEvent"})
    public OutbreakBean getPertinentInformation1OutbreakEvent() {
        return this.pertinentInformation1OutbreakEvent;
    }
    public void setPertinentInformation1OutbreakEvent(OutbreakBean pertinentInformation1OutbreakEvent) {
        this.pertinentInformation1OutbreakEvent = pertinentInformation1OutbreakEvent;
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Date getReportDateTime() {
        return this.reportDateTime.getValue();
    }
    public void setReportDateTime(Date reportDateTime) {
        this.reportDateTime.setValue(reportDateTime);
    }

    @Hl7XmlMapping({"pertinentInformation2/supportingClinicalObservationEvent"})
    public List<SupportingClinicalInformationBean> getPertinentInformation2SupportingClinicalObservationEvent() {
        return this.pertinentInformation2SupportingClinicalObservationEvent;
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public Set<x_BasicConfidentialityKind> getResultMaskingIndicator() {
        return this.resultMaskingIndicator.rawSet(x_BasicConfidentialityKind.class);
    }

    @Hl7XmlMapping({"component1/resultSortKey"})
    public ResultSortKeyBean getComponent1ResultSortKey() {
        return this.component1ResultSortKey;
    }
    public void setComponent1ResultSortKey(ResultSortKeyBean component1ResultSortKey) {
        this.component1ResultSortKey = component1ResultSortKey;
    }

    @Hl7XmlMapping({"component2/reportableTestIndicator"})
    public List<ReportableHealthIndicatorBean> getComponent2ReportableTestIndicator() {
        return this.component2ReportableTestIndicator;
    }

    @Hl7XmlMapping({"component3/resultChoice"})
    public List<ResultChoiceBean> getComponent3ResultChoice() {
        return this.component3ResultChoice;
    }

    @Hl7XmlMapping({"subjectOf1"})
    public SubjectToTriggerEventBean getSubjectOf1() {
        return this.subjectOf1;
    }
    public void setSubjectOf1(SubjectToTriggerEventBean subjectOf1) {
        this.subjectOf1 = subjectOf1;
    }

    @Hl7XmlMapping({"subjectOf2"})
    public List<HasNotesBean> getSubjectOf2() {
        return this.subjectOf2;
    }

    @Hl7XmlMapping({"subjectOf3/resultStatusProcessStep"})
    public ResultStatusProcessStepBean getSubjectOf3ResultStatusProcessStep() {
        return this.subjectOf3ResultStatusProcessStep;
    }
    public void setSubjectOf3ResultStatusProcessStep(ResultStatusProcessStepBean subjectOf3ResultStatusProcessStep) {
        this.subjectOf3ResultStatusProcessStep = subjectOf3ResultStatusProcessStep;
    }

}
