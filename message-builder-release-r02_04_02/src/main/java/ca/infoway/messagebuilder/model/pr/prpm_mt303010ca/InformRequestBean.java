/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pr.prpm_mt303010ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.domainvalue.ParticipationMode;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.merged.ServiceDeliveryLocation_3Bean;



/**
 * <p>Inform Request</p>
 * 
 * <p>Class communicates request for routing of information to 
 * a provider or service delivery location provider.</p>
 * 
 * <p>The use case for including this class is for requesting 
 * routing of health information where the code equals the 
 * information type. Examples include ECG results, DI - 
 * Diagnostic Image interpretation reports, Lab Test Results 
 * Transcripts</p>
 */
@Hl7PartTypeMapping({"PRPM_MT303010CA.InformRequest"})
public class InformRequestBean extends MessagePartBean {

    private static final long serialVersionUID = 20100603L;
    private CV informRequestCode = new CVImpl();
    private ChoiceBean indirectTargetChoice;
    private CV serviceDeliveryLocationParticipationMode = new CVImpl();
    private ServiceDeliveryLocation_3Bean subjectServiceDeliveryLocation;

    @Hl7XmlMapping({"code"})
    public Code getInformRequestCode() {
        return (Code) this.informRequestCode.getValue();
    }
    public void setInformRequestCode(Code informRequestCode) {
        this.informRequestCode.setValue(informRequestCode);
    }

    @Hl7XmlMapping({"indirectTarget/choice"})
    public ChoiceBean getIndirectTargetChoice() {
        return this.indirectTargetChoice;
    }
    public void setIndirectTargetChoice(ChoiceBean indirectTargetChoice) {
        this.indirectTargetChoice = indirectTargetChoice;
    }

    public RoleChoiceBean getIndirectTargetChoiceAsServiceDeliveryLocation() {
        return this.indirectTargetChoice instanceof RoleChoiceBean ? (RoleChoiceBean) this.indirectTargetChoice : null;
    }
    public boolean hasIndirectTargetChoiceAsServiceDeliveryLocation() {
        return (this.indirectTargetChoice instanceof RoleChoiceBean);
    }

    public HealthcareProviderBean getIndirectTargetChoiceAsHealthCareProvider() {
        return this.indirectTargetChoice instanceof HealthcareProviderBean ? (HealthcareProviderBean) this.indirectTargetChoice : null;
    }
    public boolean hasIndirectTargetChoiceAsHealthCareProvider() {
        return (this.indirectTargetChoice instanceof HealthcareProviderBean);
    }

    @Hl7XmlMapping({"subject/modeCode"})
    public ParticipationMode getServiceDeliveryLocationParticipationMode() {
        return (ParticipationMode) this.serviceDeliveryLocationParticipationMode.getValue();
    }
    public void setServiceDeliveryLocationParticipationMode(ParticipationMode serviceDeliveryLocationParticipationMode) {
        this.serviceDeliveryLocationParticipationMode.setValue(serviceDeliveryLocationParticipationMode);
    }

    @Hl7XmlMapping({"subject/serviceDeliveryLocation"})
    public ServiceDeliveryLocation_3Bean getSubjectServiceDeliveryLocation() {
        return this.subjectServiceDeliveryLocation;
    }
    public void setSubjectServiceDeliveryLocation(ServiceDeliveryLocation_3Bean subjectServiceDeliveryLocation) {
        this.subjectServiceDeliveryLocation = subjectServiceDeliveryLocation;
    }

}
