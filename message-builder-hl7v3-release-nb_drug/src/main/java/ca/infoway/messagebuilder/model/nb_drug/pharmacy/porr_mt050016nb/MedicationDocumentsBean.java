/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.nb_drug.pharmacy.porr_mt050016nb;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.ED;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.EDImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.lang.EncapsulatedData;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActMedicationDocumentCode;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.nb_drug.pharmacy.merged.AssignedEntityBean;
import java.util.Date;



/**
 * <p>Business Name: Medication Documents</p>
 * 
 * <p>Guides providers for specifying optimum use of drugs by 
 * patients. May also guide patients in appropriately using 
 * their medication.</p>
 * 
 * <p>Information on the composition and use of a drug.</p>
 */
@Hl7PartTypeMapping({"PORR_MT050016NB.Document"})
@Hl7RootType
public class MedicationDocumentsBean extends MessagePartBean {

    private static final long serialVersionUID = 20150901L;
    private II id = new IIImpl();
    private CV code = new CVImpl();
    private IVL<TS, Interval<Date>> effectiveTime = new IVLImpl<TS, Interval<Date>>();
    private AssignedEntityBean authorAssignedEntity;
    private ED<EncapsulatedData> componentDocumentBodyEventText = new EDImpl<EncapsulatedData>();


    /**
     * <p>Business Name: B:Medication Document Id</p>
     * 
     * <p>Relationship: PORR_MT050016NB.Document.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Monograph.monographId</p>
     * 
     * <p>Allows matching and replacing of locally-stored 
     * medication documents.</p><p>This attribute is marked as 
     * 'mandatory', as it is always available.</p>
     * 
     * <p>Unique identifier assigned to a medication document 
     * record.</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }

    /**
     * <p>Business Name: B:Medication Document Id</p>
     * 
     * <p>Relationship: PORR_MT050016NB.Document.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Monograph.monographId</p>
     * 
     * <p>Allows matching and replacing of locally-stored 
     * medication documents.</p><p>This attribute is marked as 
     * 'mandatory', as it is always available.</p>
     * 
     * <p>Unique identifier assigned to a medication document 
     * record.</p>
     */
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>Business Name: A:Medication Document Type</p>
     * 
     * <p>Relationship: PORR_MT050016NB.Document.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows distinction between Drug Monograph and Patient 
     * Monograph.</p>
     * 
     * <p>ZPC1.2</p>
     * 
     * <p>ZPD2.2</p>
     * 
     * <p>Allows medication document types to be distinguished for 
     * display, printing, etc. Code is mandatory because an 
     * application can't know what to do with a medication document 
     * without knowing its type.</p>
     * 
     * <p>Distinguishes between different kinds of documents and 
     * medication documents. Kinds of medication documents include: 
     * Clinical Medication document, Patient Education Medication 
     * document, Indication Protocol, etc</p>
     */
    @Hl7XmlMapping({"code"})
    public ActMedicationDocumentCode getCode() {
        return (ActMedicationDocumentCode) this.code.getValue();
    }

    /**
     * <p>Business Name: A:Medication Document Type</p>
     * 
     * <p>Relationship: PORR_MT050016NB.Document.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows distinction between Drug Monograph and Patient 
     * Monograph.</p>
     * 
     * <p>ZPC1.2</p>
     * 
     * <p>ZPD2.2</p>
     * 
     * <p>Allows medication document types to be distinguished for 
     * display, printing, etc. Code is mandatory because an 
     * application can't know what to do with a medication document 
     * without knowing its type.</p>
     * 
     * <p>Distinguishes between different kinds of documents and 
     * medication documents. Kinds of medication documents include: 
     * Clinical Medication document, Patient Education Medication 
     * document, Indication Protocol, etc</p>
     */
    public void setCode(ActMedicationDocumentCode code) {
        this.code.setValue(code);
    }


    /**
     * <p>Business Name: C:Medication Document Effective/Expiry 
     * Date</p>
     * 
     * <p>Relationship: PORR_MT050016NB.Document.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Monograph.EffectiveDate</p>
     * 
     * <p>Monograph.EndDate</p>
     * 
     * <p>Indicates currency of information or when monograph no 
     * longer applies. Different systems may update their 
     * monographs at different times, and it is important to know 
     * what version contains the most current 
     * information</p><p>Monograph effective and/or expiry date 
     * should be available in most situations and is clinically 
     * relevant; thus attribute is marked as 'populated'.</p>
     * 
     * <p>The date on which the information in the medication 
     * document became effective, and/or the date on which the 
     * information in the medication document was superseded.</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getEffectiveTime() {
        return this.effectiveTime.getValue();
    }

    /**
     * <p>Business Name: C:Medication Document Effective/Expiry 
     * Date</p>
     * 
     * <p>Relationship: PORR_MT050016NB.Document.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Monograph.EffectiveDate</p>
     * 
     * <p>Monograph.EndDate</p>
     * 
     * <p>Indicates currency of information or when monograph no 
     * longer applies. Different systems may update their 
     * monographs at different times, and it is important to know 
     * what version contains the most current 
     * information</p><p>Monograph effective and/or expiry date 
     * should be available in most situations and is clinically 
     * relevant; thus attribute is marked as 'populated'.</p>
     * 
     * <p>The date on which the information in the medication 
     * document became effective, and/or the date on which the 
     * information in the medication document was superseded.</p>
     */
    public void setEffectiveTime(Interval<Date> effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }


    /**
     * <p>Relationship: PORR_MT050016NB.Author.assignedEntity</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"author/assignedEntity"})
    public AssignedEntityBean getAuthorAssignedEntity() {
        return this.authorAssignedEntity;
    }

    /**
     * <p>Relationship: PORR_MT050016NB.Author.assignedEntity</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setAuthorAssignedEntity(AssignedEntityBean authorAssignedEntity) {
        this.authorAssignedEntity = authorAssignedEntity;
    }


    /**
     * <p>Business Name: F:Medication Document Content + Language</p>
     * 
     * <p>Relationship: PORR_MT050016NB.DocumentBodyEvent.text</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows delivery of the medication document information to 
     * the provider either embedded or by reference.</p><p>The 
     * inclusion of document language allows providers to determine 
     * what language the medication document is written 
     * in.</p><p>The attribute is mandatory because there is no 
     * point in having a medication document with no content.</p>
     * 
     * <p>Includes either the full-blown content of the medication 
     * document (as a PDF, HTML or HL7 CDA document), or provides a 
     * reference to where the medication document can be accessed 
     * on the network via HTTP or FTP.</p><p>This attribute will 
     * also include a coded value denoting the language in which 
     * the medication document is written.</p>
     */
    @Hl7XmlMapping({"component/documentBodyEvent/text"})
    public EncapsulatedData getComponentDocumentBodyEventText() {
        return this.componentDocumentBodyEventText.getValue();
    }

    /**
     * <p>Business Name: F:Medication Document Content + Language</p>
     * 
     * <p>Relationship: PORR_MT050016NB.DocumentBodyEvent.text</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows delivery of the medication document information to 
     * the provider either embedded or by reference.</p><p>The 
     * inclusion of document language allows providers to determine 
     * what language the medication document is written 
     * in.</p><p>The attribute is mandatory because there is no 
     * point in having a medication document with no content.</p>
     * 
     * <p>Includes either the full-blown content of the medication 
     * document (as a PDF, HTML or HL7 CDA document), or provides a 
     * reference to where the medication document can be accessed 
     * on the network via HTTP or FTP.</p><p>This attribute will 
     * also include a coded value denoting the language in which 
     * the medication document is written.</p>
     */
    public void setComponentDocumentBodyEventText(EncapsulatedData componentDocumentBodyEventText) {
        this.componentDocumentBodyEventText.setValue(componentDocumentBodyEventText);
    }

}
