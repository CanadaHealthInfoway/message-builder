/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.INT;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.INTImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.util.CollapsedToDataTypeListHelper;
import ca.infoway.messagebuilder.domainvalue.ActCode;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.ficr_mt600201ca.CoveredPartyAsPatientChoiceBean;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;



@Hl7PartTypeMapping({"COCT_MT680000CA.AdjudicatedInvoiceCoverage","FICR_MT610201CA.AdjudicatedInvoiceCoverage"})
public class AdjudicatedInvoiceCoverageBean extends MessagePartBean {

    private INT cOBSequenceAsAdjudicated = new INTImpl();
    private II policyIdentifierS = new IIImpl();
    private CD<ActCode> policyType = new CDImpl<ActCode>();
    private II carrierID = new IIImpl();
    private II coveredPartyIdentifier = new IIImpl();
    private CV<Code> relationshipToPolicyHolder = new CVImpl<Code>();
    private CoveredPartyAsPatientChoiceBean policyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice;
    private List<ST> patientKeyword = new ArrayList<ST>();
    private CV<Code> examplesAreSpouseChild = new CVImpl<Code>();

    @Hl7XmlMapping({"sequenceNumber"})
    public java.lang.Integer getCOBSequenceAsAdjudicated() {
        return this.cOBSequenceAsAdjudicated.getValue();
    }
    public void setCOBSequenceAsAdjudicated(java.lang.Integer cOBSequenceAsAdjudicated) {
        this.cOBSequenceAsAdjudicated.setValue(cOBSequenceAsAdjudicated);
    }

    @Hl7XmlMapping({"policyOrAccount/id"})
    public Identifier getPolicyIdentifierS() {
        return this.policyIdentifierS.getValue();
    }
    public void setPolicyIdentifierS(Identifier policyIdentifierS) {
        this.policyIdentifierS.setValue(policyIdentifierS);
    }

    @Hl7XmlMapping({"policyOrAccount/code"})
    public ActCode getPolicyType() {
        return this.policyType.getValue();
    }
    public void setPolicyType(ActCode policyType) {
        this.policyType.setValue(policyType);
    }

    @Hl7XmlMapping({"policyOrAccount/author/carrierRole/id"})
    public Identifier getCarrierID() {
        return this.carrierID.getValue();
    }
    public void setCarrierID(Identifier carrierID) {
        this.carrierID.setValue(carrierID);
    }

    @Hl7XmlMapping({"policyOrAccount/beneficiary/coveredPartyAsPatient/id"})
    public Identifier getCoveredPartyIdentifier() {
        return this.coveredPartyIdentifier.getValue();
    }
    public void setCoveredPartyIdentifier(Identifier coveredPartyIdentifier) {
        this.coveredPartyIdentifier.setValue(coveredPartyIdentifier);
    }

    @Hl7XmlMapping({"policyOrAccount/beneficiary/coveredPartyAsPatient/code"})
    public Code getRelationshipToPolicyHolder() {
        return this.relationshipToPolicyHolder.getValue();
    }
    public void setRelationshipToPolicyHolder(Code relationshipToPolicyHolder) {
        this.relationshipToPolicyHolder.setValue(relationshipToPolicyHolder);
    }

    @Hl7XmlMapping({"policyOrAccount/beneficiary/coveredPartyAsPatient/coveredPartyAsPatientChoice"})
    public CoveredPartyAsPatientChoiceBean getPolicyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice() {
        return this.policyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice;
    }
    public void setPolicyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice(CoveredPartyAsPatientChoiceBean policyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice) {
        this.policyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice = policyOrAccountBeneficiaryCoveredPartyAsPatientCoveredPartyAsPatientChoice;
    }

    @Hl7XmlMapping({"policyOrAccount/beneficiary/coveredPartyAsPatient/subjectOf/signatureText"})
    public List<java.lang.String> getPatientKeyword() {
        return new CollapsedToDataTypeListHelper(STImpl.class, this.patientKeyword).rawList();
    }

    @Hl7XmlMapping({"policyOrAccount/beneficiary/coveredPartyAsPatient/indirectAuthority/personalRelationship/code"})
    public Code getExamplesAreSpouseChild() {
        return this.examplesAreSpouseChild.getValue();
    }
    public void setExamplesAreSpouseChild(Code examplesAreSpouseChild) {
        this.examplesAreSpouseChild.setValue(examplesAreSpouseChild);
    }

}
