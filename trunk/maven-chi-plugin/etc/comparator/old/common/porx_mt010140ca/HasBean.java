/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.common.porx_mt010140ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.domainvalue.ActPharmacySupplyType;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.merged.DispenseShipToLocationBean;
import ca.infoway.messagebuilder.model.merged.DrugProductBean;
import ca.infoway.messagebuilder.model.merged.RelatedPersonBean;
import java.util.Date;



/**
 * <p>has 
 * 
 * <p>Indicates any remaining dispense quantity associated with 
 * the prescription. 
 * 
 * <p>Allows updating the remaining dispense quantity at the 
 * time the prescription is transferred. Multiple repetitions 
 * are allowed for those circumstances where the prescription 
 * orders multiple drugs (e.g. 10mg tablets plus 40mg tablets). 
 */
@Hl7PartTypeMapping({"PORX_MT010140CA.InFulfillmentOf"})
public class HasBean extends MessagePartBean {

    private PQ remainingQuantity = new PQImpl();
    private DrugProductBean supplyEventProductMedication = new DrugProductBean();
    private CV<ActPharmacySupplyType> dispenseType = new CVImpl<ActPharmacySupplyType>();
    private IVL<TS, Interval<Date>> dispenseProcessingAndPickupDate = new IVLImpl<TS, Interval<Date>>();
    private IVL<TS, Interval<Date>> dispensedDaysSupply = new IVLImpl<TS, Interval<Date>>();
    private DispenseShipToLocationBean supplyEventDestinationServiceDeliveryLocation;
    private RelatedPersonBean supplyEventReceiverPersonalRelationship;

    @Hl7XmlMapping({"supplyEvent/quantity"})
    public PhysicalQuantity getRemainingQuantity() {
        return this.remainingQuantity.getValue();
    }
    public void setRemainingQuantity(PhysicalQuantity remainingQuantity) {
        this.remainingQuantity.setValue(remainingQuantity);
    }

    @Hl7XmlMapping({"supplyEvent/product/medication"})
    public DrugProductBean getSupplyEventProductMedication() {
        return this.supplyEventProductMedication;
    }
    public void setSupplyEventProductMedication(DrugProductBean supplyEventProductMedication) {
        this.supplyEventProductMedication = supplyEventProductMedication;
    }

    @Hl7XmlMapping({"supplyEvent/code"})
    public ActPharmacySupplyType getDispenseType() {
        return this.dispenseType.getValue();
    }
    public void setDispenseType(ActPharmacySupplyType dispenseType) {
        this.dispenseType.setValue(dispenseType);
    }

    @Hl7XmlMapping({"supplyEvent/effectiveTime"})
    public Interval<Date> getDispenseProcessingAndPickupDate() {
        return this.dispenseProcessingAndPickupDate.getValue();
    }
    public void setDispenseProcessingAndPickupDate(Interval<Date> dispenseProcessingAndPickupDate) {
        this.dispenseProcessingAndPickupDate.setValue(dispenseProcessingAndPickupDate);
    }

    @Hl7XmlMapping({"supplyEvent/expectedUseTime"})
    public Interval<Date> getDispensedDaysSupply() {
        return this.dispensedDaysSupply.getValue();
    }
    public void setDispensedDaysSupply(Interval<Date> dispensedDaysSupply) {
        this.dispensedDaysSupply.setValue(dispensedDaysSupply);
    }

    @Hl7XmlMapping({"supplyEvent/destination/serviceDeliveryLocation"})
    public DispenseShipToLocationBean getSupplyEventDestinationServiceDeliveryLocation() {
        return this.supplyEventDestinationServiceDeliveryLocation;
    }
    public void setSupplyEventDestinationServiceDeliveryLocation(DispenseShipToLocationBean supplyEventDestinationServiceDeliveryLocation) {
        this.supplyEventDestinationServiceDeliveryLocation = supplyEventDestinationServiceDeliveryLocation;
    }

    @Hl7XmlMapping({"supplyEvent/receiver/personalRelationship"})
    public RelatedPersonBean getSupplyEventReceiverPersonalRelationship() {
        return this.supplyEventReceiverPersonalRelationship;
    }
    public void setSupplyEventReceiverPersonalRelationship(RelatedPersonBean supplyEventReceiverPersonalRelationship) {
        this.supplyEventReceiverPersonalRelationship = supplyEventReceiverPersonalRelationship;
    }

}
