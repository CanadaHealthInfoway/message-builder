/**
 * Copyright 2011 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.INT;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.INTImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.AcknowledgementType;
import ca.infoway.messagebuilder.domainvalue.MessageWaitingPriority;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;



@Hl7PartTypeMapping({"MCCI_MT002200CA.Acknowledgement","MCCI_MT002300CA.Acknowledgement"})
public class AcknowledgementBean extends MessagePartBean {

    private CS<AcknowledgementType> acknowledgementCode = new CSImpl<AcknowledgementType>();
    private INT numberOfWaitingMessages = new INTImpl();
    private CV<MessageWaitingPriority> messageWaitingPriority = new CVImpl<MessageWaitingPriority>();
    private List<ErrorsOrWarningsBean> acknowledgementDetail = new ArrayList<ErrorsOrWarningsBean>();
    private II acknowledgedMessageId = new IIImpl();

    @Hl7XmlMapping({"typeCode"})
    public AcknowledgementType getAcknowledgementCode() {
        return this.acknowledgementCode.getValue();
    }
    public void setAcknowledgementCode(AcknowledgementType acknowledgementCode) {
        this.acknowledgementCode.setValue(acknowledgementCode);
    }

    @Hl7XmlMapping({"messageWaitingNumber"})
    public java.lang.Integer getNumberOfWaitingMessages() {
        return this.numberOfWaitingMessages.getValue();
    }
    public void setNumberOfWaitingMessages(java.lang.Integer numberOfWaitingMessages) {
        this.numberOfWaitingMessages.setValue(numberOfWaitingMessages);
    }

    @Hl7XmlMapping({"messageWaitingPriorityCode"})
    public MessageWaitingPriority getMessageWaitingPriority() {
        return this.messageWaitingPriority.getValue();
    }
    public void setMessageWaitingPriority(MessageWaitingPriority messageWaitingPriority) {
        this.messageWaitingPriority.setValue(messageWaitingPriority);
    }

    @Hl7XmlMapping({"acknowledgementDetail"})
    public List<ErrorsOrWarningsBean> getAcknowledgementDetail() {
        return this.acknowledgementDetail;
    }

    @Hl7XmlMapping({"targetMessage/id"})
    public Identifier getAcknowledgedMessageId() {
        return this.acknowledgedMessageId.getValue();
    }
    public void setAcknowledgedMessageId(Identifier acknowledgedMessageId) {
        this.acknowledgedMessageId.setValue(acknowledgedMessageId);
    }

}
