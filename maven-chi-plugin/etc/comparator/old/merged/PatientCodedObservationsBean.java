/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActCode;
import ca.infoway.messagebuilder.domainvalue.IssueTriggerObservationValue;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;



@Hl7PartTypeMapping({"COCT_MT260010CA.ObservationCodedEvent","COCT_MT260020CA.ObservationCodedEvent","COCT_MT260030CA.ObservationCodedEvent"})
public class PatientCodedObservationsBean extends MessagePartBean implements CausalActsBean, ca.infoway.messagebuilder.model.common.coct_mt260030ca.CausalActsBean {

    private II observationIdentifier = new IIImpl();
    private CD<ActCode> observationType = new CDImpl<ActCode>();
    private CV<x_VeryBasicConfidentialityKind> observationMaskingIndicator = new CVImpl<x_VeryBasicConfidentialityKind>();
    private CV<IssueTriggerObservationValue> observationValue = new CVImpl<IssueTriggerObservationValue>();

    @Hl7XmlMapping({"id"})
    public Identifier getObservationIdentifier() {
        return this.observationIdentifier.getValue();
    }
    public void setObservationIdentifier(Identifier observationIdentifier) {
        this.observationIdentifier.setValue(observationIdentifier);
    }

    @Hl7XmlMapping({"code"})
    public ActCode getObservationType() {
        return this.observationType.getValue();
    }
    public void setObservationType(ActCode observationType) {
        this.observationType.setValue(observationType);
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getObservationMaskingIndicator() {
        return this.observationMaskingIndicator.getValue();
    }
    public void setObservationMaskingIndicator(x_VeryBasicConfidentialityKind observationMaskingIndicator) {
        this.observationMaskingIndicator.setValue(observationMaskingIndicator);
    }

    @Hl7XmlMapping({"value"})
    public IssueTriggerObservationValue getObservationValue() {
        return this.observationValue.getValue();
    }
    public void setObservationValue(IssueTriggerObservationValue observationValue) {
        this.observationValue.setValue(observationValue);
    }

}
