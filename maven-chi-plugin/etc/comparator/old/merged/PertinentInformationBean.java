/**
 * Copyright 2011 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy$
 * Last modified: $LastChangedDate$
 * Revision:      $LastChangedRevision$
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.domainvalue.x_ActObservationHeightOrWeight;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.Date;



@Hl7PartTypeMapping({"PORX_MT010120CA.PertinentInformation","PORX_MT060160CA.PertinentInformation","PORX_MT060340CA.PertinentInformation"})
public class PertinentInformationBean extends MessagePartBean {

    private BL contextConductionInd = new BLImpl();
    private CV<x_ActObservationHeightOrWeight> prescriptionPatientMeasurementType = new CVImpl<x_ActObservationHeightOrWeight>();
    private TS prescriptionPatientMeasurementTime = new TSImpl();
    private PQ prescriptionPatientMeasuredValue = new PQImpl();

    @Hl7XmlMapping({"contextConductionInd"})
    public java.lang.Boolean getContextConductionInd() {
        return this.contextConductionInd.getValue();
    }
    public void setContextConductionInd(java.lang.Boolean contextConductionInd) {
        this.contextConductionInd.setValue(contextConductionInd);
    }

    @Hl7XmlMapping({"quantityObservationEvent/code"})
    public x_ActObservationHeightOrWeight getPrescriptionPatientMeasurementType() {
        return this.prescriptionPatientMeasurementType.getValue();
    }
    public void setPrescriptionPatientMeasurementType(x_ActObservationHeightOrWeight prescriptionPatientMeasurementType) {
        this.prescriptionPatientMeasurementType.setValue(prescriptionPatientMeasurementType);
    }

    @Hl7XmlMapping({"quantityObservationEvent/effectiveTime"})
    public Date getPrescriptionPatientMeasurementTime() {
        return this.prescriptionPatientMeasurementTime.getValue();
    }
    public void setPrescriptionPatientMeasurementTime(Date prescriptionPatientMeasurementTime) {
        this.prescriptionPatientMeasurementTime.setValue(prescriptionPatientMeasurementTime);
    }

    @Hl7XmlMapping({"quantityObservationEvent/value"})
    public PhysicalQuantity getPrescriptionPatientMeasuredValue() {
        return this.prescriptionPatientMeasuredValue.getValue();
    }
    public void setPrescriptionPatientMeasuredValue(PhysicalQuantity prescriptionPatientMeasuredValue) {
        this.prescriptionPatientMeasuredValue.setValue(prescriptionPatientMeasuredValue);
    }

}
