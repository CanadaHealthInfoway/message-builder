/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.common.coct_mt680000ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.INT;
import ca.infoway.messagebuilder.datatype.MO;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.RTO;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.INTImpl;
import ca.infoway.messagebuilder.datatype.impl.MOImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.RTOImpl;
import ca.infoway.messagebuilder.datatype.lang.Money;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.datatype.lang.Ratio;
import ca.infoway.messagebuilder.model.MessagePartBean;



/**
 * <p>Invoice element Intent 2 
 * 
 * <p>Domain for InvoiceElementDetail.code is 
 * GenericBillableItemModifier 
 */
@Hl7PartTypeMapping({"COCT_MT680000CA.InvoiceElementIntent2"})
public class InvoiceElementIntent2Bean extends MessagePartBean implements InvoiceElementChoiceBean {

    private CV<Code> genericServiceCodes = new CVImpl<Code>();
    private PQ unitQuantity = new PQImpl();
    private RTO<Money, PhysicalQuantity> pricePerUnit = new RTOImpl<Money, PhysicalQuantity>();
    private MO totalAmountBilledForLineItemElements = new MOImpl();
    private INT factorNumber = new INTImpl();

    @Hl7XmlMapping({"code"})
    public Code getGenericServiceCodes() {
        return this.genericServiceCodes.getValue();
    }
    public void setGenericServiceCodes(Code genericServiceCodes) {
        this.genericServiceCodes.setValue(genericServiceCodes);
    }

    @Hl7XmlMapping({"unitQuantity"})
    public PhysicalQuantity getUnitQuantity() {
        return this.unitQuantity.getValue();
    }
    public void setUnitQuantity(PhysicalQuantity unitQuantity) {
        this.unitQuantity.setValue(unitQuantity);
    }

    @Hl7XmlMapping({"unitPriceAmt"})
    public Ratio<Money, PhysicalQuantity> getPricePerUnit() {
        return this.pricePerUnit.getValue();
    }
    public void setPricePerUnit(Ratio<Money, PhysicalQuantity> pricePerUnit) {
        this.pricePerUnit.setValue(pricePerUnit);
    }

    @Hl7XmlMapping({"netAmt"})
    public Money getTotalAmountBilledForLineItemElements() {
        return this.totalAmountBilledForLineItemElements.getValue();
    }
    public void setTotalAmountBilledForLineItemElements(Money totalAmountBilledForLineItemElements) {
        this.totalAmountBilledForLineItemElements.setValue(totalAmountBilledForLineItemElements);
    }

    @Hl7XmlMapping({"factorNumber"})
    public java.lang.Integer getFactorNumber() {
        return this.factorNumber.getValue();
    }
    public void setFactorNumber(java.lang.Integer factorNumber) {
        this.factorNumber.setValue(factorNumber);
    }

}
