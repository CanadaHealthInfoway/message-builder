/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.sessionmgmt.comt_mt900004ab;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Business Name: Logon</p>
 * 
 * <p>Represents a request to being given permission to access 
 * a system.</p>
 * 
 * <p>Rather than relying on local PoS applications for user 
 * authentication, some jurisdictions will require direct 
 * authentication to the central EHR application. This message 
 * is used where that authentication does not occur via other 
 * standards.</p>
 */
@Hl7PartTypeMapping({"COMT_MT900004AB.ActPermission"})
@Hl7RootType
public class LogonBean extends MessagePartBean {

    private static final long serialVersionUID = 20150902L;
    private II id = new IIImpl();
    private IVL<TS, Interval<Date>> performerTime = new IVLImpl<TS, Interval<Date>>();
    private II performerAssignedEntityId = new IIImpl();
    private List<TransactionPermissionBean> componentTransactionPermission = new ArrayList<TransactionPermissionBean>();


    /**
     * <p>Business Name: A:Security Token</p>
     * 
     * <p>Relationship: COMT_MT900004AB.ActPermission.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>A unique token indicating that the user has been 
     * authenticated to the system.</p>
     * 
     * <p>The token is needed for inclusion in subsequent messages 
     * to identify that the transaction is being performed under 
     * the auspices of an authenticated user.</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }

    /**
     * <p>Business Name: A:Security Token</p>
     * 
     * <p>Relationship: COMT_MT900004AB.ActPermission.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>A unique token indicating that the user has been 
     * authenticated to the system.</p>
     * 
     * <p>The token is needed for inclusion in subsequent messages 
     * to identify that the transaction is being performed under 
     * the auspices of an authenticated user.</p>
     */
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>Business Name: C: Password Expiry Date</p>
     * 
     * <p>Relationship: COMT_MT900004AB.Performer.time</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Indicates the last date that the current password for the 
     * authenticating user will be considered valid.</p>
     * 
     * <p>Ensures the user is aware of when their password is next 
     * scheduled to expire.</p>
     */
    @Hl7XmlMapping({"performer/time"})
    public Interval<Date> getPerformerTime() {
        return this.performerTime.getValue();
    }

    /**
     * <p>Business Name: C: Password Expiry Date</p>
     * 
     * <p>Relationship: COMT_MT900004AB.Performer.time</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Indicates the last date that the current password for the 
     * authenticating user will be considered valid.</p>
     * 
     * <p>Ensures the user is aware of when their password is next 
     * scheduled to expire.</p>
     */
    public void setPerformerTime(Interval<Date> performerTime) {
        this.performerTime.setValue(performerTime);
    }


    /**
     * <p>Business Name: B: Provider id</p>
     * 
     * <p>Relationship: COMT_MT900004AB.AssignedEntity.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>The identifier of the provider logged on</p>
     * 
     * <p>Links the user id to the provider id</p>
     * 
     * <p>The Wellnet Provider Id of the assigned person is 
     * returned.</p>
     */
    @Hl7XmlMapping({"performer/assignedEntity/id"})
    public Identifier getPerformerAssignedEntityId() {
        return this.performerAssignedEntityId.getValue();
    }

    /**
     * <p>Business Name: B: Provider id</p>
     * 
     * <p>Relationship: COMT_MT900004AB.AssignedEntity.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>The identifier of the provider logged on</p>
     * 
     * <p>Links the user id to the provider id</p>
     * 
     * <p>The Wellnet Provider Id of the assigned person is 
     * returned.</p>
     */
    public void setPerformerAssignedEntityId(Identifier performerAssignedEntityId) {
        this.performerAssignedEntityId.setValue(performerAssignedEntityId);
    }


    /**
     * <p>Relationship: 
     * COMT_MT900004AB.Component.transactionPermission</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    @Hl7XmlMapping({"component/transactionPermission"})
    public List<TransactionPermissionBean> getComponentTransactionPermission() {
        return this.componentTransactionPermission;
    }

}
