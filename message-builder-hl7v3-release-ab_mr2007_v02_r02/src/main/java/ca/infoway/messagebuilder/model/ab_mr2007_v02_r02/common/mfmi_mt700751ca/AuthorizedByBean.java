/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.common.mfmi_mt700751ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.domainvalue.ContextControl;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.common.coct_mt470002ca.ConsentBean;



/**
 * <p>Business Name: c:authorized by</p>
 * 
 * <p>Information pertaining to a client's agreement/acceptance 
 * to have his/her client identification and demographic 
 * information electronically stored and shared.</p>
 * 
 * <p>Provides authorization to record and/or view client 
 * information.</p><p>Indicates the consent or keyword used to 
 * authorize access or update, including a reason for access; 
 * May also be used to override access restriction to the 
 * information ('break the glass') on a message by message 
 * basis.</p>
 * 
 * <p>Provides authorization to record and/or view client 
 * information.</p><p>Indicates the consent or keyword used to 
 * authorize access or update, including a reason for access; 
 * May also be used to override access restriction to the 
 * information ('break the glass') on a message by message 
 * basis.</p>
 * 
 * <p>This will usually only be populated for queries, but 
 * could be used for updates if a jurisdiction requires consent 
 * before recording information in the EHR (e.g. consent to 
 * participate in electronic data exchange).</p><p>Note: 
 * keywords canot be passed from one application to another via 
 * the EHR (e.g. prescriber to dispenser via a Drug Information 
 * System).</p>
 * 
 * <p>This will usually only be populated for queries, but 
 * could be used for updates if a jurisdiction requires consent 
 * before recording information in the EHR (e.g. consent to 
 * participate in electronic data exchange).</p><p>Note: 
 * keywords canot be passed from one application to another via 
 * the EHR (e.g. prescriber to dispenser via a Drug Information 
 * System).</p>
 */
@Hl7PartTypeMapping({"MFMI_MT700751CA.Subject1"})
public class AuthorizedByBean extends MessagePartBean {

    private static final long serialVersionUID = 20150902L;
    private CS contextControlCode = new CSImpl();
    private ConsentBean consentEvent;


    /**
     * <p>Relationship: MFMI_MT700751CA.Subject1.contextControlCode</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"contextControlCode"})
    public ContextControl getContextControlCode() {
        return (ContextControl) this.contextControlCode.getValue();
    }

    /**
     * <p>Relationship: MFMI_MT700751CA.Subject1.contextControlCode</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setContextControlCode(ContextControl contextControlCode) {
        this.contextControlCode.setValue(contextControlCode);
    }


    /**
     * <p>Relationship: MFMI_MT700751CA.Subject1.consentEvent</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    @Hl7XmlMapping({"consentEvent"})
    public ConsentBean getConsentEvent() {
        return this.consentEvent;
    }

    /**
     * <p>Relationship: MFMI_MT700751CA.Subject1.consentEvent</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    public void setConsentEvent(ConsentBean consentEvent) {
        this.consentEvent = consentEvent;
    }

}
