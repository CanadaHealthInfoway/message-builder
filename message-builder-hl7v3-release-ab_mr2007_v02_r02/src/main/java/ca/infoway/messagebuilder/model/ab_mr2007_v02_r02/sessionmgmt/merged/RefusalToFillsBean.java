/**
 * Copyright 2012 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 16:47:15 -0300 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */

/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.sessionmgmt.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.domainvalue.ActSupplyFulfillmentRefusalReason;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.merged.CreatedAtBean;
import ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.merged.IssuesBean;
import ca.infoway.messagebuilder.model.ab_mr2007_v02_r02.sessionmgmt.coct_mt090107ca.ProviderBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>PORX_MT060340CA.RefusalToFill: Refusal to Fills</p>
 * 
 * <p><p>One of 'Refusal to Fill Reason' or an 'Issue' must be 
 * specified but not both</p></p>
 * 
 * <p><p>Indicates that the identified issue resulted in a 
 * dispenser refusing to fill the subject prescription.</p></p>
 * 
 * <p><p>Exposes in the model that this issue is associated 
 * with a refusal to dispense.</p><p>An indication of 'refusal 
 * to fill' must be indicated, thus attribute is mandatory.</p></p>
 * 
 * <p><p>Exposes in the model that this issue is associated 
 * with a refusal to dispense.</p><p>An indication of 'refusal 
 * to fill' must be indicated, thus attribute is mandatory.</p></p>
 * 
 * <p>PORX_MT060160CA.RefusalToFill: Fill Refusals</p>
 * 
 * <p><p>One of 'Refusal to Fill Reason' or an Issue must be 
 * specified but no both</p></p>
 * 
 * <p><p>Indicates that the identified issue resulted in a 
 * dispenser refusing to fill the subject prescription.</p></p>
 * 
 * <p><p>Exposes in the model that this issue is associated 
 * with a refusal to dispense.</p><p>An indication of 'refusal 
 * to fill' must be indicated, thus attribute is mandatory.</p></p>
 * 
 * <p><p>Exposes in the model that this issue is associated 
 * with a refusal to dispense.</p><p>An indication of 'refusal 
 * to fill' must be indicated, thus attribute is mandatory.</p></p>
 */
@Hl7PartTypeMapping({"PORX_MT060160CA.RefusalToFill","PORX_MT060340CA.RefusalToFill"})
public class RefusalToFillsBean extends MessagePartBean {

    private static final long serialVersionUID = 20120122L;
    private TS effectiveTime = new TSImpl();
    private CV reasonCode = new CVImpl();
    private ProviderBean authorAssignedPerson;
    private CreatedAtBean location;
    private List<IssuesBean> reasonDetectedIssueEvent = new ArrayList<IssuesBean>();


    /**
     * <p>RefusalToFillDate</p>
     * 
     * <p>Refusal To Fill Date</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Date getEffectiveTime() {
        return this.effectiveTime.getValue();
    }
    public void setEffectiveTime(Date effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }


    /**
     * <p>RefusalToFillReason</p>
     * 
     * <p>Refusal to Fill Reason</p>
     * 
     * <p><p>Indicates a non-clinical-issue based reason for 
     * refusing to fill.</p></p>
     * 
     * <p><p>Supports capture of reasons such as 'moral objection' 
     * which are not tied to specific issues. Set to CWE to allow 
     * non-coded reasons.</p></p>
     * 
     * <p>Refusal To Fill Reason</p>
     * 
     * <p><p>Indicates a non-clinical-issue based reason for 
     * refusing to fill.</p></p>
     * 
     * <p><p>Supports capture of reasons such as 'moral objection' 
     * which are not tied to specific issues. Set as CWE to allow 
     * for non-coded reasons.</p></p>
     */
    @Hl7XmlMapping({"reasonCode"})
    public ActSupplyFulfillmentRefusalReason getReasonCode() {
        return (ActSupplyFulfillmentRefusalReason) this.reasonCode.getValue();
    }
    public void setReasonCode(ActSupplyFulfillmentRefusalReason reasonCode) {
        this.reasonCode.setValue(reasonCode);
    }


    @Hl7XmlMapping({"author/assignedPerson"})
    public ProviderBean getAuthorAssignedPerson() {
        return this.authorAssignedPerson;
    }
    public void setAuthorAssignedPerson(ProviderBean authorAssignedPerson) {
        this.authorAssignedPerson = authorAssignedPerson;
    }


    @Hl7XmlMapping({"location"})
    public CreatedAtBean getLocation() {
        return this.location;
    }
    public void setLocation(CreatedAtBean location) {
        this.location = location;
    }


    @Hl7XmlMapping({"reason/detectedIssueEvent"})
    public List<IssuesBean> getReasonDetectedIssueEvent() {
        return this.reasonDetectedIssueEvent;
    }

}
