/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_r02_04_03_imm.common.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.Date;



/**
 * <p>Business Name: PatientEncounter</p>
 * 
 * <p>COCT_MT300000CA.PatientEncounter: Patient Encounter</p>
 * 
 * <p>Can be used to reference discharge and admit dates for an 
 * encounter in a hospital.</p>
 * 
 * <p>Patient Encounter details</p>
 * 
 * <p>COCT_MT290000CA.PatientEncounter: Patient Encounter</p>
 * 
 * <p>Details of patient Encounter</p>
 */
@Hl7PartTypeMapping({"COCT_MT290000CA.PatientEncounter","COCT_MT300000CA.PatientEncounter"})
public class PatientEncounterBean extends MessagePartBean {

    private static final long serialVersionUID = 20140514L;
    private II id = new IIImpl();
    private TS effectiveTime = new TSImpl();


    /**
     * <p>Business Name: EncounterID</p>
     * 
     * <p>Un-merged Business Name: EncounterID</p>
     * 
     * <p>Relationship: COCT_MT300000CA.PatientEncounter.id</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>A unique identifier that refers to the interaction with 
     * the patient.</p>
     * 
     * <p>Un-merged Business Name: EncounterID</p>
     * 
     * <p>Relationship: COCT_MT290000CA.PatientEncounter.id</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Encounter id</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }

    /**
     * <p>Business Name: EncounterID</p>
     * 
     * <p>Un-merged Business Name: EncounterID</p>
     * 
     * <p>Relationship: COCT_MT300000CA.PatientEncounter.id</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>A unique identifier that refers to the interaction with 
     * the patient.</p>
     * 
     * <p>Un-merged Business Name: EncounterID</p>
     * 
     * <p>Relationship: COCT_MT290000CA.PatientEncounter.id</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Encounter id</p>
     */
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>Un-merged Business Name: EncounterDate</p>
     * 
     * <p>Relationship: 
     * COCT_MT300000CA.PatientEncounter.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>The start and end dates of the interaction with the 
     * patient, eg. for dispensing, the interval would be when the 
     * patient handed the prescription to the pharmacy to when the 
     * patient picked up the medication.</p>
     * 
     * <p>Un-merged Business Name: AdmitDischargeDate</p>
     * 
     * <p>Relationship: 
     * COCT_MT290000CA.PatientEncounter.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Time of encounter</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Date getEffectiveTime() {
        return this.effectiveTime.getValue();
    }

    /**
     * <p>Un-merged Business Name: EncounterDate</p>
     * 
     * <p>Relationship: 
     * COCT_MT300000CA.PatientEncounter.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>The start and end dates of the interaction with the 
     * patient, eg. for dispensing, the interval would be when the 
     * patient handed the prescription to the pharmacy to when the 
     * patient picked up the medication.</p>
     * 
     * <p>Un-merged Business Name: AdmitDischargeDate</p>
     * 
     * <p>Relationship: 
     * COCT_MT290000CA.PatientEncounter.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Time of encounter</p>
     */
    public void setEffectiveTime(Date effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }

}
