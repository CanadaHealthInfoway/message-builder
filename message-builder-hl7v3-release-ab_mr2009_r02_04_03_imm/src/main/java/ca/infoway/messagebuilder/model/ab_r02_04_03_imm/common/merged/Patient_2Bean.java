/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_r02_04_03_imm.common.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.AD;
import ca.infoway.messagebuilder.datatype.COLLECTION;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.impl.ADImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.RawListWrapper;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.PostalAddress;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;



/**
 * <p>Business Name: Patient</p>
 * 
 * <p>COCT_MT050205AB.Patient: Patient</p>
 * 
 * <p>Information used to identify the patient and to support 
 * clinical decisions. This is used when the patient is not 
 * known to the client registry but information still needs to 
 * be communicated. E.g. lab or drug reporting to PHS for an 
 * unconscious or otherwise unidentifiable patient.</p>
 * 
 * <p>A person who is receiving or may receive healthcare 
 * services and has personal attributes (e.g. name, birth 
 * date).</p>
 * 
 * <p>COCT_MT050202CA.Patient: Patient</p>
 * 
 * <p>Information used to identify the patient and confirm 
 * their identity against the client registry.</p>
 * 
 * <p>Only the identifier attribute is intended to be 
 * persisted, with the remaining attributes confirmed against 
 * the provider registry.</p>
 * 
 * <p>A person who is receiving or may receive healthcare 
 * services and has personal attributes (e.g. name, birth 
 * date).</p>
 */
@Hl7PartTypeMapping({"COCT_MT050202CA.Patient","COCT_MT050205AB.Patient"})
@Hl7RootType
public class Patient_2Bean extends MessagePartBean implements ca.infoway.messagebuilder.model.ab_r02_04_03_imm.common.coct_mt470012ca.SubjectChoice, Patient_4 {

    private static final long serialVersionUID = 20140514L;
    private COLLECTION<II> id = new LISTImpl<II, Identifier>(IIImpl.class);
    private AD addr = new ADImpl();
    private PersonBean patientPerson;


    /**
     * <p>Business Name: PatientIdentifier</p>
     * 
     * <p>Un-merged Business Name: PatientIdentifier</p>
     * 
     * <p>Relationship: COCT_MT050205AB.Patient.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-3)</p>
     * 
     * <p>C39 (Extension)</p>
     * 
     * <p>PTT.050.01 (Extension)</p>
     * 
     * <p>PTT.050.02 (Root)</p>
     * 
     * <p>A.1</p>
     * 
     * <p>PID.2</p>
     * 
     * <p>Patient.332-CY (Extension)</p>
     * 
     * <p>Patient.331-CX (Root)</p>
     * 
     * <p>Claim.330-CW</p>
     * 
     * <p>Health Card Number</p>
     * 
     * <p>PID.2</p>
     * 
     * <p>PID.4</p>
     * 
     * <p>ZDU.2</p>
     * 
     * <p>ZKW.3</p>
     * 
     * <p>Jurisdiction (Root)</p>
     * 
     * <p>Person.PHN (Extension)</p>
     * 
     * <p>Allows a patient to be referred to unambiguously. As all 
     * patients are expected to have an identifier, this attribute 
     * is mandatory.</p>
     * 
     * <p>Unique identifier assigned to a person, possibly by a 
     * local system or some other non-client-registry 
     * identifier.</p>
     * 
     * <p>Un-merged Business Name: PatientIdentifier</p>
     * 
     * <p>Relationship: COCT_MT050202CA.Patient.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-3)</p>
     * 
     * <p>C39 (Extension)</p>
     * 
     * <p>PTT.050.01 (Extension)</p>
     * 
     * <p>PTT.050.02 (Root)</p>
     * 
     * <p>A.1</p>
     * 
     * <p>PID.2</p>
     * 
     * <p>Patient.332-CY (Extension)</p>
     * 
     * <p>Patient.331-CX (Root)</p>
     * 
     * <p>Claim.330-CW</p>
     * 
     * <p>Health Card Number</p>
     * 
     * <p>PID.2</p>
     * 
     * <p>PID.4</p>
     * 
     * <p>ZDU.2</p>
     * 
     * <p>ZKW.3</p>
     * 
     * <p>Jurisdiction (Root)</p>
     * 
     * <p>Person.PHN (Extension)</p>
     * 
     * <p>Allows a patient to be referred to unambiguously. Because 
     * this is the principal mechanism for identifying patients to 
     * computer systems, the attribute is mandatory. If an 
     * identifier is not known, it should be looked up using the 
     * 'client registry' capabilities of the EHR application. The 
     * cardinality of patient identifiers is up to 3 based on the 
     * use case to support communication of a local and 
     * jurisdictional identifier along with the national 
     * identifier.</p>
     * 
     * <p>Unique identifier assigned to a person by Federal, 
     * Provincial and Territorial jurisdiction for the purposes of 
     * uniquely identifying the person within the EHR.</p><p>The 
     * EHR will define which identifier to use within a 
     * jurisdiction.</p>
     */
    @Hl7XmlMapping({"id"})
    public Collection<Identifier> getId() {
        return (Collection<Identifier>) this.id.rawCollection();
    }


    /**
     * <p>Business Name: PatientContactAddress</p>
     * 
     * <p>Un-merged Business Name: PatientContactAddress</p>
     * 
     * <p>Relationship: COCT_MT050205AB.Patient.addr</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>ZPA2.1 (use)</p>
     * 
     * <p>ZPA2.2 (usablePeriod(IVL&lt;TS).low)</p>
     * 
     * <p>ZPA2.4 (partType=UNID)</p>
     * 
     * <p>ZPA2.5 (DMODID - following DMOD=P.P.Box)</p>
     * 
     * <p>ZPA2.6 (partType=??)</p>
     * 
     * <p>ZPA2.7 (partType=??)</p>
     * 
     * <p>ZPA2.8 (partType=CTY)</p>
     * 
     * <p>ZPA2.9 (partType=CNT - populate mnemonic of SC)</p>
     * 
     * <p>ZPA2.10 (partType=ZIP)</p>
     * 
     * <p>ZPA2.11 (partType=SINST=PST)</p>
     * 
     * <p>ZPA2.12 (partTYpe=STA)</p>
     * 
     * <p>ZPA2.13 (partType=DMODID-followingDMOD=RR)</p>
     * 
     * <p>ZPA2.14 (partType=DIR)</p>
     * 
     * <p>ZPA2.15 (partType=STB)</p>
     * 
     * <p>ZPA2.16 (partType=BNR) BC:ZPA2.17 (partType=STTYP)</p>
     * 
     * <p>ZPA2.18 (usablePeriod (IVL&lt;TS).high)</p>
     * 
     * <p>ZPA2.19 (Line demarked by carriage return)</p>
     * 
     * <p>PTT.060-01 (partType=SAL)</p>
     * 
     * <p>PTT.060-02 (partType=CTY)</p>
     * 
     * <p>PTT.060-03 (partType=CNT)</p>
     * 
     * <p>PTT.060-04 (partType=ZIP)</p>
     * 
     * <p>PID.11</p>
     * 
     * <p>Patient.322-CM (partType=SAL)</p>
     * 
     * <p>Patient.323-CN (partType=CTY)</p>
     * 
     * <p>Patient.324-CO (partType=STA)</p>
     * 
     * <p>Patient.325-CP (partType=ZIP)</p>
     * 
     * <p>PID.11</p>
     * 
     * <p>Provides basic contact information for the patient.</p>
     * 
     * <p>Contact information specific to the patient for a 
     * particular action (prescription, lab test, etc.) will be 
     * conveyed as part of the payload.</p>
     * 
     * <p>Physical address for the patient where they may be 
     * visited or found.</p>
     */
    @Hl7XmlMapping({"addr"})
    public PostalAddress getAddr() {
        return this.addr.getValue();
    }

    /**
     * <p>Business Name: PatientContactAddress</p>
     * 
     * <p>Un-merged Business Name: PatientContactAddress</p>
     * 
     * <p>Relationship: COCT_MT050205AB.Patient.addr</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>ZPA2.1 (use)</p>
     * 
     * <p>ZPA2.2 (usablePeriod(IVL&lt;TS).low)</p>
     * 
     * <p>ZPA2.4 (partType=UNID)</p>
     * 
     * <p>ZPA2.5 (DMODID - following DMOD=P.P.Box)</p>
     * 
     * <p>ZPA2.6 (partType=??)</p>
     * 
     * <p>ZPA2.7 (partType=??)</p>
     * 
     * <p>ZPA2.8 (partType=CTY)</p>
     * 
     * <p>ZPA2.9 (partType=CNT - populate mnemonic of SC)</p>
     * 
     * <p>ZPA2.10 (partType=ZIP)</p>
     * 
     * <p>ZPA2.11 (partType=SINST=PST)</p>
     * 
     * <p>ZPA2.12 (partTYpe=STA)</p>
     * 
     * <p>ZPA2.13 (partType=DMODID-followingDMOD=RR)</p>
     * 
     * <p>ZPA2.14 (partType=DIR)</p>
     * 
     * <p>ZPA2.15 (partType=STB)</p>
     * 
     * <p>ZPA2.16 (partType=BNR) BC:ZPA2.17 (partType=STTYP)</p>
     * 
     * <p>ZPA2.18 (usablePeriod (IVL&lt;TS).high)</p>
     * 
     * <p>ZPA2.19 (Line demarked by carriage return)</p>
     * 
     * <p>PTT.060-01 (partType=SAL)</p>
     * 
     * <p>PTT.060-02 (partType=CTY)</p>
     * 
     * <p>PTT.060-03 (partType=CNT)</p>
     * 
     * <p>PTT.060-04 (partType=ZIP)</p>
     * 
     * <p>PID.11</p>
     * 
     * <p>Patient.322-CM (partType=SAL)</p>
     * 
     * <p>Patient.323-CN (partType=CTY)</p>
     * 
     * <p>Patient.324-CO (partType=STA)</p>
     * 
     * <p>Patient.325-CP (partType=ZIP)</p>
     * 
     * <p>PID.11</p>
     * 
     * <p>Provides basic contact information for the patient.</p>
     * 
     * <p>Contact information specific to the patient for a 
     * particular action (prescription, lab test, etc.) will be 
     * conveyed as part of the payload.</p>
     * 
     * <p>Physical address for the patient where they may be 
     * visited or found.</p>
     */
    public void setAddr(PostalAddress addr) {
        this.addr.setValue(addr);
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: COCT_MT050205AB.Patient.patientPerson</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: COCT_MT050202CA.Patient.patientPerson</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"patientPerson"})
    public PersonBean getPatientPerson() {
        return this.patientPerson;
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: COCT_MT050205AB.Patient.patientPerson</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: COCT_MT050202CA.Patient.patientPerson</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setPatientPerson(PersonBean patientPerson) {
        this.patientPerson = patientPerson;
    }

}
