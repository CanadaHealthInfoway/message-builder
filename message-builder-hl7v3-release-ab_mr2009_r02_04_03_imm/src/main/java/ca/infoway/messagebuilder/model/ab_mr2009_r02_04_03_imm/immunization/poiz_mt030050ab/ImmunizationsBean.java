/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.poiz_mt030050ab;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.ActUncertainty;
import ca.infoway.messagebuilder.domainvalue.HumanSubstanceAdministrationSite;
import ca.infoway.messagebuilder.domainvalue.RouteOfAdministration;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.common.coct_mt050205ab.PatientBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.common.coct_mt120600ca.NotesBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.merged.InvestigationEventBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.merged.LocationBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.merged.OldImmunizationEventBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.merged.PatientImmunizationObservationsBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.merged.ReasonBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.immunization.merged.VaccineBean;
import ca.infoway.messagebuilder.model.ab_mr2009_r02_04_03_imm.merged.HealthcareWorkerBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Business Name: Immunizations</p>
 * 
 * <p>Necessary component of a person's overall vaccine 
 * profile. Helps deal with outbreaks and also vaccine 
 * contraindication checking.</p>
 * 
 * <p>A record of products administered to a patient specific 
 * to immunization.</p>
 */
@Hl7PartTypeMapping({"POIZ_MT030050AB.Immunization"})
@Hl7RootType
public class ImmunizationsBean extends MessagePartBean {

    private static final long serialVersionUID = 20150902L;
    private II id = new IIImpl();
    private BL negationInd = new BLImpl();
    private CS statusCode = new CSImpl();
    private TS effectiveTime = new TSImpl();
    private CV uncertaintyCode = new CVImpl();
    private CV approachSiteCode = new CVImpl();
    private CV routeCode = new CVImpl();
    private PQ doseQuantity = new PQImpl();
    private PatientBean subjectPatient;
    private VaccineBean consumableAdministerableMedicineAdministrableVaccine;
    private HealthcareWorkerBean performerAssignedEntity;
    private HealthcareWorkerBean authorAssignedEntity;
    private LocationBean location;
    private OldImmunizationEventBean predecessorOldImmunizationEvent;
    private ReasonBean reason;
    private List<PatientImmunizationObservationsBean> pertinentInformationPatientImmunizationObservations = new ArrayList<PatientImmunizationObservationsBean>();
    private NewImmunizationEventIDBean successorNewImmunizationEvent;
    private NotesBean subjectOfAnnotation;
    private InvestigationEventBean causeInvestigationEvent;


    /**
     * <p>Business Name: A:Immunization Event ID</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows for the unique referencing of a specific 
     * immunization record. Thus the mandatory requirement.</p>
     * 
     * <p>This is an identifier assigned to a unique instance of an 
     * immunization record.</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }

    /**
     * <p>Business Name: A:Immunization Event ID</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Allows for the unique referencing of a specific 
     * immunization record. Thus the mandatory requirement.</p>
     * 
     * <p>This is an identifier assigned to a unique instance of an 
     * immunization record.</p>
     */
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>Business Name: Not Immunized?</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.negationInd</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Tracking failures to be immunized is also important in 
     * immunization reporting. Marked as mandatory because it is 
     * not meaningful for this flag to be 'unknown'.</p>
     * 
     * <p>An explicit indication that a person has not been 
     * immunized with the specified vaccine at the time 
     * indicated.</p>
     */
    @Hl7XmlMapping({"negationInd"})
    public Boolean getNegationInd() {
        return this.negationInd.getValue();
    }

    /**
     * <p>Business Name: Not Immunized?</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.negationInd</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Tracking failures to be immunized is also important in 
     * immunization reporting. Marked as mandatory because it is 
     * not meaningful for this flag to be 'unknown'.</p>
     * 
     * <p>An explicit indication that a person has not been 
     * immunized with the specified vaccine at the time 
     * indicated.</p>
     */
    public void setNegationInd(Boolean negationInd) {
        this.negationInd.setValue(negationInd);
    }


    /**
     * <p>Business Name: Immunization Event Status</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.statusCode</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Needed to differentiate between valid, obsolete and 
     * invalid immunization events (e.g. immunization event has 
     * been retracted or nullified) and is therefore mandatory.</p>
     * 
     * <p>Nullified=Retracted</p>
     * 
     * <p>Status of the immunization event</p>
     */
    @Hl7XmlMapping({"statusCode"})
    public ActStatus getStatusCode() {
        return (ActStatus) this.statusCode.getValue();
    }

    /**
     * <p>Business Name: Immunization Event Status</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.statusCode</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Needed to differentiate between valid, obsolete and 
     * invalid immunization events (e.g. immunization event has 
     * been retracted or nullified) and is therefore mandatory.</p>
     * 
     * <p>Nullified=Retracted</p>
     * 
     * <p>Status of the immunization event</p>
     */
    public void setStatusCode(ActStatus statusCode) {
        this.statusCode.setValue(statusCode);
    }


    /**
     * <p>Business Name: Immunization Date</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Important information for establishing the validity of 
     * the immunization records, and therefore mandatory. Also used 
     * in the scheduling of subsequent immunizations.</p>
     * 
     * <p>The date the vaccine was administered to the patient.</p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Date getEffectiveTime() {
        return this.effectiveTime.getValue();
    }

    /**
     * <p>Business Name: Immunization Date</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.effectiveTime</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Important information for establishing the validity of 
     * the immunization records, and therefore mandatory. Also used 
     * in the scheduling of subsequent immunizations.</p>
     * 
     * <p>The date the vaccine was administered to the patient.</p>
     */
    public void setEffectiveTime(Date effectiveTime) {
        this.effectiveTime.setValue(effectiveTime);
    }


    /**
     * <p>Business Name: Historical Indicator</p>
     * 
     * <p>Relationship: 
     * POIZ_MT030050AB.Immunization.uncertaintyCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Allows for users of information to determine the degree 
     * of uncertainty regarding the details of an immunization 
     * event and is therefore populated.</p>
     * 
     * <p>To indicate an immunization event is historical, this 
     * should be valued 'U'.</p><p>To indicate an immunization 
     * event is not historical, this should be valued with a 
     * nullFlavor of 'NA'.</p>
     * 
     * <p>An indication of uncertainty regarding an immunization 
     * event</p>
     */
    @Hl7XmlMapping({"uncertaintyCode"})
    public ActUncertainty getUncertaintyCode() {
        return (ActUncertainty) this.uncertaintyCode.getValue();
    }

    /**
     * <p>Business Name: Historical Indicator</p>
     * 
     * <p>Relationship: 
     * POIZ_MT030050AB.Immunization.uncertaintyCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     * 
     * <p>Allows for users of information to determine the degree 
     * of uncertainty regarding the details of an immunization 
     * event and is therefore populated.</p>
     * 
     * <p>To indicate an immunization event is historical, this 
     * should be valued 'U'.</p><p>To indicate an immunization 
     * event is not historical, this should be valued with a 
     * nullFlavor of 'NA'.</p>
     * 
     * <p>An indication of uncertainty regarding an immunization 
     * event</p>
     */
    public void setUncertaintyCode(ActUncertainty uncertaintyCode) {
        this.uncertaintyCode.setValue(uncertaintyCode);
    }


    /**
     * <p>Business Name: Anatomical Site</p>
     * 
     * <p>Relationship: 
     * POIZ_MT030050AB.Immunization.approachSiteCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Site of administration is needed for follow up in case of 
     * an adverse event and in some jurisdictions is part of the 
     * minimum dataset per national standard and legal client 
     * record.</p>
     * 
     * <p>A coded value denoting the body area where the 
     * immunization was administered.</p>
     */
    @Hl7XmlMapping({"approachSiteCode"})
    public HumanSubstanceAdministrationSite getApproachSiteCode() {
        return (HumanSubstanceAdministrationSite) this.approachSiteCode.getValue();
    }

    /**
     * <p>Business Name: Anatomical Site</p>
     * 
     * <p>Relationship: 
     * POIZ_MT030050AB.Immunization.approachSiteCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Site of administration is needed for follow up in case of 
     * an adverse event and in some jurisdictions is part of the 
     * minimum dataset per national standard and legal client 
     * record.</p>
     * 
     * <p>A coded value denoting the body area where the 
     * immunization was administered.</p>
     */
    public void setApproachSiteCode(HumanSubstanceAdministrationSite approachSiteCode) {
        this.approachSiteCode.setValue(approachSiteCode);
    }


    /**
     * <p>Business Name: Route of Administration</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.routeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Ensures consistency in description of routes.</p>
     * 
     * <p>The route by which the drug was administered to the 
     * patient, for example, sub-cutaneous, intra-muscular</p>
     */
    @Hl7XmlMapping({"routeCode"})
    public RouteOfAdministration getRouteCode() {
        return (RouteOfAdministration) this.routeCode.getValue();
    }

    /**
     * <p>Business Name: Route of Administration</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.routeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Ensures consistency in description of routes.</p>
     * 
     * <p>The route by which the drug was administered to the 
     * patient, for example, sub-cutaneous, intra-muscular</p>
     */
    public void setRouteCode(RouteOfAdministration routeCode) {
        this.routeCode.setValue(routeCode);
    }


    /**
     * <p>Business Name: Quantity Administered</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.doseQuantity</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Useful for evaluating reaction, evaluating vaccine 
     * failure and for checking contraindication.</p><p>Attribute 
     * is populated to allow for situations where quantity may not 
     * be known and thus null flavor must be specified.</p>
     * 
     * <p>The amount of the drug product administered to/by the 
     * patient.</p>
     */
    @Hl7XmlMapping({"doseQuantity"})
    public PhysicalQuantity getDoseQuantity() {
        return this.doseQuantity.getValue();
    }

    /**
     * <p>Business Name: Quantity Administered</p>
     * 
     * <p>Relationship: POIZ_MT030050AB.Immunization.doseQuantity</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Useful for evaluating reaction, evaluating vaccine 
     * failure and for checking contraindication.</p><p>Attribute 
     * is populated to allow for situations where quantity may not 
     * be known and thus null flavor must be specified.</p>
     * 
     * <p>The amount of the drug product administered to/by the 
     * patient.</p>
     */
    public void setDoseQuantity(PhysicalQuantity doseQuantity) {
        this.doseQuantity.setValue(doseQuantity);
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.Subject10.patient</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"subject/patient"})
    public PatientBean getSubjectPatient() {
        return this.subjectPatient;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.Subject10.patient</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setSubjectPatient(PatientBean subjectPatient) {
        this.subjectPatient = subjectPatient;
    }


    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.AdministerableMedicine.administrableVaccine</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"consumable/administerableMedicine/administrableVaccine"})
    public VaccineBean getConsumableAdministerableMedicineAdministrableVaccine() {
        return this.consumableAdministerableMedicineAdministrableVaccine;
    }

    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.AdministerableMedicine.administrableVaccine</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setConsumableAdministerableMedicineAdministrableVaccine(VaccineBean consumableAdministerableMedicineAdministrableVaccine) {
        this.consumableAdministerableMedicineAdministrableVaccine = consumableAdministerableMedicineAdministrableVaccine;
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.Performer.assignedEntity</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"performer/assignedEntity"})
    public HealthcareWorkerBean getPerformerAssignedEntity() {
        return this.performerAssignedEntity;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.Performer.assignedEntity</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setPerformerAssignedEntity(HealthcareWorkerBean performerAssignedEntity) {
        this.performerAssignedEntity = performerAssignedEntity;
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.Author.assignedEntity</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"author/assignedEntity"})
    public HealthcareWorkerBean getAuthorAssignedEntity() {
        return this.authorAssignedEntity;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.Author.assignedEntity</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setAuthorAssignedEntity(HealthcareWorkerBean authorAssignedEntity) {
        this.authorAssignedEntity = authorAssignedEntity;
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.Immunization.location</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"location"})
    public LocationBean getLocation() {
        return this.location;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.Immunization.location</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setLocation(LocationBean location) {
        this.location = location;
    }


    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.Predecessor.oldImmunizationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"predecessor/oldImmunizationEvent"})
    public OldImmunizationEventBean getPredecessorOldImmunizationEvent() {
        return this.predecessorOldImmunizationEvent;
    }

    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.Predecessor.oldImmunizationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setPredecessorOldImmunizationEvent(OldImmunizationEventBean predecessorOldImmunizationEvent) {
        this.predecessorOldImmunizationEvent = predecessorOldImmunizationEvent;
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.Immunization.reason</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"reason"})
    public ReasonBean getReason() {
        return this.reason;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.Immunization.reason</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setReason(ReasonBean reason) {
        this.reason = reason;
    }


    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.PertinentInformation.patientImmunizationObservations</p>
     * 
     * <p>Conformance/Cardinality: POPULATED (1)</p>
     */
    @Hl7XmlMapping({"pertinentInformation/patientImmunizationObservations"})
    public List<PatientImmunizationObservationsBean> getPertinentInformationPatientImmunizationObservations() {
        return this.pertinentInformationPatientImmunizationObservations;
    }


    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.Predecessor2.newImmunizationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"successor/newImmunizationEvent"})
    public NewImmunizationEventIDBean getSuccessorNewImmunizationEvent() {
        return this.successorNewImmunizationEvent;
    }

    /**
     * <p>Relationship: 
     * POIZ_MT030050AB.Predecessor2.newImmunizationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setSuccessorNewImmunizationEvent(NewImmunizationEventIDBean successorNewImmunizationEvent) {
        this.successorNewImmunizationEvent = successorNewImmunizationEvent;
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.Subject2.annotation</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"subjectOf/annotation"})
    public NotesBean getSubjectOfAnnotation() {
        return this.subjectOfAnnotation;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.Subject2.annotation</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setSubjectOfAnnotation(NotesBean subjectOfAnnotation) {
        this.subjectOfAnnotation = subjectOfAnnotation;
    }


    /**
     * <p>Relationship: POIZ_MT030050AB.CauseOf.investigationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"cause/investigationEvent"})
    public InvestigationEventBean getCauseInvestigationEvent() {
        return this.causeInvestigationEvent;
    }

    /**
     * <p>Relationship: POIZ_MT030050AB.CauseOf.investigationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setCauseInvestigationEvent(InvestigationEventBean causeInvestigationEvent) {
        this.causeInvestigationEvent = causeInvestigationEvent;
    }

}
