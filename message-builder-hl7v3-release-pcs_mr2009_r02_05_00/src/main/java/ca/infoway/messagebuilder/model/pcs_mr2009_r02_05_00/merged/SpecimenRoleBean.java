/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pcs_mr2009_r02_05_00.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.pcs_mr2009_r02_05_00.common.coct_mt080100ca.SpecimenCollectionProcedureBean;
import ca.infoway.messagebuilder.model.pcs_mr2009_r02_05_00.common.coct_mt080100ca.SpecimenProcessStepsBean;
import java.util.ArrayList;
import java.util.List;



/**
 * <p>Business Name: SpecimenRole</p>
 * 
 * <p>COCT_MT080100CA.Specimen: Specimen Role</p>
 * 
 * <p>The specimen role represents the information regarding a 
 * material collected from a patient to serve as a specimen for 
 * testing.</p>
 */
@Hl7PartTypeMapping({"COCT_MT080100CA.Specimen","REPC_MT500001CA.Specimen","REPC_MT500002CA.Specimen","REPC_MT500003CA.Specimen","REPC_MT500004CA.Specimen"})
@Hl7RootType
public class SpecimenRoleBean extends MessagePartBean {

    private static final long serialVersionUID = 20140507L;
    private SpecimenMaterialBean specimenMaterial;
    private II id = new IIImpl();
    private List<SpecimenProcessStepsBean> subjectOfTransportationEvent = new ArrayList<SpecimenProcessStepsBean>();
    private SpecimenCollectionProcedureBean productOfSpecimenCollectionProcedureEvent;


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500004CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: COCT_MT080100CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500001CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500003CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500002CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"specimenMaterial"})
    public SpecimenMaterialBean getSpecimenMaterial() {
        return this.specimenMaterial;
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500004CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: COCT_MT080100CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500001CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500003CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     * 
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: REPC_MT500002CA.Specimen.specimenMaterial</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setSpecimenMaterial(SpecimenMaterialBean specimenMaterial) {
        this.specimenMaterial = specimenMaterial;
    }


    /**
     * <p>Business Name: SpecimenIdentifier</p>
     * 
     * <p>Un-merged Business Name: SpecimenIdentifier</p>
     * 
     * <p>Relationship: COCT_MT080100CA.Specimen.id</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>A unique specimen identifier is necessary for specimen 
     * tracking and management.</p>
     * 
     * <p>A unique identifier for the specimen. Frequently the 
     * accession number which often uniquely identifies the 
     * specimen is used as the unique specimen identifier in 
     * communications. However, accessioning may group multiple 
     * specimens (identified) under one accession number. 
     * Therefore, it is recommended that this be truly the specimen 
     * identifier and not the accession number.</p><p>For a 
     * referral, this attribute should be Required so it is 
     * reflected back in the result. If Lab A has collected and or 
     * done something to the specimen, then the identifier would be 
     * sent.</p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }

    /**
     * <p>Business Name: SpecimenIdentifier</p>
     * 
     * <p>Un-merged Business Name: SpecimenIdentifier</p>
     * 
     * <p>Relationship: COCT_MT080100CA.Specimen.id</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (0-1)</p>
     * 
     * <p>A unique specimen identifier is necessary for specimen 
     * tracking and management.</p>
     * 
     * <p>A unique identifier for the specimen. Frequently the 
     * accession number which often uniquely identifies the 
     * specimen is used as the unique specimen identifier in 
     * communications. However, accessioning may group multiple 
     * specimens (identified) under one accession number. 
     * Therefore, it is recommended that this be truly the specimen 
     * identifier and not the accession number.</p><p>For a 
     * referral, this attribute should be Required so it is 
     * reflected back in the result. If Lab A has collected and or 
     * done something to the specimen, then the identifier would be 
     * sent.</p>
     */
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * COCT_MT080100CA.Subject2.transportationEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"subjectOf/transportationEvent"})
    public List<SpecimenProcessStepsBean> getSubjectOfTransportationEvent() {
        return this.subjectOfTransportationEvent;
    }


    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * COCT_MT080100CA.Product.specimenCollectionProcedureEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"productOf/specimenCollectionProcedureEvent"})
    public SpecimenCollectionProcedureBean getProductOfSpecimenCollectionProcedureEvent() {
        return this.productOfSpecimenCollectionProcedureEvent;
    }

    /**
     * <p>Un-merged Business Name: (no business name specified)</p>
     * 
     * <p>Relationship: 
     * COCT_MT080100CA.Product.specimenCollectionProcedureEvent</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setProductOfSpecimenCollectionProcedureEvent(SpecimenCollectionProcedureBean productOfSpecimenCollectionProcedureEvent) {
        this.productOfSpecimenCollectionProcedureEvent = productOfSpecimenCollectionProcedureEvent;
    }

}
