/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pharmacy.porx_mt050020ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.PN;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.PNImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.PersonName;
import ca.infoway.messagebuilder.domainvalue.AdministrativeGender;
import ca.infoway.messagebuilder.domainvalue.ClinicalDrug;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.Date;



/**
 * <p>Generic Query Parameters</p>
 * 
 * <p><p>Defines the set of parameters that may be used to 
 * filter the query response.</p></p>
 * 
 * <p><p>Root class for query definition</p></p>
 */
@Hl7PartTypeMapping({"PORX_MT050020CA.ParameterList"})
@Hl7RootType
public class GenericQueryParametersBean extends MessagePartBean {

    private static final long serialVersionUID = 20120320L;
    private CV drugCodeValue = new CVImpl();
    private TS patientBirthDateValue = new TSImpl();
    private CV patientGenderValue = new CVImpl();
    private II patientIDValue = new IIImpl();
    private PN patientNameValue = new PNImpl();


    /**
     * <p>E:Drug Code</p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those contraindications pertaining to the 
     * specified drug.</p><p>The code may refer to an 
     * administerable medication, an orderable medication or a 
     * higher level drug classification.</p><p>The contraindication 
     * records retrieve would comprise the drug-drug interactions 
     * between this specified and each of the drugs on the 
     * patient's profile, as well as drug-disease and drug-allergy 
     * contraindications that might result (based on the 
     * information on the patient's profile).</p></p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those contraindications pertaining to the 
     * specified drug.</p><p>The code may refer to an 
     * administerable medication, an orderable medication or a 
     * higher level drug classification.</p><p>The contraindication 
     * records retrieve would comprise the drug-drug interactions 
     * between this specified and each of the drugs on the 
     * patient's profile, as well as drug-disease and drug-allergy 
     * contraindications that might result (based on the 
     * information on the patient's profile).</p></p>
     * 
     * <p><p>Indicates that the result set is to be filtered to 
     * include only those contraindications pertaining to the 
     * specified drug.</p><p>The code may refer to an 
     * administerable medication, an orderable medication or a 
     * higher level drug classification.</p><p>The contraindication 
     * records retrieve would comprise the drug-drug interactions 
     * between this specified and each of the drugs on the 
     * patient's profile, as well as drug-disease and drug-allergy 
     * contraindications that might result (based on the 
     * information on the patient's profile).</p></p>
     * 
     * <p><p>Allows for the retrieval of all potential 
     * contraindications based on a specific medication being 
     * introduced onto the patient's medication profile. 
     * Contraindications can't be found without specifying the 
     * medication, therefore this attribute is 
     * mandatory.</p><p>This will most commonly be used by 
     * providers to test the viability of prescribing/dispensing a 
     * medication to a patient (in view of the patient's existing 
     * medication profile).</p></p>
     * 
     * <p><p>Allows for the retrieval of all potential 
     * contraindications based on a specific medication being 
     * introduced onto the patient's medication profile. 
     * Contraindications can't be found without specifying the 
     * medication, therefore this attribute is 
     * mandatory.</p><p>This will most commonly be used by 
     * providers to test the viability of prescribing/dispensing a 
     * medication to a patient (in view of the patient's existing 
     * medication profile).</p></p>
     */
    @Hl7XmlMapping({"drugCode/value"})
    public ClinicalDrug getDrugCodeValue() {
        return (ClinicalDrug) this.drugCodeValue.getValue();
    }
    public void setDrugCodeValue(ClinicalDrug drugCodeValue) {
        this.drugCodeValue.setValue(drugCodeValue);
    }


    /**
     * <p>D:Patient Birth Date</p>
     * 
     * <p><p>Indicates the date on which the patient was born.</p></p>
     * 
     * <p><p>Used to confirm the identity of the patient for the 
     * query and is therefore mandatory.</p></p>
     */
    @Hl7XmlMapping({"patientBirthDate/value"})
    public Date getPatientBirthDateValue() {
        return this.patientBirthDateValue.getValue();
    }
    public void setPatientBirthDateValue(Date patientBirthDateValue) {
        this.patientBirthDateValue.setValue(patientBirthDateValue);
    }


    /**
     * <p>C:Patient Gender</p>
     * 
     * <p><p>Indicates the gender (sex) of the patient.</p></p>
     * 
     * <p><p>Used to confirm the identity of the patient for the 
     * query and is therefore mandatory.</p></p>
     */
    @Hl7XmlMapping({"patientGender/value"})
    public AdministrativeGender getPatientGenderValue() {
        return (AdministrativeGender) this.patientGenderValue.getValue();
    }
    public void setPatientGenderValue(AdministrativeGender patientGenderValue) {
        this.patientGenderValue.setValue(patientGenderValue);
    }


    /**
     * <p>B:Patient ID</p>
     * 
     * <p><p>Identifier of the patient who is the subject of the 
     * patient drug contraindication query. Filter the result set 
     * to include only those records pertaining to the patient with 
     * this Id.</p></p>
     * 
     * <p><p>Allows filtering of result set by patient Id. This is 
     * a mandatory field because a patient must be specified for 
     * the query to be valid</p></p>
     */
    @Hl7XmlMapping({"patientID/value"})
    public Identifier getPatientIDValue() {
        return this.patientIDValue.getValue();
    }
    public void setPatientIDValue(Identifier patientIDValue) {
        this.patientIDValue.setValue(patientIDValue);
    }


    /**
     * <p>C:Patient Name</p>
     * 
     * <p><p>The name of the patient who is the subject of the drug 
     * contraindication query.</p><p>Filter the result set to 
     * include only those records pertaining to the patient with 
     * this name.</p></p>
     * 
     * <p><p>The name of the patient who is the subject of the drug 
     * contraindication query.</p><p>Filter the result set to 
     * include only those records pertaining to the patient with 
     * this name.</p></p>
     * 
     * <p><p>Allows filtering of result set by patient name. This 
     * is a mandatory field because a patient name must match the 
     * patient Id for the query to be valid.</p></p>
     */
    @Hl7XmlMapping({"patientName/value"})
    public PersonName getPatientNameValue() {
        return this.patientNameValue.getValue();
    }
    public void setPatientNameValue(PersonName patientNameValue) {
        this.patientNameValue.setValue(patientNameValue);
    }

}
