/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.porx_mt060100ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.coct_mt090107ca.ProviderBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.RecordedAtBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.SubstanceAdministrationRequestBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.SupplyEventBean;



/**
 * <p>Dispense</p>
 * 
 * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Describes 
 * the issuing of a drug in response to an authorizing 
 * prescription.</p></p>
 * 
 * <p><p xmlns:html="http://www.w3.org/1999/xhtml">This is a 
 * 'core' class of the medication model and is important for 
 * understanding what drugs the patient is actually 
 * receiving.</p></p>
 */
@Hl7PartTypeMapping({"PORX_MT060100CA.MedicationDispense"})
@Hl7RootType
public class DispenseBean extends MessagePartBean {

    private static final long serialVersionUID = 20110714L;
    private II id = new IIImpl();
    private CS dispenseStatus = new CSImpl();
    private CV prescriptionMaskingIndicator = new CVImpl();
    private SupplyEventBean component1SupplyEvent;
    private ST renderedDosageInstruction = new STImpl();
    private SubstanceAdministrationRequestBean fulfillmentSubstanceAdministrationRequest;
    private RecordedAtBean location;
    private ProviderBean performerAssignedPerson;
    private ProviderBean responsiblePartyAssignedPerson;
    private BL subjectOf1DetectedIssueIndicator = new BLImpl(false);
    private BL subjectOf2AnnotationIndicator = new BLImpl(false);


    /**
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">The 
     * Prescription Dispense Number is a globally unique number 
     * assigned to a prescription dispense by the EHR/DIS 
     * irrespective of the source of the supply event</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">It is created by 
     * the EHR/DIS once the dispense has passed all edits and 
     * validation.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">The 
     * Prescription Dispense Number is a globally unique number 
     * assigned to a prescription dispense by the EHR/DIS 
     * irrespective of the source of the supply event</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">It is created by 
     * the EHR/DIS once the dispense has passed all edits and 
     * validation.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows 
     * dispense events to be uniquely referenced and is therefore 
     * mandatory.</p></p>
     * 
     * <p><p><strong>The Prescription Dispense Number is a globally 
     * unique number assigned to a dispense (single fill) by PIN 
     * irrespective of the source of the dispense.</strong></p></p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getId() {
        return this.id.getValue();
    }
    public void setId(Identifier id) {
        this.id.setValue(id);
    }


    /**
     * <p>C:Dispense Status</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Indicates 
     * whether the dispense has been picked up ('complete') or has 
     * just been processed ('active').</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Indicates 
     * how far along the process the dispense event is. It should 
     * always be known and is therefore mandatory.</p></p>
     */
    @Hl7XmlMapping({"statusCode"})
    public ActStatus getDispenseStatus() {
        return (ActStatus) this.dispenseStatus.getValue();
    }
    public void setDispenseStatus(ActStatus dispenseStatus) {
        this.dispenseStatus.setValue(dispenseStatus);
    }


    /**
     * <p>E:Prescription Masking Indicator</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Communicates 
     * the intent of the patient to restrict access to their 
     * prescriptions.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Provides support 
     * for additional confidentiality constraint, giving patients a 
     * level of control over their information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Valid values are: 
     * 'NORMAL' (denotes 'Not Masked'); and 'RESTRICTED' (denotes 
     * 'Masked').</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The default is 
     * 'NORMAL' signifying 'Not Masked'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Communicates 
     * the intent of the patient to restrict access to their 
     * prescriptions.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Provides support 
     * for additional confidentiality constraint, giving patients a 
     * level of control over their information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Valid values are: 
     * 'NORMAL' (denotes 'Not Masked'); and 'RESTRICTED' (denotes 
     * 'Masked').</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The default is 
     * 'NORMAL' signifying 'Not Masked'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Communicates 
     * the intent of the patient to restrict access to their 
     * prescriptions.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Provides support 
     * for additional confidentiality constraint, giving patients a 
     * level of control over their information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Valid values are: 
     * 'NORMAL' (denotes 'Not Masked'); and 'RESTRICTED' (denotes 
     * 'Masked').</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The default is 
     * 'NORMAL' signifying 'Not Masked'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Communicates 
     * the intent of the patient to restrict access to their 
     * prescriptions.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Provides support 
     * for additional confidentiality constraint, giving patients a 
     * level of control over their information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Valid values are: 
     * 'NORMAL' (denotes 'Not Masked'); and 'RESTRICTED' (denotes 
     * 'Masked').</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The default is 
     * 'NORMAL' signifying 'Not Masked'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows the 
     * patient to have discrete control over access to their 
     * medication data.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The attribute is 
     * optional because not all systems will support masking.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows the 
     * patient to have discrete control over access to their 
     * medication data.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The attribute is 
     * optional because not all systems will support masking.</p></p>
     */
    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getPrescriptionMaskingIndicator() {
        return (x_VeryBasicConfidentialityKind) this.prescriptionMaskingIndicator.getValue();
    }
    public void setPrescriptionMaskingIndicator(x_VeryBasicConfidentialityKind prescriptionMaskingIndicator) {
        this.prescriptionMaskingIndicator.setValue(prescriptionMaskingIndicator);
    }


    @Hl7XmlMapping({"component1/supplyEvent"})
    public SupplyEventBean getComponent1SupplyEvent() {
        return this.component1SupplyEvent;
    }
    public void setComponent1SupplyEvent(SupplyEventBean component1SupplyEvent) {
        this.component1SupplyEvent = component1SupplyEvent;
    }


    /**
     * <p>Rendered Dosage Instruction</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">A free form 
     * textual specification generated from the input 
     * specifications as created by the provider.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">This is made up of 
     * either an 'Ad-hoc dosage instruction' or 'Textual rendition 
     * of the structured dosage lines', plus route, dosage unit, 
     * and other pertinent administration information specified by 
     * the provider.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">A free form 
     * textual specification generated from the input 
     * specifications as created by the provider.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">This is made up of 
     * either an 'Ad-hoc dosage instruction' or 'Textual rendition 
     * of the structured dosage lines', plus route, dosage unit, 
     * and other pertinent administration information specified by 
     * the provider.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows the 
     * provider to verify the codified structured dosage 
     * information entered and ensure that the exploded instruction 
     * is consistent with the intended instructions.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Also useful in 
     * bringing back administration instructions on query 
     * responses. Because all prescriptions and dispenses have 
     * dosage, this attribute is mandatory.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows the 
     * provider to verify the codified structured dosage 
     * information entered and ensure that the exploded instruction 
     * is consistent with the intended instructions.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Also useful in 
     * bringing back administration instructions on query 
     * responses. Because all prescriptions and dispenses have 
     * dosage, this attribute is mandatory.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">For dosage 
     * instructions which cannot be summarized in the space 
     * allocated, a string such as &quot;Complex dose&quot; or 
     * &quot;Scaling dose&quot; or something similar should be 
     * sent. Dosage instructions should never be truncated.</p></p>
     */
    @Hl7XmlMapping({"component2/administrationInstructions/text"})
    public String getRenderedDosageInstruction() {
        return this.renderedDosageInstruction.getValue();
    }
    public void setRenderedDosageInstruction(String renderedDosageInstruction) {
        this.renderedDosageInstruction.setValue(renderedDosageInstruction);
    }


    @Hl7XmlMapping({"fulfillment/substanceAdministrationRequest"})
    public SubstanceAdministrationRequestBean getFulfillmentSubstanceAdministrationRequest() {
        return this.fulfillmentSubstanceAdministrationRequest;
    }
    public void setFulfillmentSubstanceAdministrationRequest(SubstanceAdministrationRequestBean fulfillmentSubstanceAdministrationRequest) {
        this.fulfillmentSubstanceAdministrationRequest = fulfillmentSubstanceAdministrationRequest;
    }


    @Hl7XmlMapping({"location"})
    public RecordedAtBean getLocation() {
        return this.location;
    }
    public void setLocation(RecordedAtBean location) {
        this.location = location;
    }


    @Hl7XmlMapping({"performer/assignedPerson"})
    public ProviderBean getPerformerAssignedPerson() {
        return this.performerAssignedPerson;
    }
    public void setPerformerAssignedPerson(ProviderBean performerAssignedPerson) {
        this.performerAssignedPerson = performerAssignedPerson;
    }


    @Hl7XmlMapping({"responsibleParty/assignedPerson"})
    public ProviderBean getResponsiblePartyAssignedPerson() {
        return this.responsiblePartyAssignedPerson;
    }
    public void setResponsiblePartyAssignedPerson(ProviderBean responsiblePartyAssignedPerson) {
        this.responsiblePartyAssignedPerson = responsiblePartyAssignedPerson;
    }


    @Hl7XmlMapping({"subjectOf1/detectedIssueIndicator"})
    public Boolean getSubjectOf1DetectedIssueIndicator() {
        return this.subjectOf1DetectedIssueIndicator.getValue();
    }
    public void setSubjectOf1DetectedIssueIndicator(Boolean subjectOf1DetectedIssueIndicator) {
        this.subjectOf1DetectedIssueIndicator.setValue(subjectOf1DetectedIssueIndicator);
    }


    @Hl7XmlMapping({"subjectOf2/annotationIndicator"})
    public Boolean getSubjectOf2AnnotationIndicator() {
        return this.subjectOf2AnnotationIndicator.getValue();
    }
    public void setSubjectOf2AnnotationIndicator(Boolean subjectOf2AnnotationIndicator) {
        this.subjectOf2AnnotationIndicator.setValue(subjectOf2AnnotationIndicator);
    }

}
