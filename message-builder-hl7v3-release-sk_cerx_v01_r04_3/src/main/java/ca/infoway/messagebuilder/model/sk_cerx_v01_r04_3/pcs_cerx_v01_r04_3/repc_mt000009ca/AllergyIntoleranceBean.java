/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.repc_mt000009ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.BL;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.BLImpl;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.ActUncertainty;
import ca.infoway.messagebuilder.domainvalue.IntoleranceValue;
import ca.infoway.messagebuilder.domainvalue.ObservationIntoleranceType;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.coct_mt090107ca.ProviderBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.AllergyIntoleranceSeverityLevelBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.AllergyTestsBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.CommentBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.MedicalConditionStatusChangesBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.Patient_1Bean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.ReactionAssessmentsBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.RecordedAtBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.Records;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.RefusedByBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.ReportedByBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Allergy/Intolerance</p>
 * 
 * <p><p xmlns:html="http://www.w3.org/1999/xhtml">A record of 
 * a patient's allergy or intolerance.</p></p>
 * 
 * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Necessary 
 * component of a person's overall medication and clinical 
 * profile. Helps with drug contraindication checking.</p></p>
 */
@Hl7PartTypeMapping({"REPC_MT000009CA.IntoleranceCondition"})
@Hl7RootType
public class AllergyIntoleranceBean extends MessagePartBean {

    private static final long serialVersionUID = 20110621L;
    private II allergyIntoleranceRecordId = new IIImpl();
    private CD allergyIntoleranceType = new CDImpl();
    private BL allergyIntoleranceRefuted = new BLImpl();
    private CS allergyIntoleranceStatus = new CSImpl();
    private TS allergyIntoleranceDate = new TSImpl();
    private CV allergyIntoleranceMaskingIndicator = new CVImpl();
    private CV confirmedIndicator = new CVImpl();
    private CV value = new CVImpl();
    private RefusedByBean author;
    private ReportedByBean informant;
    private RecordedAtBean location;
    private AllergyIntoleranceBean replacementOfIntoleranceCondition;
    private ProviderBean responsiblePartyAssignedPerson;
    private Patient_1Bean subjectPatient;
    private List<MedicalConditionStatusChangesBean> subjectOf1ControlActEvent = new ArrayList<MedicalConditionStatusChangesBean>();
    private List<CommentBean> subjectOf2Annotation = new ArrayList<CommentBean>();
    private AllergyIntoleranceSeverityLevelBean subjectOf3SeverityObservation;
    private List<Records> supportRecords = new ArrayList<Records>();


    /**
     * <p>D:Allergy/Intolerance Record Id</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Unique 
     * identifier for an allergy/intolerance record.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows for 
     * direct referencing of an allergy/intolerance record when 
     * querying or performing updates and is therefore 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getAllergyIntoleranceRecordId() {
        return this.allergyIntoleranceRecordId.getValue();
    }
    public void setAllergyIntoleranceRecordId(Identifier allergyIntoleranceRecordId) {
        this.allergyIntoleranceRecordId.setValue(allergyIntoleranceRecordId);
    }


    /**
     * <p>A:Allergy/Intolerance Type</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">A coded 
     * value denoting whether the record pertains to an intolerance 
     * or a true allergy. (Allergies result from immunologic 
     * reactions. Intolerances do not.)</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows for 
     * the separation of allergy and intolerance records. The type 
     * of condition is critical to understanding the record and is 
     * therefore mandatory. It is expressed as a CD to allow for 
     * SNOMED post-coordination.</p></p>
     */
    @Hl7XmlMapping({"code"})
    public ObservationIntoleranceType getAllergyIntoleranceType() {
        return (ObservationIntoleranceType) this.allergyIntoleranceType.getValue();
    }
    public void setAllergyIntoleranceType(ObservationIntoleranceType allergyIntoleranceType) {
        this.allergyIntoleranceType.setValue(allergyIntoleranceType);
    }


    /**
     * <p>G:Allergy/Intolerance Refuted</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">An 
     * indication that the allergy/intolerance has been refuted. 
     * I.e. A clinician has positively determined that the patient 
     * does not suffer from a particular allergy or 
     * intolerance.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows 
     * providers to refute a previously confirmed or suspected 
     * allergy. Because it is essential to know whether the record 
     * refutes or affirms an allergy, this attribute is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"negationInd"})
    public Boolean getAllergyIntoleranceRefuted() {
        return this.allergyIntoleranceRefuted.getValue();
    }
    public void setAllergyIntoleranceRefuted(Boolean allergyIntoleranceRefuted) {
        this.allergyIntoleranceRefuted.setValue(allergyIntoleranceRefuted);
    }


    /**
     * <p>E:Allergy/Intolerance Status</p>
     * 
     * <p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">&quot;Identifies 
     * what kind of change occurred. Allergy/Intolerance change 
     * types are Revise, Reactivate and Complete</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows 
     * providers to evaluate the relevance of a recorded 
     * allergy/intolerance. The status has a default value of 
     * 'active' and is therefore mandatory.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">System must 
     * default the status to 'ACTIVE'.</p></p>
     */
    @Hl7XmlMapping({"statusCode"})
    public ActStatus getAllergyIntoleranceStatus() {
        return (ActStatus) this.allergyIntoleranceStatus.getValue();
    }
    public void setAllergyIntoleranceStatus(ActStatus allergyIntoleranceStatus) {
        this.allergyIntoleranceStatus.setValue(allergyIntoleranceStatus);
    }


    /**
     * <p>I:Allergy/Intolerance Date</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">The date on 
     * which the recorded allergy is considered active.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows 
     * providers to evaluate the period of relevance for the 
     * allergy/intolerance record.</p></p>
     */
    @Hl7XmlMapping({"effectiveTime"})
    public Date getAllergyIntoleranceDate() {
        return this.allergyIntoleranceDate.getValue();
    }
    public void setAllergyIntoleranceDate(Date allergyIntoleranceDate) {
        this.allergyIntoleranceDate.setValue(allergyIntoleranceDate);
    }


    /**
     * <p>H:Allergy/Intolerance Masking Indicator</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Denotes 
     * access restriction placed on the allergy or intolerance 
     * record. Methods for accessing masked allergy records will be 
     * governed by each jurisdiction (e.g. court orders, shared 
     * secret/consent, etc.). The default confidentiality level is 
     * 'NORMAL'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Provides 
     * support for additional confidentiality constraint to reflect 
     * the wishes of the patient.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The attribute is 
     * optional because not all systems will support masking.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Provides 
     * support for additional confidentiality constraint to reflect 
     * the wishes of the patient.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The attribute is 
     * optional because not all systems will support masking.</p></p>
     */
    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getAllergyIntoleranceMaskingIndicator() {
        return (x_VeryBasicConfidentialityKind) this.allergyIntoleranceMaskingIndicator.getValue();
    }
    public void setAllergyIntoleranceMaskingIndicator(x_VeryBasicConfidentialityKind allergyIntoleranceMaskingIndicator) {
        this.allergyIntoleranceMaskingIndicator.setValue(allergyIntoleranceMaskingIndicator);
    }


    /**
     * <p>F:Confirmed Indicator</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">An 
     * indication of the level of confidence/surety placed in the 
     * recorded information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The two valid 
     * confirmation statuses are&quot; 'CONFIRMED' and 
     * 'SUSPECTED'.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">An allergy or 
     * intolerance record is always used in drug contraindication 
     * checking whether the record is tagged as 'confirmed' or 
     * 'suspected'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">An 
     * indication of the level of confidence/surety placed in the 
     * recorded information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The two valid 
     * confirmation statuses are&quot; 'CONFIRMED' and 
     * 'SUSPECTED'.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">An allergy or 
     * intolerance record is always used in drug contraindication 
     * checking whether the record is tagged as 'confirmed' or 
     * 'suspected'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">An 
     * indication of the level of confidence/surety placed in the 
     * recorded information.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">The two valid 
     * confirmation statuses are&quot; 'CONFIRMED' and 
     * 'SUSPECTED'.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">An allergy or 
     * intolerance record is always used in drug contraindication 
     * checking whether the record is tagged as 'confirmed' or 
     * 'suspected'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Helps other 
     * providers to make appropriate decisions in their management 
     * of allergy or intolerance contraindications.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Attribute is 
     * mandatory because an allergy or intolerance record must be 
     * tagged as either 'confirmed' or 'suspected'.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Helps other 
     * providers to make appropriate decisions in their management 
     * of allergy or intolerance contraindications.</p><p 
     * xmlns:html="http://www.w3.org/1999/xhtml">Attribute is 
     * mandatory because an allergy or intolerance record must be 
     * tagged as either 'confirmed' or 'suspected'.</p></p>
     */
    @Hl7XmlMapping({"uncertaintyCode"})
    public ActUncertainty getConfirmedIndicator() {
        return (ActUncertainty) this.confirmedIndicator.getValue();
    }
    public void setConfirmedIndicator(ActUncertainty confirmedIndicator) {
        this.confirmedIndicator.setValue(confirmedIndicator);
    }


    /**
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Indicates 
     * the substance to which the patient is allergic</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Critical for 
     * identifying the allergy or intolerance. However, because the 
     * attribute is not used for SNOMED, it is optional.</p></p>
     * 
     * <p><p><strong>Because PIN is not using SNOMED, this 
     * attribute is mandatory.</strong></p></p>
     */
    @Hl7XmlMapping({"value"})
    public IntoleranceValue getValue() {
        return (IntoleranceValue) this.value.getValue();
    }
    public void setValue(IntoleranceValue value) {
        this.value.setValue(value);
    }


    @Hl7XmlMapping({"author"})
    public RefusedByBean getAuthor() {
        return this.author;
    }
    public void setAuthor(RefusedByBean author) {
        this.author = author;
    }


    @Hl7XmlMapping({"informant"})
    public ReportedByBean getInformant() {
        return this.informant;
    }
    public void setInformant(ReportedByBean informant) {
        this.informant = informant;
    }


    @Hl7XmlMapping({"location"})
    public RecordedAtBean getLocation() {
        return this.location;
    }
    public void setLocation(RecordedAtBean location) {
        this.location = location;
    }


    @Hl7XmlMapping({"replacementOf/intoleranceCondition"})
    public AllergyIntoleranceBean getReplacementOfIntoleranceCondition() {
        return this.replacementOfIntoleranceCondition;
    }
    public void setReplacementOfIntoleranceCondition(AllergyIntoleranceBean replacementOfIntoleranceCondition) {
        this.replacementOfIntoleranceCondition = replacementOfIntoleranceCondition;
    }


    @Hl7XmlMapping({"responsibleParty/assignedPerson"})
    public ProviderBean getResponsiblePartyAssignedPerson() {
        return this.responsiblePartyAssignedPerson;
    }
    public void setResponsiblePartyAssignedPerson(ProviderBean responsiblePartyAssignedPerson) {
        this.responsiblePartyAssignedPerson = responsiblePartyAssignedPerson;
    }


    @Hl7XmlMapping({"subject/patient"})
    public Patient_1Bean getSubjectPatient() {
        return this.subjectPatient;
    }
    public void setSubjectPatient(Patient_1Bean subjectPatient) {
        this.subjectPatient = subjectPatient;
    }


    @Hl7XmlMapping({"subjectOf1/controlActEvent"})
    public List<MedicalConditionStatusChangesBean> getSubjectOf1ControlActEvent() {
        return this.subjectOf1ControlActEvent;
    }


    @Hl7XmlMapping({"subjectOf2/annotation"})
    public List<CommentBean> getSubjectOf2Annotation() {
        return this.subjectOf2Annotation;
    }


    @Hl7XmlMapping({"subjectOf3/severityObservation"})
    public AllergyIntoleranceSeverityLevelBean getSubjectOf3SeverityObservation() {
        return this.subjectOf3SeverityObservation;
    }
    public void setSubjectOf3SeverityObservation(AllergyIntoleranceSeverityLevelBean subjectOf3SeverityObservation) {
        this.subjectOf3SeverityObservation = subjectOf3SeverityObservation;
    }


    @Hl7XmlMapping({"support/records"})
    public List<Records> getSupportRecords() {
        return this.supportRecords;
    }

}
