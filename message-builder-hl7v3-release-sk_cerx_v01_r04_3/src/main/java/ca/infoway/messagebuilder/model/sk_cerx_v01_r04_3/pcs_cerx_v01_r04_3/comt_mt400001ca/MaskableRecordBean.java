/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.comt_mt400001ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.domainvalue.ActInformationCategoryCode;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.sk_cerx_v01_r04_3.pcs_cerx_v01_r04_3.merged.Patient_1Bean;



/**
 * <p>Maskable Record</p>
 * 
 * <p><p xmlns:html="http://www.w3.org/1999/xhtml">A particular 
 * record or type of record for which masking is supported.</p></p>
 * 
 * <p><p xmlns:html="http://www.w3.org/1999/xhtml">The root 
 * construct for masking and unmasking specific record or type 
 * of record.</p></p>
 */
@Hl7PartTypeMapping({"COMT_MT400001CA.MaskableActType"})
@Hl7RootType
public class MaskableRecordBean extends MessagePartBean {

    private static final long serialVersionUID = 20110714L;
    private II recordIdentifier = new IIImpl();
    private CV recordType = new CVImpl();
    private CV maskedIndicator = new CVImpl();
    private RoleBean directTargetRole;
    private DiagnosisBean reasonDiagnosis;
    private Patient_1Bean recordTargetPatient;


    /**
     * <p>C:Record Identifier</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">The 
     * identifier of the prescription, dispense, allergy, lab test 
     * result or other record for which the masking status is being 
     * changed.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows 
     * unique reference to a particular record to be masked or 
     * unmasked.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">In many 
     * systems, masking a 'child' may result in automatic masking 
     * of the parent. For example, masking a dispense record may 
     * cause the prescription to become masked as well.</p></p>
     */
    @Hl7XmlMapping({"id"})
    public Identifier getRecordIdentifier() {
        return this.recordIdentifier.getValue();
    }
    public void setRecordIdentifier(Identifier recordIdentifier) {
        this.recordIdentifier.setValue(recordIdentifier);
    }


    /**
     * <p>B:Record Type</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Indicates a 
     * detailed type of record to be masked. E.g. All lab tests of 
     * a given type.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Allows 
     * automatic masking of a particular type of record rather than 
     * requiring each occurrence to be masked individually.</p></p>
     */
    @Hl7XmlMapping({"code"})
    public ActInformationCategoryCode getRecordType() {
        return (ActInformationCategoryCode) this.recordType.getValue();
    }
    public void setRecordType(ActInformationCategoryCode recordType) {
        this.recordType.setValue(recordType);
    }


    /**
     * <p>A:Masked Indicator</p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Indicates 
     * the new value for the masking status of the item.</p></p>
     * 
     * <p><p xmlns:html="http://www.w3.org/1999/xhtml">Forces the 
     * sender of the message to assert what the new value should 
     * be, rather than performing a 'toggle' and potentially ending 
     * up in the wrong state. Therefore, the attribute is 
     * mandatory.</p></p>
     */
    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getMaskedIndicator() {
        return (x_VeryBasicConfidentialityKind) this.maskedIndicator.getValue();
    }
    public void setMaskedIndicator(x_VeryBasicConfidentialityKind maskedIndicator) {
        this.maskedIndicator.setValue(maskedIndicator);
    }


    @Hl7XmlMapping({"directTarget/role"})
    public RoleBean getDirectTargetRole() {
        return this.directTargetRole;
    }
    public void setDirectTargetRole(RoleBean directTargetRole) {
        this.directTargetRole = directTargetRole;
    }


    @Hl7XmlMapping({"reason/diagnosis"})
    public DiagnosisBean getReasonDiagnosis() {
        return this.reasonDiagnosis;
    }
    public void setReasonDiagnosis(DiagnosisBean reasonDiagnosis) {
        this.reasonDiagnosis = reasonDiagnosis;
    }


    @Hl7XmlMapping({"recordTarget/patient"})
    public Patient_1Bean getRecordTargetPatient() {
        return this.recordTargetPatient;
    }
    public void setRecordTargetPatient(Patient_1Bean recordTargetPatient) {
        this.recordTargetPatient = recordTargetPatient;
    }

}
