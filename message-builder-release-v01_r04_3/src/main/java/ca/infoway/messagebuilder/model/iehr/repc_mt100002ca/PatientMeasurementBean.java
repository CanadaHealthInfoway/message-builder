/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.iehr.repc_mt100002ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.domainvalue.CommonClinicalObservationType;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt090107ca.ProviderBean;
import ca.infoway.messagebuilder.model.merged.AnnotationIndicatorBean;
import ca.infoway.messagebuilder.model.merged.ComponentMeasurementsBean;
import ca.infoway.messagebuilder.model.merged.NotesBean;
import ca.infoway.messagebuilder.model.merged.Patient_1Bean;
import ca.infoway.messagebuilder.model.merged.RecordedAtBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Patient Measurement</p>
 * 
 * <p>This comprises a single point-in-time measurement made 
 * about a patient.</p>
 * 
 * <p>Allows pertinent patient measurements to be recorded for 
 * clinical purposes.</p>
 * 
 * <p>Measurement Type with a '''nullFlavor''' value must have 
 * SubObservations Measurement Type without a '''nullFlavor''' 
 * value must not have SubObservations.</p>
 * 
 * <p>Annotation is only permitted if Annotation Indicator is 
 * not present and vice versa</p>
 */
@Hl7PartTypeMapping({"REPC_MT100002CA.CommonObservationEvent"})
@Hl7RootType
public class PatientMeasurementBean extends MessagePartBean {

    private static final long serialVersionUID = 20100614L;
    private II observationMeasurementId = new IIImpl();
    private CD measurementType = new CDImpl();
    private TS observationMeasurementTimestamp = new TSImpl();
    private CV commonObservationMaskingIndicator = new CVImpl();
    private PQ observationMeasurementValue = new PQImpl();
    private Patient_1Bean subjectPatient;
    private ProviderBean responsiblePartyAssignedPerson;
    private RecordedByBean author;
    private RecordedAtBean location;
    private List<ComponentMeasurementsBean> componentSubObservationEvent = new ArrayList<ComponentMeasurementsBean>();
    private AnnotationIndicatorBean subjectOf1AnnotationIndicator;
    private List<NotesBean> subjectOf2Annotation = new ArrayList<NotesBean>();

    @Hl7XmlMapping({"id"})
    public Identifier getObservationMeasurementId() {
        return this.observationMeasurementId.getValue();
    }
    public void setObservationMeasurementId(Identifier observationMeasurementId) {
        this.observationMeasurementId.setValue(observationMeasurementId);
    }

    @Hl7XmlMapping({"code"})
    public CommonClinicalObservationType getMeasurementType() {
        return (CommonClinicalObservationType) this.measurementType.getValue();
    }
    public void setMeasurementType(CommonClinicalObservationType measurementType) {
        this.measurementType.setValue(measurementType);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Date getObservationMeasurementTimestamp() {
        return this.observationMeasurementTimestamp.getValue();
    }
    public void setObservationMeasurementTimestamp(Date observationMeasurementTimestamp) {
        this.observationMeasurementTimestamp.setValue(observationMeasurementTimestamp);
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getCommonObservationMaskingIndicator() {
        return (x_VeryBasicConfidentialityKind) this.commonObservationMaskingIndicator.getValue();
    }
    public void setCommonObservationMaskingIndicator(x_VeryBasicConfidentialityKind commonObservationMaskingIndicator) {
        this.commonObservationMaskingIndicator.setValue(commonObservationMaskingIndicator);
    }

    @Hl7XmlMapping({"value"})
    public PhysicalQuantity getObservationMeasurementValue() {
        return this.observationMeasurementValue.getValue();
    }
    public void setObservationMeasurementValue(PhysicalQuantity observationMeasurementValue) {
        this.observationMeasurementValue.setValue(observationMeasurementValue);
    }

    @Hl7XmlMapping({"subject/patient"})
    public Patient_1Bean getSubjectPatient() {
        return this.subjectPatient;
    }
    public void setSubjectPatient(Patient_1Bean subjectPatient) {
        this.subjectPatient = subjectPatient;
    }

    @Hl7XmlMapping({"responsibleParty/assignedPerson"})
    public ProviderBean getResponsiblePartyAssignedPerson() {
        return this.responsiblePartyAssignedPerson;
    }
    public void setResponsiblePartyAssignedPerson(ProviderBean responsiblePartyAssignedPerson) {
        this.responsiblePartyAssignedPerson = responsiblePartyAssignedPerson;
    }

    @Hl7XmlMapping({"author"})
    public RecordedByBean getAuthor() {
        return this.author;
    }
    public void setAuthor(RecordedByBean author) {
        this.author = author;
    }

    @Hl7XmlMapping({"location"})
    public RecordedAtBean getLocation() {
        return this.location;
    }
    public void setLocation(RecordedAtBean location) {
        this.location = location;
    }

    @Hl7XmlMapping({"component/subObservationEvent"})
    public List<ComponentMeasurementsBean> getComponentSubObservationEvent() {
        return this.componentSubObservationEvent;
    }

    @Hl7XmlMapping({"subjectOf1/annotationIndicator"})
    public AnnotationIndicatorBean getSubjectOf1AnnotationIndicator() {
        return this.subjectOf1AnnotationIndicator;
    }
    public void setSubjectOf1AnnotationIndicator(AnnotationIndicatorBean subjectOf1AnnotationIndicator) {
        this.subjectOf1AnnotationIndicator = subjectOf1AnnotationIndicator;
    }

    @Hl7XmlMapping({"subjectOf2/annotation"})
    public List<NotesBean> getSubjectOf2Annotation() {
        return this.subjectOf2Annotation;
    }

}
