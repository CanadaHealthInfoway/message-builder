/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.merged;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.domainvalue.HumanLanguage;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.si.comt_mt301001ca.AnnotatesBean;



@Hl7PartTypeMapping({"COCT_MT120600CA.Annotation","COMT_MT301001CA.Annotation"})
@Hl7RootType
public class NotesBean extends MessagePartBean {

    private static final long serialVersionUID = 20100614L;
    private ST annotationText = new STImpl();
    private CV writtenIn = new CVImpl();
    private AnnotatesBean subject;
    private AuthoredByBean author;

    @Hl7XmlMapping({"text"})
    public String getAnnotationText() {
        return this.annotationText.getValue();
    }
    public void setAnnotationText(String annotationText) {
        this.annotationText.setValue(annotationText);
    }

    @Hl7XmlMapping({"languageCode"})
    public HumanLanguage getWrittenIn() {
        return (HumanLanguage) this.writtenIn.getValue();
    }
    public void setWrittenIn(HumanLanguage writtenIn) {
        this.writtenIn.setValue(writtenIn);
    }

    @Hl7XmlMapping({"subject"})
    public AnnotatesBean getSubject() {
        return this.subject;
    }
    public void setSubject(AnnotatesBean subject) {
        this.subject = subject;
    }

    @Hl7XmlMapping({"author"})
    public AuthoredByBean getAuthor() {
        return this.author;
    }
    public void setAuthor(AuthoredByBean author) {
        this.author = author;
    }

}
