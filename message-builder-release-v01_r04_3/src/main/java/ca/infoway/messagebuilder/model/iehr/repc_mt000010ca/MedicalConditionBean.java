/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.iehr.repc_mt000010ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActCode;
import ca.infoway.messagebuilder.domainvalue.ActStatus;
import ca.infoway.messagebuilder.domainvalue.DiagnosisValue;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.common.coct_mt090107ca.ProviderBean;
import ca.infoway.messagebuilder.model.merged.AuthoredByBean;
import ca.infoway.messagebuilder.model.merged.NotesBean;
import ca.infoway.messagebuilder.model.merged.Patient_1Bean;
import ca.infoway.messagebuilder.model.merged.RecordedAtBean;
import ca.infoway.messagebuilder.model.merged.ReportedByBean;
import ca.infoway.messagebuilder.model.merged.StatusChangesBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;



/**
 * <p>Medical Condition</p>
 * 
 * <p>A record of a patient's medical condition. Includes 
 * diseases, disabilities, pregnancy, lactation and other 
 * clinical conditions of interest.</p>
 * 
 * <p>Necessary component of a person's overall medication and 
 * clinical profile. Helps with contraindication checking.</p>
 * 
 * <p>Value is mandatory if not using SNOMED</p>
 * 
 * <p>Code is fixed to DX if not using SNOMED</p>
 */
@Hl7PartTypeMapping({"REPC_MT000010CA.MedicalCondition"})
@Hl7RootType
public class MedicalConditionBean extends MessagePartBean {

    private static final long serialVersionUID = 20100614L;
    private II medicalConditionRecordId = new IIImpl();
    private CD conditionType = new CDImpl();
    private CS conditionStatus = new CSImpl();
    private IVL<TS, Interval<Date>> conditionTimePeriod = new IVLImpl<TS, Interval<Date>>();
    private CV conditionMaskingIndicator = new CVImpl();
    private CV condition = new CVImpl();
    private Patient_1Bean subjectPatient;
    private ProviderBean responsiblePartyAssignedPerson;
    private AuthoredByBean author;
    private ReportedByBean informant;
    private RecordedAtBean location;
    private MedicalConditionBean replacementOfMedicalCondition;
    private List<StatusChangesBean> subjectOf1ControlActEvent = new ArrayList<StatusChangesBean>();
    private List<NotesBean> subjectOf2Annotation = new ArrayList<NotesBean>();
    private ChronicIndicatorBean subjectOf3ChronicIndicator;

    @Hl7XmlMapping({"id"})
    public Identifier getMedicalConditionRecordId() {
        return this.medicalConditionRecordId.getValue();
    }
    public void setMedicalConditionRecordId(Identifier medicalConditionRecordId) {
        this.medicalConditionRecordId.setValue(medicalConditionRecordId);
    }

    @Hl7XmlMapping({"code"})
    public ActCode getConditionType() {
        return (ActCode) this.conditionType.getValue();
    }
    public void setConditionType(ActCode conditionType) {
        this.conditionType.setValue(conditionType);
    }

    @Hl7XmlMapping({"statusCode"})
    public ActStatus getConditionStatus() {
        return (ActStatus) this.conditionStatus.getValue();
    }
    public void setConditionStatus(ActStatus conditionStatus) {
        this.conditionStatus.setValue(conditionStatus);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getConditionTimePeriod() {
        return this.conditionTimePeriod.getValue();
    }
    public void setConditionTimePeriod(Interval<Date> conditionTimePeriod) {
        this.conditionTimePeriod.setValue(conditionTimePeriod);
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getConditionMaskingIndicator() {
        return (x_VeryBasicConfidentialityKind) this.conditionMaskingIndicator.getValue();
    }
    public void setConditionMaskingIndicator(x_VeryBasicConfidentialityKind conditionMaskingIndicator) {
        this.conditionMaskingIndicator.setValue(conditionMaskingIndicator);
    }

    @Hl7XmlMapping({"value"})
    public DiagnosisValue getCondition() {
        return (DiagnosisValue) this.condition.getValue();
    }
    public void setCondition(DiagnosisValue condition) {
        this.condition.setValue(condition);
    }

    @Hl7XmlMapping({"subject/patient"})
    public Patient_1Bean getSubjectPatient() {
        return this.subjectPatient;
    }
    public void setSubjectPatient(Patient_1Bean subjectPatient) {
        this.subjectPatient = subjectPatient;
    }

    @Hl7XmlMapping({"responsibleParty/assignedPerson"})
    public ProviderBean getResponsiblePartyAssignedPerson() {
        return this.responsiblePartyAssignedPerson;
    }
    public void setResponsiblePartyAssignedPerson(ProviderBean responsiblePartyAssignedPerson) {
        this.responsiblePartyAssignedPerson = responsiblePartyAssignedPerson;
    }

    @Hl7XmlMapping({"author"})
    public AuthoredByBean getAuthor() {
        return this.author;
    }
    public void setAuthor(AuthoredByBean author) {
        this.author = author;
    }

    @Hl7XmlMapping({"informant"})
    public ReportedByBean getInformant() {
        return this.informant;
    }
    public void setInformant(ReportedByBean informant) {
        this.informant = informant;
    }

    @Hl7XmlMapping({"location"})
    public RecordedAtBean getLocation() {
        return this.location;
    }
    public void setLocation(RecordedAtBean location) {
        this.location = location;
    }

    @Hl7XmlMapping({"replacementOf/medicalCondition"})
    public MedicalConditionBean getReplacementOfMedicalCondition() {
        return this.replacementOfMedicalCondition;
    }
    public void setReplacementOfMedicalCondition(MedicalConditionBean replacementOfMedicalCondition) {
        this.replacementOfMedicalCondition = replacementOfMedicalCondition;
    }

    @Hl7XmlMapping({"subjectOf1/controlActEvent"})
    public List<StatusChangesBean> getSubjectOf1ControlActEvent() {
        return this.subjectOf1ControlActEvent;
    }

    @Hl7XmlMapping({"subjectOf2/annotation"})
    public List<NotesBean> getSubjectOf2Annotation() {
        return this.subjectOf2Annotation;
    }

    @Hl7XmlMapping({"subjectOf3/chronicIndicator"})
    public ChronicIndicatorBean getSubjectOf3ChronicIndicator() {
        return this.subjectOf3ChronicIndicator;
    }
    public void setSubjectOf3ChronicIndicator(ChronicIndicatorBean subjectOf3ChronicIndicator) {
        this.subjectOf3ChronicIndicator = subjectOf3ChronicIndicator;
    }

}
