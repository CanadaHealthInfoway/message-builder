/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.pharmacy.porx_mt980040ca;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD;
import ca.infoway.messagebuilder.datatype.CS;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.RTO;
import ca.infoway.messagebuilder.datatype.SET;
import ca.infoway.messagebuilder.datatype.ST;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CDImpl;
import ca.infoway.messagebuilder.datatype.impl.CSImpl;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.impl.RTOImpl;
import ca.infoway.messagebuilder.datatype.impl.SETImpl;
import ca.infoway.messagebuilder.datatype.impl.STImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.datatype.lang.Ratio;
import ca.infoway.messagebuilder.domainvalue.ActCode;
import ca.infoway.messagebuilder.domainvalue.AdministrableDrugForm;
import ca.infoway.messagebuilder.domainvalue.HumanSubstanceAdministrationSite;
import ca.infoway.messagebuilder.domainvalue.RouteOfAdministration;
import ca.infoway.messagebuilder.domainvalue.x_ActMoodDefEvnRqo;
import ca.infoway.messagebuilder.model.MessagePartBean;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;



/**
 * <p>Administration Instructions</p>
 * 
 * <p>This comprises all specifications necessary for the 
 * dispensed product to be administered to/by the patient in a 
 * manner as intended by the prescriber.</p>
 * 
 * <p>Allows providers to communicate intentions and to 
 * cross-check intended and actual methods of administration.</p>
 * 
 * <p>routeCode is mandatory and apporachSiteCode is required 
 * if not using SNOMED</p>
 * 
 * <p>- moodCode must be DEFN for drug definitions (such as 
 * monographs) - moodCode must be RQO for orders; - moodCode 
 * must be EVN for dispenses and recording of other medications</p>
 */
@Hl7PartTypeMapping({"PORX_MT980040CA.DosageInstruction"})
@Hl7RootType
public class AdministrationInstructionsBean extends MessagePartBean {

    private static final long serialVersionUID = 20100614L;
    private CS dosageUsageContext = new CSImpl();
    private CD dosageType = new CDImpl();
    private ST renderedDosageInstruction = new STImpl();
    private IVL<TS, Interval<Date>> administrationPeriod = new IVLImpl<TS, Interval<Date>>();
    private CV routeCode = new CVImpl();
    private SET<CV, Code> administrationSites = new SETImpl<CV, Code>(CVImpl.class);
    private SET<RTO<PhysicalQuantity, PhysicalQuantity>, Ratio<PhysicalQuantity, PhysicalQuantity>> maximumDosesPerPeriod = new SETImpl<RTO<PhysicalQuantity, PhysicalQuantity>, Ratio<PhysicalQuantity, PhysicalQuantity>>(RTOImpl.class);
    private CV dosageUnit = new CVImpl();
    private MedicationBean consumableMedication1;
    private AdditionalSIGInstructionBean component1SupplementalInstruction;
    private List<ConsistsOfBean> component2 = new ArrayList<ConsistsOfBean>();

    @Hl7XmlMapping({"moodCode"})
    public x_ActMoodDefEvnRqo getDosageUsageContext() {
        return (x_ActMoodDefEvnRqo) this.dosageUsageContext.getValue();
    }
    public void setDosageUsageContext(x_ActMoodDefEvnRqo dosageUsageContext) {
        this.dosageUsageContext.setValue(dosageUsageContext);
    }

    @Hl7XmlMapping({"code"})
    public ActCode getDosageType() {
        return (ActCode) this.dosageType.getValue();
    }
    public void setDosageType(ActCode dosageType) {
        this.dosageType.setValue(dosageType);
    }

    @Hl7XmlMapping({"text"})
    public String getRenderedDosageInstruction() {
        return this.renderedDosageInstruction.getValue();
    }
    public void setRenderedDosageInstruction(String renderedDosageInstruction) {
        this.renderedDosageInstruction.setValue(renderedDosageInstruction);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getAdministrationPeriod() {
        return this.administrationPeriod.getValue();
    }
    public void setAdministrationPeriod(Interval<Date> administrationPeriod) {
        this.administrationPeriod.setValue(administrationPeriod);
    }

    @Hl7XmlMapping({"routeCode"})
    public RouteOfAdministration getRouteCode() {
        return (RouteOfAdministration) this.routeCode.getValue();
    }
    public void setRouteCode(RouteOfAdministration routeCode) {
        this.routeCode.setValue(routeCode);
    }

    @Hl7XmlMapping({"approachSiteCode"})
    public Set<HumanSubstanceAdministrationSite> getAdministrationSites() {
        return this.administrationSites.rawSet(HumanSubstanceAdministrationSite.class);
    }

    @Hl7XmlMapping({"maxDoseQuantity"})
    public Set<Ratio<PhysicalQuantity, PhysicalQuantity>> getMaximumDosesPerPeriod() {
        return this.maximumDosesPerPeriod.rawSet();
    }

    @Hl7XmlMapping({"administrationUnitCode"})
    public AdministrableDrugForm getDosageUnit() {
        return (AdministrableDrugForm) this.dosageUnit.getValue();
    }
    public void setDosageUnit(AdministrableDrugForm dosageUnit) {
        this.dosageUnit.setValue(dosageUnit);
    }

    @Hl7XmlMapping({"consumable/medication1"})
    public MedicationBean getConsumableMedication1() {
        return this.consumableMedication1;
    }
    public void setConsumableMedication1(MedicationBean consumableMedication1) {
        this.consumableMedication1 = consumableMedication1;
    }

    @Hl7XmlMapping({"component1/supplementalInstruction"})
    public AdditionalSIGInstructionBean getComponent1SupplementalInstruction() {
        return this.component1SupplementalInstruction;
    }
    public void setComponent1SupplementalInstruction(AdditionalSIGInstructionBean component1SupplementalInstruction) {
        this.component1SupplementalInstruction = component1SupplementalInstruction;
    }

    @Hl7XmlMapping({"component2"})
    public List<ConsistsOfBean> getComponent2() {
        return this.component2;
    }

}
