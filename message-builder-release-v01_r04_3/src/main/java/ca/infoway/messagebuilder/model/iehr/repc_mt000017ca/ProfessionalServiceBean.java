/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.iehr.repc_mt000017ca;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CV;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.CVImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.TSImpl;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.domainvalue.ActProfessionalServiceCode;
import ca.infoway.messagebuilder.domainvalue.x_VeryBasicConfidentialityKind;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.merged.NotesBean;
import ca.infoway.messagebuilder.model.merged.OrderForServiceBean;
import ca.infoway.messagebuilder.model.merged.Patient_1Bean;
import java.util.Date;



/**
 * <p>Professional Service</p>
 * 
 * <p>This is the information that is recorded and maintained 
 * on a consultative service provided to a patient. This 
 * service may or may not be related to a prescribed, dispensed 
 * or administered drug.</p>
 * 
 * <p>May be pertinent information with respect to a patient's 
 * drug therapy regime.</p>
 * 
 * <p>A_BillableClinicalService</p>
 */
@Hl7PartTypeMapping({"REPC_MT000017CA.ProcedureEvent"})
@Hl7RootType
public class ProfessionalServiceBean extends MessagePartBean {

    private static final long serialVersionUID = 20100614L;
    private CV serviceCode = new CVImpl();
    private IVL<TS, Interval<Date>> consultationTimeAndLength = new IVLImpl<TS, Interval<Date>>();
    private CV professionalServiceMaskingIndicator = new CVImpl();
    private Patient_1Bean subjectPatient;
    private OrderForServiceBean inFulfillmentOfActRequest;
    private NotesBean subjectOfAnnotation;

    @Hl7XmlMapping({"code"})
    public ActProfessionalServiceCode getServiceCode() {
        return (ActProfessionalServiceCode) this.serviceCode.getValue();
    }
    public void setServiceCode(ActProfessionalServiceCode serviceCode) {
        this.serviceCode.setValue(serviceCode);
    }

    @Hl7XmlMapping({"effectiveTime"})
    public Interval<Date> getConsultationTimeAndLength() {
        return this.consultationTimeAndLength.getValue();
    }
    public void setConsultationTimeAndLength(Interval<Date> consultationTimeAndLength) {
        this.consultationTimeAndLength.setValue(consultationTimeAndLength);
    }

    @Hl7XmlMapping({"confidentialityCode"})
    public x_VeryBasicConfidentialityKind getProfessionalServiceMaskingIndicator() {
        return (x_VeryBasicConfidentialityKind) this.professionalServiceMaskingIndicator.getValue();
    }
    public void setProfessionalServiceMaskingIndicator(x_VeryBasicConfidentialityKind professionalServiceMaskingIndicator) {
        this.professionalServiceMaskingIndicator.setValue(professionalServiceMaskingIndicator);
    }

    @Hl7XmlMapping({"subject/patient"})
    public Patient_1Bean getSubjectPatient() {
        return this.subjectPatient;
    }
    public void setSubjectPatient(Patient_1Bean subjectPatient) {
        this.subjectPatient = subjectPatient;
    }

    @Hl7XmlMapping({"inFulfillmentOf/actRequest"})
    public OrderForServiceBean getInFulfillmentOfActRequest() {
        return this.inFulfillmentOfActRequest;
    }
    public void setInFulfillmentOfActRequest(OrderForServiceBean inFulfillmentOfActRequest) {
        this.inFulfillmentOfActRequest = inFulfillmentOfActRequest;
    }

    @Hl7XmlMapping({"subjectOf/annotation"})
    public NotesBean getSubjectOfAnnotation() {
        return this.subjectOfAnnotation;
    }
    public void setSubjectOfAnnotation(NotesBean subjectOfAnnotation) {
        this.subjectOfAnnotation = subjectOfAnnotation;
    }

}
