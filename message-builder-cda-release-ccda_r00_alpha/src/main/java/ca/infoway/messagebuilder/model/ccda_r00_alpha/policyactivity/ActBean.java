/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ccda_r00_alpha.policyactivity;

import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7RootType;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.CD_R2;
import ca.infoway.messagebuilder.datatype.CS_R2;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.impl.CD_R2Impl;
import ca.infoway.messagebuilder.datatype.impl.CS_R2Impl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.RawListWrapper;
import ca.infoway.messagebuilder.datatype.lang.CodedTypeR2;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ccda_r00_alpha.domainvalue.HealthInsuranceType;
import ca.infoway.messagebuilder.model.ccda_r00_alpha.domainvalue.x_ActClassDocumentEntryAct;
import ca.infoway.messagebuilder.model.ccda_r00_alpha.domainvalue.x_ActRelationshipEntryRelationship;
import ca.infoway.messagebuilder.model.ccda_r00_alpha.domainvalue.x_DocumentActMood;
import java.util.ArrayList;
import java.util.List;



@Hl7PartTypeMapping({"PolicyActivity.Act"})
@Hl7RootType
public class ActBean extends MessagePartBean {

    private static final long serialVersionUID = 20140915L;
    private CS_R2 classCode = new CS_R2Impl();
    private CS_R2 moodCode = new CS_R2Impl();
    private II templateId = new IIImpl();
    private LIST<II, Identifier> id = new LISTImpl<II, Identifier>(IIImpl.class);
    private CD_R2 code = new CD_R2Impl();
    private List<Performer2Choice> performer = new ArrayList<Performer2Choice>();
    private List<Participant2Choice> participant = new ArrayList<Participant2Choice>();
    private List<CS_R2> entryRelationshipTypeCode = new ArrayList<CS_R2>();


    /**
     * <p>Relationship: PolicyActivity.Act.classCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"classCode"})
    public CodedTypeR2<x_ActClassDocumentEntryAct> getClassCode() {
        return (CodedTypeR2<x_ActClassDocumentEntryAct>) this.classCode.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.Act.classCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setClassCode(CodedTypeR2<x_ActClassDocumentEntryAct> classCode) {
        this.classCode.setValue(classCode);
    }


    /**
     * <p>Relationship: PolicyActivity.Act.moodCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"moodCode"})
    public CodedTypeR2<x_DocumentActMood> getMoodCode() {
        return (CodedTypeR2<x_DocumentActMood>) this.moodCode.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.Act.moodCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setMoodCode(CodedTypeR2<x_DocumentActMood> moodCode) {
        this.moodCode.setValue(moodCode);
    }


    /**
     * <p>Relationship: PolicyActivity.Act.templateId</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"templateId"})
    public Identifier getTemplateId() {
        return this.templateId.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.Act.templateId</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setTemplateId(Identifier templateId) {
        this.templateId.setValue(templateId);
    }


    /**
     * <p>Relationship: PolicyActivity.Act.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (*)</p>
     */
    @Hl7XmlMapping({"id"})
    public List<Identifier> getId() {
        return this.id.rawList();
    }


    /**
     * <p>Relationship: PolicyActivity.Act.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"code"})
    public CodedTypeR2<HealthInsuranceType> getCode() {
        return (CodedTypeR2<HealthInsuranceType>) this.code.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.Act.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setCode(CodedTypeR2<HealthInsuranceType> code) {
        this.code.setValue(code);
    }


    /**
     * <p>Relationship: PolicyActivity.Act.performer</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-2)</p>
     */
    @Hl7XmlMapping({"performer"})
    public List<Performer2Choice> getPerformer() {
        return this.performer;
    }


    /**
     * <p>Relationship: PolicyActivity.Act.participant</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1-2)</p>
     */
    @Hl7XmlMapping({"participant"})
    public List<Participant2Choice> getParticipant() {
        return this.participant;
    }


    /**
     * <p>Relationship: PolicyActivity.EntryRelationship.typeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"entryRelationship/typeCode"})
    public List<CodedTypeR2<x_ActRelationshipEntryRelationship>> getEntryRelationshipTypeCode() {
        return new RawListWrapper<CS_R2, CodedTypeR2<x_ActRelationshipEntryRelationship>>(entryRelationshipTypeCode, CS_R2Impl.class);
    }

}
