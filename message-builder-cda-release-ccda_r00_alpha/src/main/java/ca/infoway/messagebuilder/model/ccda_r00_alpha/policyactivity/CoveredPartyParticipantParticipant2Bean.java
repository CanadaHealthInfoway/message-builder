/**
 * Copyright 2013 Canada Health Infoway, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author:        $LastChangedBy: tmcgrady $
 * Last modified: $LastChangedDate: 2011-05-04 15:47:15 -0400 (Wed, 04 May 2011) $
 * Revision:      $LastChangedRevision: 2623 $
 */
/* This class was auto-generated by the message builder generator tools. */
package ca.infoway.messagebuilder.model.ccda_r00_alpha.policyactivity;

import ca.infoway.messagebuilder.Code;
import ca.infoway.messagebuilder.annotation.Hl7PartTypeMapping;
import ca.infoway.messagebuilder.annotation.Hl7XmlMapping;
import ca.infoway.messagebuilder.datatype.AD;
import ca.infoway.messagebuilder.datatype.CE_R2;
import ca.infoway.messagebuilder.datatype.CS_R2;
import ca.infoway.messagebuilder.datatype.ED;
import ca.infoway.messagebuilder.datatype.II;
import ca.infoway.messagebuilder.datatype.IVL;
import ca.infoway.messagebuilder.datatype.LIST;
import ca.infoway.messagebuilder.datatype.PN;
import ca.infoway.messagebuilder.datatype.PQ;
import ca.infoway.messagebuilder.datatype.TS;
import ca.infoway.messagebuilder.datatype.impl.ADImpl;
import ca.infoway.messagebuilder.datatype.impl.CE_R2Impl;
import ca.infoway.messagebuilder.datatype.impl.CS_R2Impl;
import ca.infoway.messagebuilder.datatype.impl.EDImpl;
import ca.infoway.messagebuilder.datatype.impl.IIImpl;
import ca.infoway.messagebuilder.datatype.impl.IVLImpl;
import ca.infoway.messagebuilder.datatype.impl.LISTImpl;
import ca.infoway.messagebuilder.datatype.impl.PNImpl;
import ca.infoway.messagebuilder.datatype.impl.PQImpl;
import ca.infoway.messagebuilder.datatype.lang.CodedTypeR2;
import ca.infoway.messagebuilder.datatype.lang.EncapsulatedDataR2;
import ca.infoway.messagebuilder.datatype.lang.Identifier;
import ca.infoway.messagebuilder.datatype.lang.Interval;
import ca.infoway.messagebuilder.datatype.lang.PersonName;
import ca.infoway.messagebuilder.datatype.lang.PhysicalQuantity;
import ca.infoway.messagebuilder.datatype.lang.PostalAddress;
import ca.infoway.messagebuilder.domainvalue.EntityClassRoot;
import ca.infoway.messagebuilder.domainvalue.EntityDeterminer;
import ca.infoway.messagebuilder.domainvalue.ParticipationType;
import ca.infoway.messagebuilder.model.MessagePartBean;
import ca.infoway.messagebuilder.model.ccda_r00_alpha.domainvalue.CoverageRoleType;
import java.util.Date;
import java.util.List;



@Hl7PartTypeMapping({"PolicyActivity.CoveredPartyParticipantParticipant2"})
public class CoveredPartyParticipantParticipant2Bean extends MessagePartBean implements Participant2Choice {

    private static final long serialVersionUID = 20140915L;
    private CS_R2 typeCode = new CS_R2Impl();
    private II templateId = new IIImpl();
    private IVL<TS, Interval<Date>> time = new IVLImpl<TS, Interval<Date>>();
    private LIST<II, Identifier> participantRoleId = new LISTImpl<II, Identifier>(IIImpl.class);
    private CE_R2 participantRoleCode = new CE_R2Impl();
    private AD participantRoleAddr = new ADImpl();
    private CS_R2 participantRolePlayingEntityClassCode = new CS_R2Impl();
    private CS_R2 participantRolePlayingEntityDeterminerCode = new CS_R2Impl();
    private LIST<CS_R2, CodedTypeR2<? extends Code>> participantRolePlayingEntityRealmCode = new LISTImpl<CS_R2, CodedTypeR2<? extends Code>>(CS_R2Impl.class);
    private II participantRolePlayingEntityTypeId = new IIImpl();
    private LIST<II, Identifier> participantRolePlayingEntityTemplateId = new LISTImpl<II, Identifier>(IIImpl.class);
    private CE_R2 participantRolePlayingEntityCode = new CE_R2Impl();
    private LIST<PQ, PhysicalQuantity> participantRolePlayingEntityQuantity = new LISTImpl<PQ, PhysicalQuantity>(PQImpl.class);
    private PN participantRolePlayingEntityName = new PNImpl();
    private ED<EncapsulatedDataR2> participantRolePlayingEntityDesc = new EDImpl<EncapsulatedDataR2>();


    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipant2.typeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    @Hl7XmlMapping({"typeCode"})
    public CodedTypeR2<ParticipationType> getTypeCode() {
        return (CodedTypeR2<ParticipationType>) this.typeCode.getValue();
    }

    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipant2.typeCode</p>
     * 
     * <p>Conformance/Cardinality: REQUIRED (1)</p>
     */
    public void setTypeCode(CodedTypeR2<ParticipationType> typeCode) {
        this.typeCode.setValue(typeCode);
    }


    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipant2.templateId</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"templateId"})
    public Identifier getTemplateId() {
        return this.templateId.getValue();
    }

    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipant2.templateId</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setTemplateId(Identifier templateId) {
        this.templateId.setValue(templateId);
    }


    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipant2.time</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"time"})
    public Interval<Date> getTime() {
        return this.time.getValue();
    }

    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipant2.time</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setTime(Interval<Date> time) {
        this.time.setValue(time);
    }


    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipantRole.id</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (*)</p>
     */
    @Hl7XmlMapping({"participantRole/id"})
    public List<Identifier> getParticipantRoleId() {
        return this.participantRoleId.rawList();
    }


    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipantRole.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"participantRole/code"})
    public CodedTypeR2<CoverageRoleType> getParticipantRoleCode() {
        return (CodedTypeR2<CoverageRoleType>) this.participantRoleCode.getValue();
    }

    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipantRole.code</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setParticipantRoleCode(CodedTypeR2<CoverageRoleType> participantRoleCode) {
        this.participantRoleCode.setValue(participantRoleCode);
    }


    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipantRole.addr</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"participantRole/addr"})
    public PostalAddress getParticipantRoleAddr() {
        return this.participantRoleAddr.getValue();
    }

    /**
     * <p>Relationship: 
     * PolicyActivity.CoveredPartyParticipantParticipantRole.addr</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setParticipantRoleAddr(PostalAddress participantRoleAddr) {
        this.participantRoleAddr.setValue(participantRoleAddr);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.classCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/classCode"})
    public CodedTypeR2<EntityClassRoot> getParticipantRolePlayingEntityClassCode() {
        return (CodedTypeR2<EntityClassRoot>) this.participantRolePlayingEntityClassCode.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.classCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setParticipantRolePlayingEntityClassCode(CodedTypeR2<EntityClassRoot> participantRolePlayingEntityClassCode) {
        this.participantRolePlayingEntityClassCode.setValue(participantRolePlayingEntityClassCode);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.determinerCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/determinerCode"})
    public CodedTypeR2<EntityDeterminer> getParticipantRolePlayingEntityDeterminerCode() {
        return (CodedTypeR2<EntityDeterminer>) this.participantRolePlayingEntityDeterminerCode.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.determinerCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setParticipantRolePlayingEntityDeterminerCode(CodedTypeR2<EntityDeterminer> participantRolePlayingEntityDeterminerCode) {
        this.participantRolePlayingEntityDeterminerCode.setValue(participantRolePlayingEntityDeterminerCode);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.realmCode</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/realmCode"})
    public List<CodedTypeR2<Code>> getParticipantRolePlayingEntityRealmCode() {
        return this.participantRolePlayingEntityRealmCode.rawList(CodedTypeR2.class);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/typeId"})
    public Identifier getParticipantRolePlayingEntityTypeId() {
        return this.participantRolePlayingEntityTypeId.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.typeId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setParticipantRolePlayingEntityTypeId(Identifier participantRolePlayingEntityTypeId) {
        this.participantRolePlayingEntityTypeId.setValue(participantRolePlayingEntityTypeId);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.templateId</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/templateId"})
    public List<Identifier> getParticipantRolePlayingEntityTemplateId() {
        return this.participantRolePlayingEntityTemplateId.rawList();
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.code</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/code"})
    public CodedTypeR2<Code> getParticipantRolePlayingEntityCode() {
        return (CodedTypeR2<Code>) this.participantRolePlayingEntityCode.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.code</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setParticipantRolePlayingEntityCode(CodedTypeR2<Code> participantRolePlayingEntityCode) {
        this.participantRolePlayingEntityCode.setValue(participantRolePlayingEntityCode);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.quantity</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-*)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/quantity"})
    public List<PhysicalQuantity> getParticipantRolePlayingEntityQuantity() {
        return this.participantRolePlayingEntityQuantity.rawList();
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.name</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/name"})
    public PersonName getParticipantRolePlayingEntityName() {
        return this.participantRolePlayingEntityName.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.name</p>
     * 
     * <p>Conformance/Cardinality: MANDATORY (1)</p>
     */
    public void setParticipantRolePlayingEntityName(PersonName participantRolePlayingEntityName) {
        this.participantRolePlayingEntityName.setValue(participantRolePlayingEntityName);
    }


    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.desc</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    @Hl7XmlMapping({"participantRole/playingEntity/desc"})
    public EncapsulatedDataR2 getParticipantRolePlayingEntityDesc() {
        return this.participantRolePlayingEntityDesc.getValue();
    }

    /**
     * <p>Relationship: PolicyActivity.PlayingEntity.desc</p>
     * 
     * <p>Conformance/Cardinality: OPTIONAL (0-1)</p>
     */
    public void setParticipantRolePlayingEntityDesc(EncapsulatedDataR2 participantRolePlayingEntityDesc) {
        this.participantRolePlayingEntityDesc.setValue(participantRolePlayingEntityDesc);
    }

}
